/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setLSIGFunderAddress","args":[{"name":"funderLSigAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"depositTxn","type":"pay"},{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"funderLSigTxn","type":"pay"},{"name":"ringLSigTxn0","type":"pay"},{"name":"ringLSigTxn1","type":"pay"},{"name":"ringLSigTxn2","type":"pay"},{"name":"ringLSigTxn3","type":"pay"},{"name":"ringLSigTxn4","type":"pay"},{"name":"ringLSigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"handleAssignRolesTimeout","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"triggerTimeoutState","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":25,"ints":17},"local":{"bytes":0,"ints":0}},"keys":{"global":{"creatorAddress":{"key":"Y3JlYXRvckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"farmerKeyImage":{"key":"ZmFybWVyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"butcherKeyImage":{"key":"YnV0Y2hlcktleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"innkeepKeyImage":{"key":"aW5ua2VlcEtleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"grocerKeyImage":{"key":"Z3JvY2VyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"lsigFunderAddress":{"key":"bHNpZ0Z1bmRlckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"},"lastCommitedRound":{"key":"bGFzdENvbW1pdGVkUm91bmQ=","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:35","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:35","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]},{"teal":3,"source":"contracts/TownHall.algo.ts:35","pc":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784]},{"teal":15,"source":"contracts/TownHall.algo.ts:35","pc":[785,786]},{"teal":16,"source":"contracts/TownHall.algo.ts:35","pc":[787]},{"teal":17,"source":"contracts/TownHall.algo.ts:35","pc":[788]},{"teal":18,"source":"contracts/TownHall.algo.ts:35","pc":[789]},{"teal":19,"source":"contracts/TownHall.algo.ts:35","pc":[790,791]},{"teal":20,"source":"contracts/TownHall.algo.ts:35","pc":[792]},{"teal":21,"source":"contracts/TownHall.algo.ts:35","pc":[793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818]},{"teal":25,"source":"contracts/TownHall.algo.ts:35","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[819]},{"teal":30,"source":"contracts/TownHall.algo.ts:137","pc":[820,821,822]},{"teal":31,"source":"contracts/TownHall.algo.ts:137","pc":[823]},{"teal":32,"source":"contracts/TownHall.algo.ts:137","pc":[824]},{"teal":36,"source":"contracts/TownHall.algo.ts:137","pc":[825,826,827]},{"teal":40,"source":"contracts/TownHall.algo.ts:138","pc":[828,829]},{"teal":41,"source":"contracts/TownHall.algo.ts:138","pc":[830,831]},{"teal":42,"source":"contracts/TownHall.algo.ts:138","pc":[832]},{"teal":46,"source":"contracts/TownHall.algo.ts:140","pc":[833,834]},{"teal":47,"source":"contracts/TownHall.algo.ts:140","pc":[835,836]},{"teal":48,"source":"contracts/TownHall.algo.ts:140","pc":[837]},{"teal":52,"source":"contracts/TownHall.algo.ts:142","pc":[838]},{"teal":53,"source":"contracts/TownHall.algo.ts:142","pc":[839,840]},{"teal":54,"source":"contracts/TownHall.algo.ts:142","pc":[841,842]},{"teal":55,"source":"contracts/TownHall.algo.ts:142","pc":[843]},{"teal":56,"source":"contracts/TownHall.algo.ts:142","pc":[844]},{"teal":60,"source":"contracts/TownHall.algo.ts:143","pc":[845,846]},{"teal":61,"source":"contracts/TownHall.algo.ts:143","pc":[847,848]},{"teal":62,"source":"contracts/TownHall.algo.ts:143","pc":[849,850]},{"teal":63,"source":"contracts/TownHall.algo.ts:143","pc":[851]},{"teal":64,"source":"contracts/TownHall.algo.ts:143","pc":[852]},{"teal":68,"source":"contracts/TownHall.algo.ts:144","pc":[853,854]},{"teal":69,"source":"contracts/TownHall.algo.ts:144","pc":[855,856]},{"teal":70,"source":"contracts/TownHall.algo.ts:144","pc":[857,858]},{"teal":71,"source":"contracts/TownHall.algo.ts:144","pc":[859]},{"teal":72,"source":"contracts/TownHall.algo.ts:144","pc":[860]},{"teal":76,"source":"contracts/TownHall.algo.ts:145","pc":[861,862]},{"teal":77,"source":"contracts/TownHall.algo.ts:145","pc":[863,864]},{"teal":78,"source":"contracts/TownHall.algo.ts:145","pc":[865,866]},{"teal":79,"source":"contracts/TownHall.algo.ts:145","pc":[867]},{"teal":80,"source":"contracts/TownHall.algo.ts:145","pc":[868]},{"teal":84,"source":"contracts/TownHall.algo.ts:146","pc":[869,870]},{"teal":85,"source":"contracts/TownHall.algo.ts:146","pc":[871,872]},{"teal":86,"source":"contracts/TownHall.algo.ts:146","pc":[873,874]},{"teal":87,"source":"contracts/TownHall.algo.ts:146","pc":[875]},{"teal":88,"source":"contracts/TownHall.algo.ts:146","pc":[876]},{"teal":92,"source":"contracts/TownHall.algo.ts:147","pc":[877,878]},{"teal":93,"source":"contracts/TownHall.algo.ts:147","pc":[879,880]},{"teal":94,"source":"contracts/TownHall.algo.ts:147","pc":[881,882]},{"teal":95,"source":"contracts/TownHall.algo.ts:147","pc":[883]},{"teal":96,"source":"contracts/TownHall.algo.ts:147","pc":[884]},{"teal":100,"source":"contracts/TownHall.algo.ts:149","pc":[885,886]},{"teal":101,"source":"contracts/TownHall.algo.ts:149","pc":[887,888]},{"teal":102,"source":"contracts/TownHall.algo.ts:149","pc":[889]},{"teal":106,"source":"contracts/TownHall.algo.ts:150","pc":[890,891]},{"teal":107,"source":"contracts/TownHall.algo.ts:150","pc":[892,893]},{"teal":108,"source":"contracts/TownHall.algo.ts:150","pc":[894]},{"teal":112,"source":"contracts/TownHall.algo.ts:151","pc":[895,896]},{"teal":113,"source":"contracts/TownHall.algo.ts:151","pc":[897,898]},{"teal":114,"source":"contracts/TownHall.algo.ts:151","pc":[899]},{"teal":118,"source":"contracts/TownHall.algo.ts:152","pc":[900,901]},{"teal":119,"source":"contracts/TownHall.algo.ts:152","pc":[902,903]},{"teal":120,"source":"contracts/TownHall.algo.ts:152","pc":[904]},{"teal":124,"source":"contracts/TownHall.algo.ts:153","pc":[905,906]},{"teal":125,"source":"contracts/TownHall.algo.ts:153","pc":[907,908]},{"teal":126,"source":"contracts/TownHall.algo.ts:153","pc":[909]},{"teal":130,"source":"contracts/TownHall.algo.ts:154","pc":[910,911]},{"teal":131,"source":"contracts/TownHall.algo.ts:154","pc":[912,913]},{"teal":132,"source":"contracts/TownHall.algo.ts:154","pc":[914]},{"teal":136,"source":"contracts/TownHall.algo.ts:156","pc":[915,916]},{"teal":137,"source":"contracts/TownHall.algo.ts:156","pc":[917]},{"teal":138,"source":"contracts/TownHall.algo.ts:156","pc":[918]},{"teal":142,"source":"contracts/TownHall.algo.ts:157","pc":[919,920]},{"teal":143,"source":"contracts/TownHall.algo.ts:157","pc":[921]},{"teal":144,"source":"contracts/TownHall.algo.ts:157","pc":[922]},{"teal":148,"source":"contracts/TownHall.algo.ts:158","pc":[923,924]},{"teal":149,"source":"contracts/TownHall.algo.ts:158","pc":[925]},{"teal":150,"source":"contracts/TownHall.algo.ts:158","pc":[926]},{"teal":154,"source":"contracts/TownHall.algo.ts:159","pc":[927,928]},{"teal":155,"source":"contracts/TownHall.algo.ts:159","pc":[929]},{"teal":156,"source":"contracts/TownHall.algo.ts:159","pc":[930]},{"teal":160,"source":"contracts/TownHall.algo.ts:160","pc":[931,932]},{"teal":161,"source":"contracts/TownHall.algo.ts:160","pc":[933]},{"teal":162,"source":"contracts/TownHall.algo.ts:160","pc":[934]},{"teal":166,"source":"contracts/TownHall.algo.ts:161","pc":[935,936]},{"teal":167,"source":"contracts/TownHall.algo.ts:161","pc":[937]},{"teal":168,"source":"contracts/TownHall.algo.ts:161","pc":[938]},{"teal":172,"source":"contracts/TownHall.algo.ts:162","pc":[939,940]},{"teal":173,"source":"contracts/TownHall.algo.ts:162","pc":[941]},{"teal":174,"source":"contracts/TownHall.algo.ts:162","pc":[942]},{"teal":178,"source":"contracts/TownHall.algo.ts:164","pc":[943,944]},{"teal":179,"source":"contracts/TownHall.algo.ts:164","pc":[945]},{"teal":180,"source":"contracts/TownHall.algo.ts:164","pc":[946]},{"teal":184,"source":"contracts/TownHall.algo.ts:165","pc":[947,948]},{"teal":185,"source":"contracts/TownHall.algo.ts:165","pc":[949]},{"teal":186,"source":"contracts/TownHall.algo.ts:165","pc":[950]},{"teal":190,"source":"contracts/TownHall.algo.ts:166","pc":[951,952]},{"teal":191,"source":"contracts/TownHall.algo.ts:166","pc":[953]},{"teal":192,"source":"contracts/TownHall.algo.ts:166","pc":[954]},{"teal":196,"source":"contracts/TownHall.algo.ts:167","pc":[955,956]},{"teal":197,"source":"contracts/TownHall.algo.ts:167","pc":[957]},{"teal":198,"source":"contracts/TownHall.algo.ts:167","pc":[958]},{"teal":202,"source":"contracts/TownHall.algo.ts:168","pc":[959,960]},{"teal":203,"source":"contracts/TownHall.algo.ts:168","pc":[961]},{"teal":204,"source":"contracts/TownHall.algo.ts:168","pc":[962]},{"teal":208,"source":"contracts/TownHall.algo.ts:169","pc":[963,964]},{"teal":209,"source":"contracts/TownHall.algo.ts:169","pc":[965]},{"teal":210,"source":"contracts/TownHall.algo.ts:169","pc":[966]},{"teal":214,"source":"contracts/TownHall.algo.ts:170","pc":[967,968]},{"teal":215,"source":"contracts/TownHall.algo.ts:170","pc":[969]},{"teal":216,"source":"contracts/TownHall.algo.ts:170","pc":[970]},{"teal":220,"source":"contracts/TownHall.algo.ts:172","pc":[971,972]},{"teal":221,"source":"contracts/TownHall.algo.ts:172","pc":[973]},{"teal":222,"source":"contracts/TownHall.algo.ts:172","pc":[974]},{"teal":226,"source":"contracts/TownHall.algo.ts:173","pc":[975,976]},{"teal":227,"source":"contracts/TownHall.algo.ts:173","pc":[977]},{"teal":228,"source":"contracts/TownHall.algo.ts:173","pc":[978]},{"teal":232,"source":"contracts/TownHall.algo.ts:175","pc":[979]},{"teal":233,"source":"contracts/TownHall.algo.ts:175","pc":[980,981]},{"teal":234,"source":"contracts/TownHall.algo.ts:175","pc":[982]},{"teal":238,"source":"contracts/TownHall.algo.ts:176","pc":[983,984]},{"teal":239,"source":"contracts/TownHall.algo.ts:176","pc":[985,986]},{"teal":240,"source":"contracts/TownHall.algo.ts:176","pc":[987]},{"teal":244,"source":"contracts/TownHall.algo.ts:177","pc":[988,989]},{"teal":245,"source":"contracts/TownHall.algo.ts:177","pc":[990,991]},{"teal":246,"source":"contracts/TownHall.algo.ts:177","pc":[992]},{"teal":250,"source":"contracts/TownHall.algo.ts:179","pc":[993]},{"teal":251,"source":"contracts/TownHall.algo.ts:179","pc":[994]},{"teal":252,"source":"contracts/TownHall.algo.ts:179","pc":[995]},{"teal":256,"source":"contracts/TownHall.algo.ts:180","pc":[996,997]},{"teal":257,"source":"contracts/TownHall.algo.ts:180","pc":[998]},{"teal":258,"source":"contracts/TownHall.algo.ts:180","pc":[999]},{"teal":259,"source":"contracts/TownHall.algo.ts:137","pc":[1000]},{"teal":264,"source":"contracts/TownHall.algo.ts:188","pc":[1001,1002]},{"teal":267,"source":"contracts/TownHall.algo.ts:188","pc":[1003,1004,1005]},{"teal":268,"source":"contracts/TownHall.algo.ts:188","pc":[1006]},{"teal":271,"source":"contracts/TownHall.algo.ts:188","pc":[1007,1008,1009]},{"teal":272,"source":"contracts/TownHall.algo.ts:188","pc":[1010]},{"teal":273,"source":"contracts/TownHall.algo.ts:188","pc":[1011]},{"teal":274,"source":"contracts/TownHall.algo.ts:188","pc":[1012]},{"teal":275,"source":"contracts/TownHall.algo.ts:188","pc":[1013]},{"teal":276,"source":"contracts/TownHall.algo.ts:188","pc":[1014]},{"teal":285,"source":"contracts/TownHall.algo.ts:188","pc":[1015,1016,1017]},{"teal":289,"source":"contracts/TownHall.algo.ts:189","pc":[1018,1019]},{"teal":290,"source":"contracts/TownHall.algo.ts:188","pc":[1020]},{"teal":295,"source":"contracts/TownHall.algo.ts:210","pc":[1021,1022]},{"teal":298,"source":"contracts/TownHall.algo.ts:210","pc":[1023,1024,1025]},{"teal":299,"source":"contracts/TownHall.algo.ts:210","pc":[1026,1027,1028]},{"teal":302,"source":"contracts/TownHall.algo.ts:210","pc":[1029,1030,1031]},{"teal":303,"source":"contracts/TownHall.algo.ts:210","pc":[1032,1033,1034]},{"teal":306,"source":"contracts/TownHall.algo.ts:210","pc":[1035,1036,1037]},{"teal":307,"source":"contracts/TownHall.algo.ts:210","pc":[1038,1039,1040]},{"teal":310,"source":"contracts/TownHall.algo.ts:210","pc":[1041,1042,1043]},{"teal":311,"source":"contracts/TownHall.algo.ts:210","pc":[1044,1045,1046]},{"teal":314,"source":"contracts/TownHall.algo.ts:210","pc":[1047,1048,1049]},{"teal":315,"source":"contracts/TownHall.algo.ts:210","pc":[1050,1051,1052]},{"teal":316,"source":"contracts/TownHall.algo.ts:210","pc":[1053]},{"teal":317,"source":"contracts/TownHall.algo.ts:210","pc":[1054,1055]},{"teal":318,"source":"contracts/TownHall.algo.ts:210","pc":[1056]},{"teal":319,"source":"contracts/TownHall.algo.ts:210","pc":[1057]},{"teal":320,"source":"contracts/TownHall.algo.ts:210","pc":[1058]},{"teal":321,"source":"contracts/TownHall.algo.ts:210","pc":[1059]},{"teal":322,"source":"contracts/TownHall.algo.ts:210","pc":[1060]},{"teal":326,"source":"contracts/TownHall.algo.ts:210","pc":[1061,1062,1063]},{"teal":329,"source":"contracts/TownHall.algo.ts:210","pc":[1064]},{"teal":330,"source":"contracts/TownHall.algo.ts:210","pc":[1065]},{"teal":334,"source":"contracts/TownHall.algo.ts:212","pc":[1066,1067]},{"teal":335,"source":"contracts/TownHall.algo.ts:212","pc":[1068,1069]},{"teal":336,"source":"contracts/TownHall.algo.ts:212","pc":[1070,1071]},{"teal":337,"source":"contracts/TownHall.algo.ts:212","pc":[1072]},{"teal":338,"source":"contracts/TownHall.algo.ts:212","pc":[1073]},{"teal":339,"source":"contracts/TownHall.algo.ts:212","pc":[1074]},{"teal":340,"source":"contracts/TownHall.algo.ts:212","pc":[1075,1076]},{"teal":344,"source":"contracts/TownHall.algo.ts:213","pc":[1077,1078]},{"teal":345,"source":"contracts/TownHall.algo.ts:213","pc":[1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112]},{"teal":346,"source":"contracts/TownHall.algo.ts:213","pc":[1113]},{"teal":347,"source":"contracts/TownHall.algo.ts:213","pc":[1114,1115]},{"teal":353,"source":"contracts/TownHall.algo.ts:216","pc":[1116,1117]},{"teal":354,"source":"contracts/TownHall.algo.ts:216","pc":[1118,1119]},{"teal":355,"source":"contracts/TownHall.algo.ts:216","pc":[1120,1121]},{"teal":356,"source":"contracts/TownHall.algo.ts:216","pc":[1122,1123]},{"teal":357,"source":"contracts/TownHall.algo.ts:216","pc":[1124,1125]},{"teal":358,"source":"contracts/TownHall.algo.ts:216","pc":[1126,1127]},{"teal":359,"source":"contracts/TownHall.algo.ts:216","pc":[1128,1129]},{"teal":360,"source":"contracts/TownHall.algo.ts:216","pc":[1130,1131]},{"teal":361,"source":"contracts/TownHall.algo.ts:216","pc":[1132]},{"teal":364,"source":"contracts/TownHall.algo.ts:210","pc":[1133,1134]},{"teal":367,"source":"contracts/TownHall.algo.ts:210","pc":[1135,1136]},{"teal":368,"source":"contracts/TownHall.algo.ts:210","pc":[1137]},{"teal":373,"source":"contracts/TownHall.algo.ts:220","pc":[1138,1139]},{"teal":376,"source":"contracts/TownHall.algo.ts:220","pc":[1140,1141,1142]},{"teal":377,"source":"contracts/TownHall.algo.ts:220","pc":[1143,1144,1145]},{"teal":380,"source":"contracts/TownHall.algo.ts:220","pc":[1146,1147,1148]},{"teal":381,"source":"contracts/TownHall.algo.ts:220","pc":[1149]},{"teal":382,"source":"contracts/TownHall.algo.ts:220","pc":[1150]},{"teal":383,"source":"contracts/TownHall.algo.ts:220","pc":[1151]},{"teal":384,"source":"contracts/TownHall.algo.ts:220","pc":[1152,1153,1154]},{"teal":385,"source":"contracts/TownHall.algo.ts:220","pc":[1155]},{"teal":386,"source":"contracts/TownHall.algo.ts:220","pc":[1156]},{"teal":387,"source":"contracts/TownHall.algo.ts:220","pc":[1157]},{"teal":388,"source":"contracts/TownHall.algo.ts:220","pc":[1158]},{"teal":389,"source":"contracts/TownHall.algo.ts:220","pc":[1159]},{"teal":390,"source":"contracts/TownHall.algo.ts:220","pc":[1160]},{"teal":394,"source":"contracts/TownHall.algo.ts:220","pc":[1161,1162,1163]},{"teal":397,"source":"contracts/TownHall.algo.ts:220","pc":[1164]},{"teal":398,"source":"contracts/TownHall.algo.ts:220","pc":[1165,1166]},{"teal":402,"source":"contracts/TownHall.algo.ts:221","pc":[1167,1168]},{"teal":403,"source":"contracts/TownHall.algo.ts:221","pc":[1169]},{"teal":404,"source":"contracts/TownHall.algo.ts:221","pc":[1170,1171]},{"teal":408,"source":"contracts/TownHall.algo.ts:222","pc":[1172,1173]},{"teal":409,"source":"contracts/TownHall.algo.ts:222","pc":[1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223]},{"teal":410,"source":"contracts/TownHall.algo.ts:222","pc":[1224]},{"teal":411,"source":"contracts/TownHall.algo.ts:222","pc":[1225,1226]},{"teal":415,"source":"contracts/TownHall.algo.ts:225","pc":[1227,1228]},{"teal":416,"source":"contracts/TownHall.algo.ts:225","pc":[1229,1230]},{"teal":417,"source":"contracts/TownHall.algo.ts:225","pc":[1231,1232]},{"teal":421,"source":"contracts/TownHall.algo.ts:226","pc":[1233,1234]},{"teal":424,"source":"contracts/TownHall.algo.ts:220","pc":[1235,1236]},{"teal":427,"source":"contracts/TownHall.algo.ts:220","pc":[1237,1238]},{"teal":428,"source":"contracts/TownHall.algo.ts:220","pc":[1239]},{"teal":433,"source":"contracts/TownHall.algo.ts:231","pc":[1240,1241]},{"teal":436,"source":"contracts/TownHall.algo.ts:231","pc":[1242,1243,1244]},{"teal":437,"source":"contracts/TownHall.algo.ts:231","pc":[1245]},{"teal":438,"source":"contracts/TownHall.algo.ts:231","pc":[1246]},{"teal":439,"source":"contracts/TownHall.algo.ts:231","pc":[1247]},{"teal":440,"source":"contracts/TownHall.algo.ts:231","pc":[1248]},{"teal":441,"source":"contracts/TownHall.algo.ts:231","pc":[1249]},{"teal":445,"source":"contracts/TownHall.algo.ts:231","pc":[1250,1251,1252]},{"teal":449,"source":"contracts/TownHall.algo.ts:232","pc":[1253]},{"teal":450,"source":"contracts/TownHall.algo.ts:232","pc":[1254]},{"teal":451,"source":"contracts/TownHall.algo.ts:231","pc":[1255]},{"teal":456,"source":"contracts/TownHall.algo.ts:235","pc":[1256,1257,1258]},{"teal":457,"source":"contracts/TownHall.algo.ts:235","pc":[1259]},{"teal":458,"source":"contracts/TownHall.algo.ts:235","pc":[1260]},{"teal":459,"source":"contracts/TownHall.algo.ts:235","pc":[1261]},{"teal":460,"source":"contracts/TownHall.algo.ts:235","pc":[1262]},{"teal":463,"source":"contracts/TownHall.algo.ts:235","errorMessage":"argument 0 (funderLSigAddress) for setLSIGFunderAddress must be a address","pc":[1263]},{"teal":466,"source":"contracts/TownHall.algo.ts:235","pc":[1264,1265,1266]},{"teal":467,"source":"contracts/TownHall.algo.ts:235","pc":[1267]},{"teal":468,"source":"contracts/TownHall.algo.ts:235","pc":[1268]},{"teal":472,"source":"contracts/TownHall.algo.ts:235","pc":[1269,1270,1271]},{"teal":479,"source":"contracts/TownHall.algo.ts:237","pc":[1272]},{"teal":480,"source":"contracts/TownHall.algo.ts:237","pc":[1273]},{"teal":481,"source":"contracts/TownHall.algo.ts:237","pc":[1274]},{"teal":482,"source":"contracts/TownHall.algo.ts:237","pc":[1275]},{"teal":485,"source":"contracts/TownHall.algo.ts:236","errorMessage":"Invalid method call: Contract is not in Set LSig Funder Address state.","pc":[1276]},{"teal":492,"source":"contracts/TownHall.algo.ts:242","pc":[1277,1278]},{"teal":493,"source":"contracts/TownHall.algo.ts:242","pc":[1279,1280]},{"teal":494,"source":"contracts/TownHall.algo.ts:242","pc":[1281]},{"teal":495,"source":"contracts/TownHall.algo.ts:242","pc":[1282]},{"teal":498,"source":"contracts/TownHall.algo.ts:241","errorMessage":"Error state: Only the creator can set the LSig Funder Address!","pc":[1283]},{"teal":502,"source":"contracts/TownHall.algo.ts:246","pc":[1284,1285]},{"teal":503,"source":"contracts/TownHall.algo.ts:246","pc":[1286]},{"teal":504,"source":"contracts/TownHall.algo.ts:246","pc":[1287,1288]},{"teal":505,"source":"contracts/TownHall.algo.ts:246","pc":[1289]},{"teal":508,"source":"contracts/TownHall.algo.ts:246","errorMessage":"Error state: LSig Funder Address already set!","pc":[1290]},{"teal":512,"source":"contracts/TownHall.algo.ts:248","pc":[1291,1292]},{"teal":513,"source":"contracts/TownHall.algo.ts:248","pc":[1293,1294]},{"teal":514,"source":"contracts/TownHall.algo.ts:248","pc":[1295]},{"teal":517,"source":"contracts/TownHall.algo.ts:248","errorMessage":"Error state: LSig Funder Address cannot be the zero address.","pc":[1296]},{"teal":521,"source":"contracts/TownHall.algo.ts:251","pc":[1297,1298]},{"teal":522,"source":"contracts/TownHall.algo.ts:251","pc":[1299,1300]},{"teal":523,"source":"contracts/TownHall.algo.ts:251","pc":[1301]},{"teal":527,"source":"contracts/TownHall.algo.ts:253","pc":[1302]},{"teal":528,"source":"contracts/Constants.ts:17","pc":[1303]},{"teal":529,"source":"contracts/TownHall.algo.ts:253","pc":[1304]},{"teal":530,"source":"contracts/TownHall.algo.ts:235","pc":[1305]},{"teal":535,"source":"contracts/TownHall.algo.ts:256","pc":[1306,1307,1308]},{"teal":536,"source":"contracts/TownHall.algo.ts:256","pc":[1309,1310,1311]},{"teal":539,"source":"contracts/TownHall.algo.ts:256","pc":[1312,1313]},{"teal":540,"source":"contracts/TownHall.algo.ts:256","pc":[1314]},{"teal":541,"source":"contracts/TownHall.algo.ts:256","pc":[1315]},{"teal":542,"source":"contracts/TownHall.algo.ts:256","pc":[1316]},{"teal":543,"source":"contracts/TownHall.algo.ts:256","pc":[1317,1318]},{"teal":544,"source":"contracts/TownHall.algo.ts:256","pc":[1319]},{"teal":545,"source":"contracts/TownHall.algo.ts:256","pc":[1320]},{"teal":548,"source":"contracts/TownHall.algo.ts:256","errorMessage":"argument 1 (depositTxn) for joinGameLobby must be a pay transaction","pc":[1321]},{"teal":551,"source":"contracts/TownHall.algo.ts:256","pc":[1322,1323,1324]},{"teal":552,"source":"contracts/TownHall.algo.ts:256","pc":[1325]},{"teal":553,"source":"contracts/TownHall.algo.ts:256","pc":[1326]},{"teal":557,"source":"contracts/TownHall.algo.ts:256","pc":[1327,1328,1329]},{"teal":560,"source":"contracts/TownHall.algo.ts:256","pc":[1330]},{"teal":561,"source":"contracts/TownHall.algo.ts:256","pc":[1331,1332]},{"teal":565,"source":"contracts/TownHall.algo.ts:257","pc":[1333]},{"teal":566,"source":"contracts/TownHall.algo.ts:257","pc":[1334]},{"teal":567,"source":"contracts/Constants.ts:17","pc":[1335]},{"teal":568,"source":"contracts/TownHall.algo.ts:257","pc":[1336]},{"teal":571,"source":"contracts/TownHall.algo.ts:257","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1337]},{"teal":578,"source":"contracts/TownHall.algo.ts:260","pc":[1338,1339]},{"teal":579,"source":"contracts/TownHall.algo.ts:260","pc":[1340]},{"teal":580,"source":"contracts/TownHall.algo.ts:260","pc":[1341]},{"teal":581,"source":"contracts/TownHall.algo.ts:260","pc":[1342]},{"teal":584,"source":"contracts/TownHall.algo.ts:259","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1343]},{"teal":594,"source":"contracts/TownHall.algo.ts:265","pc":[1344]},{"teal":595,"source":"contracts/TownHall.algo.ts:265","pc":[1345]},{"teal":596,"source":"contracts/TownHall.algo.ts:265","pc":[1346,1347,1348]},{"teal":597,"source":"contracts/TownHall.algo.ts:265","pc":[1349,1350]},{"teal":598,"source":"contracts/TownHall.algo.ts:265","pc":[1351]},{"teal":599,"source":"contracts/TownHall.algo.ts:265","pc":[1352]},{"teal":600,"source":"contracts/TownHall.algo.ts:265","pc":[1353,1354,1355]},{"teal":601,"source":"contracts/TownHall.algo.ts:266","pc":[1356,1357]},{"teal":602,"source":"contracts/TownHall.algo.ts:266","pc":[1358]},{"teal":603,"source":"contracts/TownHall.algo.ts:266","pc":[1359,1360,1361]},{"teal":604,"source":"contracts/TownHall.algo.ts:266","pc":[1362,1363]},{"teal":605,"source":"contracts/TownHall.algo.ts:266","pc":[1364]},{"teal":606,"source":"contracts/TownHall.algo.ts:265","pc":[1365]},{"teal":609,"source":"contracts/TownHall.algo.ts:266","pc":[1366]},{"teal":610,"source":"contracts/TownHall.algo.ts:266","pc":[1367,1368,1369]},{"teal":611,"source":"contracts/TownHall.algo.ts:267","pc":[1370,1371]},{"teal":612,"source":"contracts/TownHall.algo.ts:267","pc":[1372]},{"teal":613,"source":"contracts/TownHall.algo.ts:267","pc":[1373,1374,1375]},{"teal":614,"source":"contracts/TownHall.algo.ts:267","pc":[1376,1377]},{"teal":615,"source":"contracts/TownHall.algo.ts:267","pc":[1378]},{"teal":616,"source":"contracts/TownHall.algo.ts:266","pc":[1379]},{"teal":619,"source":"contracts/TownHall.algo.ts:267","pc":[1380]},{"teal":620,"source":"contracts/TownHall.algo.ts:267","pc":[1381,1382,1383]},{"teal":621,"source":"contracts/TownHall.algo.ts:268","pc":[1384,1385]},{"teal":622,"source":"contracts/TownHall.algo.ts:268","pc":[1386]},{"teal":623,"source":"contracts/TownHall.algo.ts:268","pc":[1387,1388,1389]},{"teal":624,"source":"contracts/TownHall.algo.ts:268","pc":[1390,1391]},{"teal":625,"source":"contracts/TownHall.algo.ts:268","pc":[1392]},{"teal":626,"source":"contracts/TownHall.algo.ts:267","pc":[1393]},{"teal":629,"source":"contracts/TownHall.algo.ts:268","pc":[1394]},{"teal":630,"source":"contracts/TownHall.algo.ts:268","pc":[1395,1396,1397]},{"teal":631,"source":"contracts/TownHall.algo.ts:269","pc":[1398,1399]},{"teal":632,"source":"contracts/TownHall.algo.ts:269","pc":[1400]},{"teal":633,"source":"contracts/TownHall.algo.ts:269","pc":[1401,1402,1403]},{"teal":634,"source":"contracts/TownHall.algo.ts:269","pc":[1404,1405]},{"teal":635,"source":"contracts/TownHall.algo.ts:269","pc":[1406]},{"teal":636,"source":"contracts/TownHall.algo.ts:268","pc":[1407]},{"teal":639,"source":"contracts/TownHall.algo.ts:269","pc":[1408]},{"teal":640,"source":"contracts/TownHall.algo.ts:269","pc":[1409,1410,1411]},{"teal":641,"source":"contracts/TownHall.algo.ts:270","pc":[1412,1413]},{"teal":642,"source":"contracts/TownHall.algo.ts:270","pc":[1414]},{"teal":643,"source":"contracts/TownHall.algo.ts:270","pc":[1415,1416,1417]},{"teal":644,"source":"contracts/TownHall.algo.ts:270","pc":[1418,1419]},{"teal":645,"source":"contracts/TownHall.algo.ts:270","pc":[1420]},{"teal":646,"source":"contracts/TownHall.algo.ts:269","pc":[1421]},{"teal":649,"source":"contracts/TownHall.algo.ts:264","pc":[1422,1423,1424]},{"teal":653,"source":"contracts/TownHall.algo.ts:272","errorMessage":"Error state: Player already joined the game!","pc":[1425]},{"teal":658,"source":"contracts/TownHall.algo.ts:277","pc":[1426,1427]},{"teal":659,"source":"contracts/TownHall.algo.ts:277","pc":[1428,1429]},{"teal":660,"source":"contracts/TownHall.algo.ts:277","pc":[1430,1431,1432,1433]},{"teal":661,"source":"contracts/TownHall.algo.ts:277","pc":[1434]},{"teal":664,"source":"contracts/TownHall.algo.ts:277","errorMessage":"Invalid FunderLSig amount!","pc":[1435]},{"teal":668,"source":"contracts/TownHall.algo.ts:279","pc":[1436,1437]},{"teal":669,"source":"contracts/TownHall.algo.ts:279","pc":[1438,1439,1440]},{"teal":670,"source":"contracts/TownHall.algo.ts:279","pc":[1441,1442]},{"teal":674,"source":"contracts/TownHall.algo.ts:280","pc":[1443,1444]},{"teal":675,"source":"contracts/TownHall.algo.ts:280","pc":[1445,1446,1447]},{"teal":676,"source":"contracts/TownHall.algo.ts:280","pc":[1448,1449]},{"teal":680,"source":"contracts/TownHall.algo.ts:281","pc":[1450,1451]},{"teal":681,"source":"contracts/TownHall.algo.ts:281","pc":[1452,1453,1454]},{"teal":682,"source":"contracts/TownHall.algo.ts:281","pc":[1455,1456]},{"teal":686,"source":"contracts/TownHall.algo.ts:282","pc":[1457,1458]},{"teal":687,"source":"contracts/TownHall.algo.ts:282","pc":[1459,1460,1461]},{"teal":688,"source":"contracts/TownHall.algo.ts:282","pc":[1462]},{"teal":689,"source":"contracts/TownHall.algo.ts:282","pc":[1463]},{"teal":690,"source":"contracts/TownHall.algo.ts:282","pc":[1464,1465]},{"teal":694,"source":"contracts/TownHall.algo.ts:287","pc":[1466,1467]},{"teal":695,"source":"contracts/TownHall.algo.ts:287","pc":[1468,1469]},{"teal":696,"source":"contracts/TownHall.algo.ts:287","pc":[1470,1471]},{"teal":697,"source":"contracts/TownHall.algo.ts:287","pc":[1472,1473]},{"teal":698,"source":"contracts/TownHall.algo.ts:287","pc":[1474,1475,1476]},{"teal":701,"source":"contracts/TownHall.algo.ts:287","errorMessage":"DLOG NIZK Proof failed!","pc":[1477]},{"teal":706,"source":"contracts/TownHall.algo.ts:289","pc":[1478,1479]},{"teal":707,"source":"contracts/TownHall.algo.ts:289","pc":[1480]},{"teal":708,"source":"contracts/TownHall.algo.ts:289","pc":[1481]},{"teal":709,"source":"contracts/TownHall.algo.ts:289","pc":[1482]},{"teal":710,"source":"contracts/TownHall.algo.ts:289","pc":[1483]},{"teal":711,"source":"contracts/TownHall.algo.ts:289","pc":[1484,1485,1486]},{"teal":716,"source":"contracts/TownHall.algo.ts:290","pc":[1487,1488]},{"teal":717,"source":"contracts/TownHall.algo.ts:290","pc":[1489,1490]},{"teal":718,"source":"contracts/TownHall.algo.ts:290","pc":[1491]},{"teal":719,"source":"contracts/TownHall.algo.ts:290","pc":[1492]},{"teal":720,"source":"contracts/TownHall.algo.ts:289","pc":[1493,1494,1495]},{"teal":725,"source":"contracts/TownHall.algo.ts:292","pc":[1496,1497]},{"teal":726,"source":"contracts/TownHall.algo.ts:292","pc":[1498]},{"teal":727,"source":"contracts/TownHall.algo.ts:292","pc":[1499]},{"teal":730,"source":"contracts/TownHall.algo.ts:292","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1500]},{"teal":731,"source":"contracts/TownHall.algo.ts:292","pc":[1501,1502]},{"teal":732,"source":"contracts/TownHall.algo.ts:292","pc":[1503]},{"teal":733,"source":"contracts/TownHall.algo.ts:292","pc":[1504]},{"teal":738,"source":"contracts/TownHall.algo.ts:296","pc":[1505,1506]},{"teal":739,"source":"contracts/TownHall.algo.ts:296","pc":[1507]},{"teal":740,"source":"contracts/TownHall.algo.ts:296","pc":[1508]},{"teal":741,"source":"contracts/TownHall.algo.ts:296","pc":[1509]},{"teal":744,"source":"contracts/TownHall.algo.ts:296","errorMessage":"PK Box failed to be created.","pc":[1510]},{"teal":748,"source":"contracts/TownHall.algo.ts:298","pc":[1511,1512]},{"teal":749,"source":"contracts/TownHall.algo.ts:298","pc":[1513,1514]},{"teal":750,"source":"contracts/TownHall.algo.ts:298","pc":[1515]},{"teal":751,"source":"contracts/TownHall.algo.ts:298","pc":[1516,1517]},{"teal":752,"source":"contracts/TownHall.algo.ts:298","pc":[1518]},{"teal":753,"source":"contracts/TownHall.algo.ts:298","pc":[1519,1520]},{"teal":754,"source":"contracts/TownHall.algo.ts:298","pc":[1521]},{"teal":758,"source":"contracts/TownHall.algo.ts:299","pc":[1522,1523]},{"teal":759,"source":"contracts/TownHall.algo.ts:299","pc":[1524]},{"teal":760,"source":"contracts/TownHall.algo.ts:299","pc":[1525]},{"teal":761,"source":"contracts/TownHall.algo.ts:299","pc":[1526]},{"teal":762,"source":"contracts/TownHall.algo.ts:299","pc":[1527,1528]},{"teal":763,"source":"contracts/TownHall.algo.ts:299","pc":[1529]},{"teal":764,"source":"contracts/TownHall.algo.ts:299","pc":[1530]},{"teal":768,"source":"contracts/TownHall.algo.ts:301","pc":[1531,1532]},{"teal":769,"source":"contracts/TownHall.algo.ts:301","pc":[1533]},{"teal":770,"source":"contracts/TownHall.algo.ts:301","pc":[1534,1535]},{"teal":771,"source":"contracts/TownHall.algo.ts:301","pc":[1536]},{"teal":774,"source":"contracts/TownHall.algo.ts:301","errorMessage":"Error state: LSig Funder Address not set!","pc":[1537]},{"teal":781,"source":"contracts/TownHall.algo.ts:303","pc":[1538,1539]},{"teal":782,"source":"contracts/TownHall.algo.ts:303","pc":[1540]},{"teal":783,"source":"contracts/TownHall.algo.ts:303","pc":[1541]},{"teal":784,"source":"contracts/TownHall.algo.ts:303","pc":[1542]},{"teal":787,"source":"contracts/TownHall.algo.ts:302","errorMessage":"Last commited round should not be set until all players have joined the game","pc":[1543]},{"teal":794,"source":"contracts/TownHall.algo.ts:308","pc":[1544]},{"teal":795,"source":"contracts/TownHall.algo.ts:308","pc":[1545]},{"teal":796,"source":"contracts/TownHall.algo.ts:308","pc":[1546,1547]},{"teal":800,"source":"contracts/TownHall.algo.ts:309","pc":[1548,1549]},{"teal":801,"source":"contracts/TownHall.algo.ts:309","pc":[1550,1551]},{"teal":805,"source":"contracts/TownHall.algo.ts:310","pc":[1552,1553]},{"teal":806,"source":"contracts/TownHall.algo.ts:310","pc":[1554]},{"teal":807,"source":"contracts/TownHall.algo.ts:310","pc":[1555,1556]},{"teal":810,"source":"contracts/TownHall.algo.ts:308","pc":[1557]},{"teal":811,"source":"contracts/TownHall.algo.ts:308","pc":[1558,1559]},{"teal":814,"source":"contracts/TownHall.algo.ts:308","pc":[1560]},{"teal":819,"source":"contracts/TownHall.algo.ts:313","pc":[1561]},{"teal":820,"source":"contracts/TownHall.algo.ts:313","pc":[1562]},{"teal":821,"source":"contracts/TownHall.algo.ts:313","pc":[1563,1564,1565]},{"teal":822,"source":"contracts/TownHall.algo.ts:313","pc":[1566,1567]},{"teal":823,"source":"contracts/TownHall.algo.ts:313","pc":[1568]},{"teal":824,"source":"contracts/TownHall.algo.ts:313","pc":[1569,1570,1571]},{"teal":829,"source":"contracts/TownHall.algo.ts:314","pc":[1572]},{"teal":830,"source":"contracts/TownHall.algo.ts:314","pc":[1573]},{"teal":831,"source":"contracts/TownHall.algo.ts:314","pc":[1574]},{"teal":832,"source":"contracts/TownHall.algo.ts:314","pc":[1575,1576]},{"teal":833,"source":"contracts/TownHall.algo.ts:314","pc":[1577]},{"teal":834,"source":"contracts/TownHall.algo.ts:314","pc":[1578]},{"teal":835,"source":"contracts/TownHall.algo.ts:314","pc":[1579]},{"teal":836,"source":"contracts/TownHall.algo.ts:314","pc":[1580]},{"teal":840,"source":"contracts/TownHall.algo.ts:315","pc":[1581]},{"teal":846,"source":"contracts/TownHall.algo.ts:317","pc":[1582,1583]},{"teal":847,"source":"contracts/TownHall.algo.ts:317","pc":[1584]},{"teal":848,"source":"contracts/TownHall.algo.ts:317","pc":[1585,1586,1587]},{"teal":849,"source":"contracts/TownHall.algo.ts:317","pc":[1588,1589]},{"teal":850,"source":"contracts/TownHall.algo.ts:317","pc":[1590]},{"teal":851,"source":"contracts/TownHall.algo.ts:317","pc":[1591,1592,1593]},{"teal":856,"source":"contracts/TownHall.algo.ts:318","pc":[1594,1595]},{"teal":857,"source":"contracts/TownHall.algo.ts:318","pc":[1596]},{"teal":858,"source":"contracts/TownHall.algo.ts:318","pc":[1597]},{"teal":859,"source":"contracts/TownHall.algo.ts:318","pc":[1598,1599]},{"teal":860,"source":"contracts/TownHall.algo.ts:318","pc":[1600]},{"teal":861,"source":"contracts/TownHall.algo.ts:318","pc":[1601,1602]},{"teal":862,"source":"contracts/TownHall.algo.ts:318","pc":[1603]},{"teal":863,"source":"contracts/TownHall.algo.ts:318","pc":[1604]},{"teal":867,"source":"contracts/TownHall.algo.ts:319","pc":[1605]},{"teal":873,"source":"contracts/TownHall.algo.ts:321","pc":[1606,1607]},{"teal":874,"source":"contracts/TownHall.algo.ts:321","pc":[1608]},{"teal":875,"source":"contracts/TownHall.algo.ts:321","pc":[1609,1610,1611]},{"teal":876,"source":"contracts/TownHall.algo.ts:321","pc":[1612,1613]},{"teal":877,"source":"contracts/TownHall.algo.ts:321","pc":[1614]},{"teal":878,"source":"contracts/TownHall.algo.ts:321","pc":[1615,1616,1617]},{"teal":883,"source":"contracts/TownHall.algo.ts:322","pc":[1618,1619]},{"teal":884,"source":"contracts/TownHall.algo.ts:322","pc":[1620]},{"teal":885,"source":"contracts/TownHall.algo.ts:322","pc":[1621]},{"teal":886,"source":"contracts/TownHall.algo.ts:322","pc":[1622,1623]},{"teal":887,"source":"contracts/TownHall.algo.ts:322","pc":[1624]},{"teal":888,"source":"contracts/TownHall.algo.ts:322","pc":[1625,1626]},{"teal":889,"source":"contracts/TownHall.algo.ts:322","pc":[1627]},{"teal":890,"source":"contracts/TownHall.algo.ts:322","pc":[1628]},{"teal":894,"source":"contracts/TownHall.algo.ts:323","pc":[1629]},{"teal":900,"source":"contracts/TownHall.algo.ts:325","pc":[1630,1631]},{"teal":901,"source":"contracts/TownHall.algo.ts:325","pc":[1632]},{"teal":902,"source":"contracts/TownHall.algo.ts:325","pc":[1633,1634,1635]},{"teal":903,"source":"contracts/TownHall.algo.ts:325","pc":[1636,1637]},{"teal":904,"source":"contracts/TownHall.algo.ts:325","pc":[1638]},{"teal":905,"source":"contracts/TownHall.algo.ts:325","pc":[1639,1640,1641]},{"teal":910,"source":"contracts/TownHall.algo.ts:326","pc":[1642,1643]},{"teal":911,"source":"contracts/TownHall.algo.ts:326","pc":[1644]},{"teal":912,"source":"contracts/TownHall.algo.ts:326","pc":[1645]},{"teal":913,"source":"contracts/TownHall.algo.ts:326","pc":[1646,1647]},{"teal":914,"source":"contracts/TownHall.algo.ts:326","pc":[1648]},{"teal":915,"source":"contracts/TownHall.algo.ts:326","pc":[1649,1650]},{"teal":916,"source":"contracts/TownHall.algo.ts:326","pc":[1651]},{"teal":917,"source":"contracts/TownHall.algo.ts:326","pc":[1652]},{"teal":921,"source":"contracts/TownHall.algo.ts:327","pc":[1653]},{"teal":927,"source":"contracts/TownHall.algo.ts:329","pc":[1654,1655]},{"teal":928,"source":"contracts/TownHall.algo.ts:329","pc":[1656]},{"teal":929,"source":"contracts/TownHall.algo.ts:329","pc":[1657,1658,1659]},{"teal":930,"source":"contracts/TownHall.algo.ts:329","pc":[1660,1661]},{"teal":931,"source":"contracts/TownHall.algo.ts:329","pc":[1662]},{"teal":932,"source":"contracts/TownHall.algo.ts:329","pc":[1663,1664,1665]},{"teal":937,"source":"contracts/TownHall.algo.ts:330","pc":[1666,1667]},{"teal":938,"source":"contracts/TownHall.algo.ts:330","pc":[1668]},{"teal":939,"source":"contracts/TownHall.algo.ts:330","pc":[1669]},{"teal":940,"source":"contracts/TownHall.algo.ts:330","pc":[1670,1671]},{"teal":941,"source":"contracts/TownHall.algo.ts:330","pc":[1672]},{"teal":942,"source":"contracts/TownHall.algo.ts:330","pc":[1673,1674]},{"teal":943,"source":"contracts/TownHall.algo.ts:330","pc":[1675]},{"teal":944,"source":"contracts/TownHall.algo.ts:330","pc":[1676]},{"teal":948,"source":"contracts/TownHall.algo.ts:331","pc":[1677]},{"teal":954,"source":"contracts/TownHall.algo.ts:333","pc":[1678,1679]},{"teal":955,"source":"contracts/TownHall.algo.ts:333","pc":[1680]},{"teal":956,"source":"contracts/TownHall.algo.ts:333","pc":[1681,1682,1683]},{"teal":957,"source":"contracts/TownHall.algo.ts:333","pc":[1684,1685]},{"teal":958,"source":"contracts/TownHall.algo.ts:333","pc":[1686]},{"teal":959,"source":"contracts/TownHall.algo.ts:333","pc":[1687,1688,1689]},{"teal":964,"source":"contracts/TownHall.algo.ts:334","pc":[1690,1691]},{"teal":965,"source":"contracts/TownHall.algo.ts:334","pc":[1692]},{"teal":966,"source":"contracts/TownHall.algo.ts:334","pc":[1693]},{"teal":967,"source":"contracts/TownHall.algo.ts:334","pc":[1694,1695]},{"teal":968,"source":"contracts/TownHall.algo.ts:334","pc":[1696]},{"teal":969,"source":"contracts/TownHall.algo.ts:334","pc":[1697,1698]},{"teal":970,"source":"contracts/TownHall.algo.ts:334","pc":[1699]},{"teal":971,"source":"contracts/TownHall.algo.ts:334","pc":[1700]},{"teal":975,"source":"contracts/TownHall.algo.ts:335","pc":[1701]},{"teal":976,"source":"contracts/Constants.ts:18","pc":[1702,1703]},{"teal":977,"source":"contracts/TownHall.algo.ts:335","pc":[1704]},{"teal":981,"source":"contracts/TownHall.algo.ts:336","pc":[1705,1706]},{"teal":982,"source":"contracts/TownHall.algo.ts:336","pc":[1707,1708]},{"teal":983,"source":"contracts/TownHall.algo.ts:336","pc":[1709]},{"teal":987,"source":"contracts/TownHall.algo.ts:337","pc":[1710]},{"teal":991,"source":"contracts/TownHall.algo.ts:340","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1711]},{"teal":992,"source":"contracts/TownHall.algo.ts:256","pc":[1712]},{"teal":997,"source":"contracts/TownHall.algo.ts:355","pc":[1713,1714]},{"teal":998,"source":"contracts/TownHall.algo.ts:355","pc":[1715]},{"teal":999,"source":"contracts/TownHall.algo.ts:355","pc":[1716]},{"teal":1000,"source":"contracts/TownHall.algo.ts:355","pc":[1717]},{"teal":1001,"source":"contracts/TownHall.algo.ts:355","pc":[1718,1719]},{"teal":1002,"source":"contracts/TownHall.algo.ts:355","pc":[1720]},{"teal":1003,"source":"contracts/TownHall.algo.ts:355","pc":[1721]},{"teal":1006,"source":"contracts/TownHall.algo.ts:355","errorMessage":"argument 0 (ringLSigTxn5) for assignRole must be a pay transaction","pc":[1722]},{"teal":1009,"source":"contracts/TownHall.algo.ts:354","pc":[1723,1724]},{"teal":1010,"source":"contracts/TownHall.algo.ts:354","pc":[1725,1726]},{"teal":1011,"source":"contracts/TownHall.algo.ts:354","pc":[1727]},{"teal":1012,"source":"contracts/TownHall.algo.ts:354","pc":[1728]},{"teal":1013,"source":"contracts/TownHall.algo.ts:354","pc":[1729,1730]},{"teal":1014,"source":"contracts/TownHall.algo.ts:354","pc":[1731]},{"teal":1015,"source":"contracts/TownHall.algo.ts:354","pc":[1732]},{"teal":1018,"source":"contracts/TownHall.algo.ts:354","errorMessage":"argument 1 (ringLSigTxn4) for assignRole must be a pay transaction","pc":[1733]},{"teal":1021,"source":"contracts/TownHall.algo.ts:353","pc":[1734,1735]},{"teal":1022,"source":"contracts/TownHall.algo.ts:353","pc":[1736,1737]},{"teal":1023,"source":"contracts/TownHall.algo.ts:353","pc":[1738]},{"teal":1024,"source":"contracts/TownHall.algo.ts:353","pc":[1739]},{"teal":1025,"source":"contracts/TownHall.algo.ts:353","pc":[1740,1741]},{"teal":1026,"source":"contracts/TownHall.algo.ts:353","pc":[1742]},{"teal":1027,"source":"contracts/TownHall.algo.ts:353","pc":[1743]},{"teal":1030,"source":"contracts/TownHall.algo.ts:353","errorMessage":"argument 2 (ringLSigTxn3) for assignRole must be a pay transaction","pc":[1744]},{"teal":1033,"source":"contracts/TownHall.algo.ts:352","pc":[1745,1746]},{"teal":1034,"source":"contracts/TownHall.algo.ts:352","pc":[1747,1748]},{"teal":1035,"source":"contracts/TownHall.algo.ts:352","pc":[1749]},{"teal":1036,"source":"contracts/TownHall.algo.ts:352","pc":[1750]},{"teal":1037,"source":"contracts/TownHall.algo.ts:352","pc":[1751,1752]},{"teal":1038,"source":"contracts/TownHall.algo.ts:352","pc":[1753]},{"teal":1039,"source":"contracts/TownHall.algo.ts:352","pc":[1754]},{"teal":1042,"source":"contracts/TownHall.algo.ts:352","errorMessage":"argument 3 (ringLSigTxn2) for assignRole must be a pay transaction","pc":[1755]},{"teal":1045,"source":"contracts/TownHall.algo.ts:351","pc":[1756,1757]},{"teal":1046,"source":"contracts/TownHall.algo.ts:351","pc":[1758,1759]},{"teal":1047,"source":"contracts/TownHall.algo.ts:351","pc":[1760]},{"teal":1048,"source":"contracts/TownHall.algo.ts:351","pc":[1761]},{"teal":1049,"source":"contracts/TownHall.algo.ts:351","pc":[1762,1763]},{"teal":1050,"source":"contracts/TownHall.algo.ts:351","pc":[1764]},{"teal":1051,"source":"contracts/TownHall.algo.ts:351","pc":[1765]},{"teal":1054,"source":"contracts/TownHall.algo.ts:351","errorMessage":"argument 4 (ringLSigTxn1) for assignRole must be a pay transaction","pc":[1766]},{"teal":1057,"source":"contracts/TownHall.algo.ts:350","pc":[1767,1768]},{"teal":1058,"source":"contracts/TownHall.algo.ts:350","pc":[1769]},{"teal":1059,"source":"contracts/TownHall.algo.ts:350","pc":[1770]},{"teal":1060,"source":"contracts/TownHall.algo.ts:350","pc":[1771]},{"teal":1061,"source":"contracts/TownHall.algo.ts:350","pc":[1772,1773]},{"teal":1062,"source":"contracts/TownHall.algo.ts:350","pc":[1774]},{"teal":1063,"source":"contracts/TownHall.algo.ts:350","pc":[1775]},{"teal":1066,"source":"contracts/TownHall.algo.ts:350","errorMessage":"argument 5 (ringLSigTxn0) for assignRole must be a pay transaction","pc":[1776]},{"teal":1069,"source":"contracts/TownHall.algo.ts:349","pc":[1777,1778]},{"teal":1070,"source":"contracts/TownHall.algo.ts:349","pc":[1779,1780]},{"teal":1071,"source":"contracts/TownHall.algo.ts:349","pc":[1781]},{"teal":1072,"source":"contracts/TownHall.algo.ts:349","pc":[1782]},{"teal":1073,"source":"contracts/TownHall.algo.ts:349","pc":[1783,1784]},{"teal":1074,"source":"contracts/TownHall.algo.ts:349","pc":[1785]},{"teal":1075,"source":"contracts/TownHall.algo.ts:349","pc":[1786]},{"teal":1078,"source":"contracts/TownHall.algo.ts:349","errorMessage":"argument 6 (funderLSigTxn) for assignRole must be a pay transaction","pc":[1787]},{"teal":1081,"source":"contracts/TownHall.algo.ts:348","pc":[1788,1789,1790]},{"teal":1082,"source":"contracts/TownHall.algo.ts:348","pc":[1791,1792,1793]},{"teal":1085,"source":"contracts/TownHall.algo.ts:347","pc":[1794,1795,1796]},{"teal":1086,"source":"contracts/TownHall.algo.ts:347","pc":[1797,1798,1799]},{"teal":1089,"source":"contracts/TownHall.algo.ts:346","pc":[1800,1801,1802]},{"teal":1090,"source":"contracts/TownHall.algo.ts:346","pc":[1803,1804,1805]},{"teal":1093,"source":"contracts/TownHall.algo.ts:345","pc":[1806,1807,1808]},{"teal":1094,"source":"contracts/TownHall.algo.ts:345","pc":[1809,1810,1811]},{"teal":1097,"source":"contracts/TownHall.algo.ts:344","pc":[1812,1813,1814]},{"teal":1098,"source":"contracts/TownHall.algo.ts:344","pc":[1815,1816,1817]},{"teal":1101,"source":"contracts/TownHall.algo.ts:343","pc":[1818,1819,1820]},{"teal":1102,"source":"contracts/TownHall.algo.ts:343","pc":[1821]},{"teal":1103,"source":"contracts/TownHall.algo.ts:343","pc":[1822]},{"teal":1107,"source":"contracts/TownHall.algo.ts:343","pc":[1823,1824,1825]},{"teal":1111,"source":"contracts/TownHall.algo.ts:357","pc":[1826]},{"teal":1112,"source":"contracts/TownHall.algo.ts:357","pc":[1827]},{"teal":1113,"source":"contracts/Constants.ts:18","pc":[1828,1829]},{"teal":1114,"source":"contracts/TownHall.algo.ts:357","pc":[1830]},{"teal":1117,"source":"contracts/TownHall.algo.ts:357","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[1831]},{"teal":1124,"source":"contracts/TownHall.algo.ts:367","pc":[1832,1833]},{"teal":1125,"source":"contracts/TownHall.algo.ts:367","pc":[1834]},{"teal":1126,"source":"contracts/TownHall.algo.ts:367","pc":[1835]},{"teal":1127,"source":"contracts/TownHall.algo.ts:367","pc":[1836]},{"teal":1128,"source":"contracts/TownHall.algo.ts:367","pc":[1837]},{"teal":1129,"source":"contracts/TownHall.algo.ts:367","pc":[1838]},{"teal":1132,"source":"contracts/TownHall.algo.ts:366","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[1839]},{"teal":1136,"source":"contracts/TownHall.algo.ts:370","pc":[1840,1841]},{"teal":1137,"source":"contracts/TownHall.algo.ts:370","pc":[1842]},{"teal":1138,"source":"contracts/TownHall.algo.ts:370","pc":[1843]},{"teal":1139,"source":"contracts/TownHall.algo.ts:370","pc":[1844]},{"teal":1140,"source":"contracts/TownHall.algo.ts:370","pc":[1845]},{"teal":1144,"source":"contracts/TownHall.algo.ts:374","pc":[1846,1847]},{"teal":1145,"source":"contracts/TownHall.algo.ts:374","pc":[1848,1849]},{"teal":1146,"source":"contracts/TownHall.algo.ts:374","pc":[1850,1851]},{"teal":1147,"source":"contracts/TownHall.algo.ts:374","pc":[1852]},{"teal":1148,"source":"contracts/TownHall.algo.ts:374","pc":[1853]},{"teal":1149,"source":"contracts/TownHall.algo.ts:374","pc":[1854]},{"teal":1156,"source":"contracts/TownHall.algo.ts:378","pc":[1855,1856]},{"teal":1157,"source":"contracts/TownHall.algo.ts:378","pc":[1857]},{"teal":1158,"source":"contracts/TownHall.algo.ts:378","pc":[1858,1859,1860]},{"teal":1159,"source":"contracts/TownHall.algo.ts:378","pc":[1861]},{"teal":1160,"source":"contracts/TownHall.algo.ts:378","pc":[1862,1863]},{"teal":1161,"source":"contracts/TownHall.algo.ts:378","pc":[1864]},{"teal":1164,"source":"contracts/TownHall.algo.ts:377","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[1865]},{"teal":1169,"source":"contracts/TownHall.algo.ts:384","pc":[1866,1867]},{"teal":1170,"source":"contracts/TownHall.algo.ts:384","pc":[1868,1869]},{"teal":1171,"source":"contracts/TownHall.algo.ts:384","pc":[1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903]},{"teal":1172,"source":"contracts/TownHall.algo.ts:384","pc":[1904]},{"teal":1175,"source":"contracts/TownHall.algo.ts:384","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[1905]},{"teal":1180,"source":"contracts/TownHall.algo.ts:385","pc":[1906,1907]},{"teal":1181,"source":"contracts/TownHall.algo.ts:385","pc":[1908,1909]},{"teal":1182,"source":"contracts/TownHall.algo.ts:385","pc":[1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943]},{"teal":1183,"source":"contracts/TownHall.algo.ts:385","pc":[1944]},{"teal":1186,"source":"contracts/TownHall.algo.ts:385","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[1945]},{"teal":1191,"source":"contracts/TownHall.algo.ts:386","pc":[1946,1947]},{"teal":1192,"source":"contracts/TownHall.algo.ts:386","pc":[1948,1949]},{"teal":1193,"source":"contracts/TownHall.algo.ts:386","pc":[1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983]},{"teal":1194,"source":"contracts/TownHall.algo.ts:386","pc":[1984]},{"teal":1197,"source":"contracts/TownHall.algo.ts:386","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[1985]},{"teal":1202,"source":"contracts/TownHall.algo.ts:387","pc":[1986,1987]},{"teal":1203,"source":"contracts/TownHall.algo.ts:387","pc":[1988,1989]},{"teal":1204,"source":"contracts/TownHall.algo.ts:387","pc":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023]},{"teal":1205,"source":"contracts/TownHall.algo.ts:387","pc":[2024]},{"teal":1208,"source":"contracts/TownHall.algo.ts:387","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[2025]},{"teal":1213,"source":"contracts/TownHall.algo.ts:388","pc":[2026,2027]},{"teal":1214,"source":"contracts/TownHall.algo.ts:388","pc":[2028,2029]},{"teal":1215,"source":"contracts/TownHall.algo.ts:388","pc":[2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063]},{"teal":1216,"source":"contracts/TownHall.algo.ts:388","pc":[2064]},{"teal":1219,"source":"contracts/TownHall.algo.ts:388","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[2065]},{"teal":1224,"source":"contracts/TownHall.algo.ts:389","pc":[2066,2067]},{"teal":1225,"source":"contracts/TownHall.algo.ts:389","pc":[2068,2069]},{"teal":1226,"source":"contracts/TownHall.algo.ts:389","pc":[2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103]},{"teal":1227,"source":"contracts/TownHall.algo.ts:389","pc":[2104]},{"teal":1230,"source":"contracts/TownHall.algo.ts:389","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[2105]},{"teal":1239,"source":"contracts/TownHall.algo.ts:392","pc":[2106,2107]},{"teal":1240,"source":"contracts/TownHall.algo.ts:393","pc":[2108,2109]},{"teal":1241,"source":"contracts/TownHall.algo.ts:393","pc":[2110,2111]},{"teal":1242,"source":"contracts/TownHall.algo.ts:393","pc":[2112]},{"teal":1243,"source":"contracts/TownHall.algo.ts:393","pc":[2113]},{"teal":1246,"source":"contracts/TownHall.algo.ts:393","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(this.lsigFunderAddress.value)\"}","pc":[2114]},{"teal":1249,"source":"contracts/TownHall.algo.ts:392","pc":[2115,2116]},{"teal":1250,"source":"contracts/TownHall.algo.ts:394","pc":[2117,2118]},{"teal":1251,"source":"contracts/TownHall.algo.ts:394","pc":[2119,2120]},{"teal":1252,"source":"contracts/TownHall.algo.ts:394","pc":[2121]},{"teal":1255,"source":"contracts/TownHall.algo.ts:394","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"receiver\",\"expected\":\"this.txn.sender\"}","pc":[2122]},{"teal":1258,"source":"contracts/TownHall.algo.ts:392","pc":[2123,2124]},{"teal":1259,"source":"contracts/TownHall.algo.ts:395","pc":[2125,2126]},{"teal":1260,"source":"contracts/TownHall.algo.ts:395","pc":[2127,2128]},{"teal":1261,"source":"contracts/TownHall.algo.ts:395","pc":[2129]},{"teal":1264,"source":"contracts/TownHall.algo.ts:395","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"amount\",\"expected\":\"LSIG_FUND_AMOUNT\"}","pc":[2130]},{"teal":1269,"source":"contracts/TownHall.algo.ts:398","pc":[2131,2132]},{"teal":1270,"source":"contracts/TownHall.algo.ts:398","pc":[2133,2134]},{"teal":1271,"source":"contracts/TownHall.algo.ts:398","pc":[2135]},{"teal":1272,"source":"contracts/TownHall.algo.ts:398","pc":[2136,2137]},{"teal":1273,"source":"contracts/TownHall.algo.ts:398","pc":[2138]},{"teal":1274,"source":"contracts/TownHall.algo.ts:398","pc":[2139]},{"teal":1275,"source":"contracts/TownHall.algo.ts:398","pc":[2140,2141,2142]},{"teal":1280,"source":"contracts/TownHall.algo.ts:399","pc":[2143]},{"teal":1281,"source":"contracts/Constants.ts:29","pc":[2144,2145]},{"teal":1282,"source":"contracts/TownHall.algo.ts:399","pc":[2146]},{"teal":1286,"source":"contracts/TownHall.algo.ts:400","pc":[2147]},{"teal":1292,"source":"contracts/TownHall.algo.ts:402","pc":[2148,2149]},{"teal":1293,"source":"contracts/TownHall.algo.ts:402","pc":[2150]},{"teal":1294,"source":"contracts/TownHall.algo.ts:402","pc":[2151,2152]},{"teal":1295,"source":"contracts/TownHall.algo.ts:402","pc":[2153]},{"teal":1296,"source":"contracts/TownHall.algo.ts:402","pc":[2154,2155,2156]},{"teal":1301,"source":"contracts/TownHall.algo.ts:408","pc":[2157,2158]},{"teal":1302,"source":"contracts/TownHall.algo.ts:408","pc":[2159,2160]},{"teal":1303,"source":"contracts/TownHall.algo.ts:408","pc":[2161]},{"teal":1307,"source":"contracts/TownHall.algo.ts:409","pc":[2162,2163]},{"teal":1308,"source":"contracts/TownHall.algo.ts:409","pc":[2164,2165]},{"teal":1309,"source":"contracts/TownHall.algo.ts:409","pc":[2166]},{"teal":1313,"source":"contracts/TownHall.algo.ts:410","pc":[2167,2168]},{"teal":1314,"source":"contracts/TownHall.algo.ts:410","pc":[2169,2170]},{"teal":1315,"source":"contracts/TownHall.algo.ts:410","pc":[2171]},{"teal":1319,"source":"contracts/TownHall.algo.ts:411","pc":[2172]},{"teal":1325,"source":"contracts/TownHall.algo.ts:413","pc":[2173,2174]},{"teal":1326,"source":"contracts/TownHall.algo.ts:413","pc":[2175]},{"teal":1327,"source":"contracts/TownHall.algo.ts:413","pc":[2176,2177]},{"teal":1328,"source":"contracts/TownHall.algo.ts:413","pc":[2178]},{"teal":1329,"source":"contracts/TownHall.algo.ts:413","pc":[2179,2180,2181]},{"teal":1334,"source":"contracts/TownHall.algo.ts:414","pc":[2182,2183]},{"teal":1335,"source":"contracts/TownHall.algo.ts:414","pc":[2184,2185]},{"teal":1336,"source":"contracts/TownHall.algo.ts:414","pc":[2186]},{"teal":1340,"source":"contracts/TownHall.algo.ts:415","pc":[2187,2188]},{"teal":1341,"source":"contracts/TownHall.algo.ts:415","pc":[2189,2190]},{"teal":1342,"source":"contracts/TownHall.algo.ts:415","pc":[2191]},{"teal":1346,"source":"contracts/TownHall.algo.ts:416","pc":[2192,2193]},{"teal":1347,"source":"contracts/TownHall.algo.ts:416","pc":[2194,2195]},{"teal":1348,"source":"contracts/TownHall.algo.ts:416","pc":[2196]},{"teal":1352,"source":"contracts/TownHall.algo.ts:417","pc":[2197]},{"teal":1358,"source":"contracts/TownHall.algo.ts:419","pc":[2198,2199]},{"teal":1359,"source":"contracts/TownHall.algo.ts:419","pc":[2200]},{"teal":1360,"source":"contracts/TownHall.algo.ts:419","pc":[2201,2202]},{"teal":1361,"source":"contracts/TownHall.algo.ts:419","pc":[2203]},{"teal":1362,"source":"contracts/TownHall.algo.ts:419","pc":[2204,2205,2206]},{"teal":1367,"source":"contracts/TownHall.algo.ts:420","pc":[2207,2208]},{"teal":1368,"source":"contracts/TownHall.algo.ts:420","pc":[2209,2210]},{"teal":1369,"source":"contracts/TownHall.algo.ts:420","pc":[2211]},{"teal":1373,"source":"contracts/TownHall.algo.ts:421","pc":[2212,2213]},{"teal":1374,"source":"contracts/TownHall.algo.ts:421","pc":[2214,2215]},{"teal":1375,"source":"contracts/TownHall.algo.ts:421","pc":[2216]},{"teal":1379,"source":"contracts/TownHall.algo.ts:422","pc":[2217,2218]},{"teal":1380,"source":"contracts/TownHall.algo.ts:422","pc":[2219,2220]},{"teal":1381,"source":"contracts/TownHall.algo.ts:422","pc":[2221]},{"teal":1385,"source":"contracts/TownHall.algo.ts:423","pc":[2222]},{"teal":1391,"source":"contracts/TownHall.algo.ts:425","pc":[2223,2224]},{"teal":1392,"source":"contracts/TownHall.algo.ts:425","pc":[2225]},{"teal":1393,"source":"contracts/TownHall.algo.ts:425","pc":[2226,2227]},{"teal":1394,"source":"contracts/TownHall.algo.ts:425","pc":[2228]},{"teal":1395,"source":"contracts/TownHall.algo.ts:425","pc":[2229,2230,2231]},{"teal":1400,"source":"contracts/TownHall.algo.ts:426","pc":[2232,2233]},{"teal":1401,"source":"contracts/TownHall.algo.ts:426","pc":[2234,2235]},{"teal":1402,"source":"contracts/TownHall.algo.ts:426","pc":[2236]},{"teal":1406,"source":"contracts/TownHall.algo.ts:427","pc":[2237,2238]},{"teal":1407,"source":"contracts/TownHall.algo.ts:427","pc":[2239,2240]},{"teal":1408,"source":"contracts/TownHall.algo.ts:427","pc":[2241]},{"teal":1412,"source":"contracts/TownHall.algo.ts:428","pc":[2242,2243]},{"teal":1413,"source":"contracts/TownHall.algo.ts:428","pc":[2244,2245]},{"teal":1414,"source":"contracts/TownHall.algo.ts:428","pc":[2246]},{"teal":1418,"source":"contracts/TownHall.algo.ts:429","pc":[2247]},{"teal":1424,"source":"contracts/TownHall.algo.ts:431","pc":[2248,2249]},{"teal":1425,"source":"contracts/TownHall.algo.ts:431","pc":[2250]},{"teal":1426,"source":"contracts/TownHall.algo.ts:431","pc":[2251,2252]},{"teal":1427,"source":"contracts/TownHall.algo.ts:431","pc":[2253]},{"teal":1428,"source":"contracts/TownHall.algo.ts:431","pc":[2254,2255,2256]},{"teal":1433,"source":"contracts/TownHall.algo.ts:432","pc":[2257,2258]},{"teal":1434,"source":"contracts/TownHall.algo.ts:432","pc":[2259,2260]},{"teal":1435,"source":"contracts/TownHall.algo.ts:432","pc":[2261]},{"teal":1439,"source":"contracts/TownHall.algo.ts:433","pc":[2262,2263]},{"teal":1440,"source":"contracts/TownHall.algo.ts:433","pc":[2264,2265]},{"teal":1441,"source":"contracts/TownHall.algo.ts:433","pc":[2266]},{"teal":1445,"source":"contracts/TownHall.algo.ts:434","pc":[2267,2268]},{"teal":1446,"source":"contracts/TownHall.algo.ts:434","pc":[2269,2270]},{"teal":1447,"source":"contracts/TownHall.algo.ts:434","pc":[2271]},{"teal":1451,"source":"contracts/TownHall.algo.ts:435","pc":[2272]},{"teal":1457,"source":"contracts/TownHall.algo.ts:437","pc":[2273,2274]},{"teal":1458,"source":"contracts/TownHall.algo.ts:437","pc":[2275]},{"teal":1459,"source":"contracts/TownHall.algo.ts:437","pc":[2276,2277]},{"teal":1460,"source":"contracts/TownHall.algo.ts:437","pc":[2278]},{"teal":1461,"source":"contracts/TownHall.algo.ts:437","pc":[2279,2280,2281]},{"teal":1466,"source":"contracts/TownHall.algo.ts:438","pc":[2282,2283]},{"teal":1467,"source":"contracts/TownHall.algo.ts:438","pc":[2284,2285]},{"teal":1468,"source":"contracts/TownHall.algo.ts:438","pc":[2286]},{"teal":1472,"source":"contracts/TownHall.algo.ts:439","pc":[2287,2288]},{"teal":1473,"source":"contracts/TownHall.algo.ts:439","pc":[2289,2290]},{"teal":1474,"source":"contracts/TownHall.algo.ts:439","pc":[2291]},{"teal":1478,"source":"contracts/TownHall.algo.ts:440","pc":[2292]},{"teal":1479,"source":"contracts/Constants.ts:19","pc":[2293,2294]},{"teal":1480,"source":"contracts/TownHall.algo.ts:440","pc":[2295]},{"teal":1484,"source":"contracts/TownHall.algo.ts:441","pc":[2296,2297]},{"teal":1485,"source":"contracts/TownHall.algo.ts:441","pc":[2298,2299]},{"teal":1486,"source":"contracts/TownHall.algo.ts:441","pc":[2300]},{"teal":1490,"source":"contracts/TownHall.algo.ts:442","pc":[2301]},{"teal":1494,"source":"contracts/TownHall.algo.ts:444","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[2302]},{"teal":1495,"source":"contracts/TownHall.algo.ts:343","pc":[2303]},{"teal":1500,"source":"contracts/TownHall.algo.ts:447","pc":[2304,2305,2306]},{"teal":1501,"source":"contracts/TownHall.algo.ts:447","pc":[2307]},{"teal":1504,"source":"contracts/TownHall.algo.ts:447","pc":[2308,2309,2310]},{"teal":1505,"source":"contracts/TownHall.algo.ts:447","pc":[2311]},{"teal":1506,"source":"contracts/TownHall.algo.ts:447","pc":[2312]},{"teal":1510,"source":"contracts/TownHall.algo.ts:447","pc":[2313,2314,2315]},{"teal":1514,"source":"contracts/TownHall.algo.ts:448","pc":[2316]},{"teal":1515,"source":"contracts/TownHall.algo.ts:448","pc":[2317]},{"teal":1516,"source":"contracts/Constants.ts:19","pc":[2318,2319]},{"teal":1517,"source":"contracts/TownHall.algo.ts:448","pc":[2320]},{"teal":1520,"source":"contracts/TownHall.algo.ts:448","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[2321]},{"teal":1524,"source":"contracts/TownHall.algo.ts:450","pc":[2322,2323]},{"teal":1525,"source":"contracts/TownHall.algo.ts:450","pc":[2324]},{"teal":1526,"source":"contracts/TownHall.algo.ts:450","pc":[2325]},{"teal":1527,"source":"contracts/TownHall.algo.ts:450","pc":[2326]},{"teal":1528,"source":"contracts/TownHall.algo.ts:450","pc":[2327,2328,2329]},{"teal":1529,"source":"contracts/TownHall.algo.ts:450","pc":[2330,2331]},{"teal":1530,"source":"contracts/TownHall.algo.ts:450","pc":[2332,2333]},{"teal":1531,"source":"contracts/TownHall.algo.ts:450","pc":[2334]},{"teal":1532,"source":"contracts/TownHall.algo.ts:450","pc":[2335]},{"teal":1536,"source":"contracts/TownHall.algo.ts:450","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[2336]},{"teal":1548,"source":"contracts/TownHall.algo.ts:454","pc":[2337,2338]},{"teal":1549,"source":"contracts/TownHall.algo.ts:454","pc":[2339]},{"teal":1550,"source":"contracts/TownHall.algo.ts:454","pc":[2340]},{"teal":1551,"source":"contracts/TownHall.algo.ts:454","pc":[2341,2342,2343]},{"teal":1552,"source":"contracts/TownHall.algo.ts:454","pc":[2344]},{"teal":1553,"source":"contracts/TownHall.algo.ts:454","pc":[2345]},{"teal":1554,"source":"contracts/TownHall.algo.ts:454","pc":[2346,2347,2348]},{"teal":1555,"source":"contracts/TownHall.algo.ts:455","pc":[2349,2350]},{"teal":1556,"source":"contracts/TownHall.algo.ts:455","pc":[2351,2352]},{"teal":1557,"source":"contracts/TownHall.algo.ts:455","pc":[2353]},{"teal":1558,"source":"contracts/TownHall.algo.ts:455","pc":[2354,2355,2356]},{"teal":1559,"source":"contracts/TownHall.algo.ts:455","pc":[2357]},{"teal":1560,"source":"contracts/TownHall.algo.ts:454","pc":[2358]},{"teal":1563,"source":"contracts/TownHall.algo.ts:455","pc":[2359]},{"teal":1564,"source":"contracts/TownHall.algo.ts:455","pc":[2360,2361,2362]},{"teal":1565,"source":"contracts/TownHall.algo.ts:456","pc":[2363,2364]},{"teal":1566,"source":"contracts/TownHall.algo.ts:456","pc":[2365,2366]},{"teal":1567,"source":"contracts/TownHall.algo.ts:456","pc":[2367]},{"teal":1568,"source":"contracts/TownHall.algo.ts:456","pc":[2368,2369,2370]},{"teal":1569,"source":"contracts/TownHall.algo.ts:456","pc":[2371]},{"teal":1570,"source":"contracts/TownHall.algo.ts:455","pc":[2372]},{"teal":1573,"source":"contracts/TownHall.algo.ts:456","pc":[2373]},{"teal":1574,"source":"contracts/TownHall.algo.ts:456","pc":[2374,2375,2376]},{"teal":1575,"source":"contracts/TownHall.algo.ts:457","pc":[2377,2378]},{"teal":1576,"source":"contracts/TownHall.algo.ts:457","pc":[2379,2380]},{"teal":1577,"source":"contracts/TownHall.algo.ts:457","pc":[2381]},{"teal":1578,"source":"contracts/TownHall.algo.ts:457","pc":[2382,2383,2384]},{"teal":1579,"source":"contracts/TownHall.algo.ts:457","pc":[2385]},{"teal":1580,"source":"contracts/TownHall.algo.ts:456","pc":[2386]},{"teal":1583,"source":"contracts/TownHall.algo.ts:457","pc":[2387]},{"teal":1584,"source":"contracts/TownHall.algo.ts:457","pc":[2388,2389,2390]},{"teal":1585,"source":"contracts/TownHall.algo.ts:458","pc":[2391,2392]},{"teal":1586,"source":"contracts/TownHall.algo.ts:458","pc":[2393,2394]},{"teal":1587,"source":"contracts/TownHall.algo.ts:458","pc":[2395]},{"teal":1588,"source":"contracts/TownHall.algo.ts:458","pc":[2396,2397,2398]},{"teal":1589,"source":"contracts/TownHall.algo.ts:458","pc":[2399]},{"teal":1590,"source":"contracts/TownHall.algo.ts:457","pc":[2400]},{"teal":1593,"source":"contracts/TownHall.algo.ts:458","pc":[2401]},{"teal":1594,"source":"contracts/TownHall.algo.ts:458","pc":[2402,2403,2404]},{"teal":1595,"source":"contracts/TownHall.algo.ts:459","pc":[2405,2406]},{"teal":1596,"source":"contracts/TownHall.algo.ts:459","pc":[2407,2408]},{"teal":1597,"source":"contracts/TownHall.algo.ts:459","pc":[2409]},{"teal":1598,"source":"contracts/TownHall.algo.ts:459","pc":[2410,2411,2412]},{"teal":1599,"source":"contracts/TownHall.algo.ts:459","pc":[2413]},{"teal":1600,"source":"contracts/TownHall.algo.ts:458","pc":[2414]},{"teal":1603,"source":"contracts/TownHall.algo.ts:453","pc":[2415]},{"teal":1604,"source":"contracts/TownHall.algo.ts:452","pc":[2416,2417,2418]},{"teal":1608,"source":"contracts/TownHall.algo.ts:462","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[2419]},{"teal":1614,"source":"contracts/TownHall.algo.ts:465","pc":[2420,2421]},{"teal":1615,"source":"contracts/TownHall.algo.ts:465","pc":[2422]},{"teal":1616,"source":"contracts/TownHall.algo.ts:465","pc":[2423]},{"teal":1617,"source":"contracts/TownHall.algo.ts:465","pc":[2424]},{"teal":1618,"source":"contracts/TownHall.algo.ts:465","pc":[2425,2426,2427]},{"teal":1619,"source":"contracts/TownHall.algo.ts:465","pc":[2428]},{"teal":1620,"source":"contracts/TownHall.algo.ts:465","pc":[2429]},{"teal":1621,"source":"contracts/TownHall.algo.ts:465","pc":[2430,2431,2432]},{"teal":1622,"source":"contracts/TownHall.algo.ts:465","pc":[2433,2434]},{"teal":1623,"source":"contracts/TownHall.algo.ts:465","pc":[2435]},{"teal":1624,"source":"contracts/TownHall.algo.ts:465","pc":[2436]},{"teal":1627,"source":"contracts/TownHall.algo.ts:465","pc":[2437,2438,2439]},{"teal":1632,"source":"contracts/TownHall.algo.ts:466","pc":[2440,2441]},{"teal":1633,"source":"contracts/TownHall.algo.ts:466","pc":[2442]},{"teal":1634,"source":"contracts/TownHall.algo.ts:466","pc":[2443]},{"teal":1635,"source":"contracts/TownHall.algo.ts:466","pc":[2444]},{"teal":1636,"source":"contracts/TownHall.algo.ts:466","pc":[2445,2446]},{"teal":1637,"source":"contracts/TownHall.algo.ts:466","pc":[2447]},{"teal":1638,"source":"contracts/TownHall.algo.ts:466","pc":[2448]},{"teal":1639,"source":"contracts/TownHall.algo.ts:465","pc":[2449,2450,2451]},{"teal":1644,"source":"contracts/TownHall.algo.ts:467","pc":[2452,2453]},{"teal":1645,"source":"contracts/TownHall.algo.ts:467","pc":[2454,2455]},{"teal":1646,"source":"contracts/TownHall.algo.ts:467","pc":[2456]},{"teal":1647,"source":"contracts/TownHall.algo.ts:467","pc":[2457]},{"teal":1648,"source":"contracts/TownHall.algo.ts:467","pc":[2458,2459,2460]},{"teal":1649,"source":"contracts/TownHall.algo.ts:467","pc":[2461,2462]},{"teal":1650,"source":"contracts/TownHall.algo.ts:467","pc":[2463]},{"teal":1651,"source":"contracts/TownHall.algo.ts:467","pc":[2464,2465,2466]},{"teal":1652,"source":"contracts/TownHall.algo.ts:467","pc":[2467,2468]},{"teal":1653,"source":"contracts/TownHall.algo.ts:467","pc":[2469]},{"teal":1654,"source":"contracts/TownHall.algo.ts:467","pc":[2470]},{"teal":1657,"source":"contracts/TownHall.algo.ts:467","pc":[2471,2472,2473]},{"teal":1662,"source":"contracts/TownHall.algo.ts:468","pc":[2474,2475]},{"teal":1663,"source":"contracts/TownHall.algo.ts:468","pc":[2476]},{"teal":1664,"source":"contracts/TownHall.algo.ts:468","pc":[2477]},{"teal":1665,"source":"contracts/TownHall.algo.ts:468","pc":[2478]},{"teal":1666,"source":"contracts/TownHall.algo.ts:468","pc":[2479,2480]},{"teal":1667,"source":"contracts/TownHall.algo.ts:468","pc":[2481]},{"teal":1668,"source":"contracts/TownHall.algo.ts:468","pc":[2482]},{"teal":1669,"source":"contracts/TownHall.algo.ts:467","pc":[2483,2484,2485]},{"teal":1674,"source":"contracts/TownHall.algo.ts:469","pc":[2486,2487]},{"teal":1675,"source":"contracts/TownHall.algo.ts:469","pc":[2488,2489]},{"teal":1676,"source":"contracts/TownHall.algo.ts:469","pc":[2490]},{"teal":1677,"source":"contracts/TownHall.algo.ts:469","pc":[2491]},{"teal":1678,"source":"contracts/TownHall.algo.ts:469","pc":[2492,2493,2494]},{"teal":1679,"source":"contracts/TownHall.algo.ts:469","pc":[2495,2496]},{"teal":1680,"source":"contracts/TownHall.algo.ts:469","pc":[2497]},{"teal":1681,"source":"contracts/TownHall.algo.ts:469","pc":[2498,2499,2500]},{"teal":1682,"source":"contracts/TownHall.algo.ts:469","pc":[2501,2502]},{"teal":1683,"source":"contracts/TownHall.algo.ts:469","pc":[2503]},{"teal":1684,"source":"contracts/TownHall.algo.ts:469","pc":[2504]},{"teal":1687,"source":"contracts/TownHall.algo.ts:469","pc":[2505,2506,2507]},{"teal":1692,"source":"contracts/TownHall.algo.ts:470","pc":[2508,2509]},{"teal":1693,"source":"contracts/TownHall.algo.ts:470","pc":[2510]},{"teal":1694,"source":"contracts/TownHall.algo.ts:470","pc":[2511]},{"teal":1695,"source":"contracts/TownHall.algo.ts:470","pc":[2512]},{"teal":1696,"source":"contracts/TownHall.algo.ts:470","pc":[2513,2514]},{"teal":1697,"source":"contracts/TownHall.algo.ts:470","pc":[2515]},{"teal":1698,"source":"contracts/TownHall.algo.ts:470","pc":[2516]},{"teal":1699,"source":"contracts/TownHall.algo.ts:469","pc":[2517,2518,2519]},{"teal":1704,"source":"contracts/TownHall.algo.ts:471","pc":[2520,2521]},{"teal":1705,"source":"contracts/TownHall.algo.ts:471","pc":[2522,2523]},{"teal":1706,"source":"contracts/TownHall.algo.ts:471","pc":[2524]},{"teal":1707,"source":"contracts/TownHall.algo.ts:471","pc":[2525]},{"teal":1708,"source":"contracts/TownHall.algo.ts:471","pc":[2526,2527,2528]},{"teal":1709,"source":"contracts/TownHall.algo.ts:471","pc":[2529,2530]},{"teal":1710,"source":"contracts/TownHall.algo.ts:471","pc":[2531]},{"teal":1711,"source":"contracts/TownHall.algo.ts:471","pc":[2532,2533,2534]},{"teal":1712,"source":"contracts/TownHall.algo.ts:471","pc":[2535,2536]},{"teal":1713,"source":"contracts/TownHall.algo.ts:471","pc":[2537]},{"teal":1714,"source":"contracts/TownHall.algo.ts:471","pc":[2538]},{"teal":1717,"source":"contracts/TownHall.algo.ts:471","pc":[2539,2540,2541]},{"teal":1722,"source":"contracts/TownHall.algo.ts:472","pc":[2542,2543]},{"teal":1723,"source":"contracts/TownHall.algo.ts:472","pc":[2544]},{"teal":1724,"source":"contracts/TownHall.algo.ts:472","pc":[2545]},{"teal":1725,"source":"contracts/TownHall.algo.ts:472","pc":[2546]},{"teal":1726,"source":"contracts/TownHall.algo.ts:472","pc":[2547,2548]},{"teal":1727,"source":"contracts/TownHall.algo.ts:472","pc":[2549]},{"teal":1728,"source":"contracts/TownHall.algo.ts:472","pc":[2550]},{"teal":1729,"source":"contracts/TownHall.algo.ts:471","pc":[2551,2552,2553]},{"teal":1734,"source":"contracts/TownHall.algo.ts:473","pc":[2554,2555]},{"teal":1735,"source":"contracts/TownHall.algo.ts:473","pc":[2556,2557]},{"teal":1736,"source":"contracts/TownHall.algo.ts:473","pc":[2558]},{"teal":1737,"source":"contracts/TownHall.algo.ts:473","pc":[2559]},{"teal":1738,"source":"contracts/TownHall.algo.ts:473","pc":[2560,2561,2562]},{"teal":1739,"source":"contracts/TownHall.algo.ts:473","pc":[2563,2564]},{"teal":1740,"source":"contracts/TownHall.algo.ts:473","pc":[2565]},{"teal":1741,"source":"contracts/TownHall.algo.ts:473","pc":[2566,2567,2568]},{"teal":1742,"source":"contracts/TownHall.algo.ts:473","pc":[2569,2570]},{"teal":1743,"source":"contracts/TownHall.algo.ts:473","pc":[2571]},{"teal":1744,"source":"contracts/TownHall.algo.ts:473","pc":[2572]},{"teal":1747,"source":"contracts/TownHall.algo.ts:473","pc":[2573,2574,2575]},{"teal":1752,"source":"contracts/TownHall.algo.ts:474","pc":[2576,2577]},{"teal":1753,"source":"contracts/TownHall.algo.ts:474","pc":[2578]},{"teal":1754,"source":"contracts/TownHall.algo.ts:474","pc":[2579]},{"teal":1755,"source":"contracts/TownHall.algo.ts:474","pc":[2580]},{"teal":1756,"source":"contracts/TownHall.algo.ts:474","pc":[2581,2582]},{"teal":1757,"source":"contracts/TownHall.algo.ts:474","pc":[2583]},{"teal":1758,"source":"contracts/TownHall.algo.ts:474","pc":[2584]},{"teal":1759,"source":"contracts/TownHall.algo.ts:473","pc":[2585,2586,2587]},{"teal":1764,"source":"contracts/TownHall.algo.ts:475","pc":[2588,2589]},{"teal":1765,"source":"contracts/TownHall.algo.ts:475","pc":[2590]},{"teal":1766,"source":"contracts/TownHall.algo.ts:475","pc":[2591]},{"teal":1767,"source":"contracts/TownHall.algo.ts:475","pc":[2592]},{"teal":1768,"source":"contracts/TownHall.algo.ts:475","pc":[2593,2594,2595]},{"teal":1769,"source":"contracts/TownHall.algo.ts:475","pc":[2596,2597]},{"teal":1770,"source":"contracts/TownHall.algo.ts:475","pc":[2598]},{"teal":1771,"source":"contracts/TownHall.algo.ts:475","pc":[2599,2600,2601]},{"teal":1772,"source":"contracts/TownHall.algo.ts:475","pc":[2602,2603]},{"teal":1773,"source":"contracts/TownHall.algo.ts:475","pc":[2604]},{"teal":1774,"source":"contracts/TownHall.algo.ts:475","pc":[2605]},{"teal":1777,"source":"contracts/TownHall.algo.ts:475","pc":[2606,2607,2608]},{"teal":1782,"source":"contracts/TownHall.algo.ts:476","pc":[2609,2610]},{"teal":1783,"source":"contracts/TownHall.algo.ts:476","pc":[2611]},{"teal":1784,"source":"contracts/TownHall.algo.ts:476","pc":[2612]},{"teal":1785,"source":"contracts/TownHall.algo.ts:476","pc":[2613]},{"teal":1786,"source":"contracts/TownHall.algo.ts:476","pc":[2614,2615]},{"teal":1787,"source":"contracts/TownHall.algo.ts:476","pc":[2616]},{"teal":1788,"source":"contracts/TownHall.algo.ts:476","pc":[2617]},{"teal":1789,"source":"contracts/TownHall.algo.ts:475","pc":[2618,2619,2620]},{"teal":1793,"source":"contracts/TownHall.algo.ts:478","errorMessage":"Invalid vote: Is player still alive?","pc":[2621]},{"teal":1799,"source":"contracts/TownHall.algo.ts:481","pc":[2622,2623]},{"teal":1800,"source":"contracts/TownHall.algo.ts:481","pc":[2624]},{"teal":1801,"source":"contracts/TownHall.algo.ts:481","pc":[2625]},{"teal":1802,"source":"contracts/TownHall.algo.ts:481","pc":[2626,2627,2628]},{"teal":1803,"source":"contracts/TownHall.algo.ts:481","pc":[2629]},{"teal":1804,"source":"contracts/TownHall.algo.ts:481","pc":[2630]},{"teal":1805,"source":"contracts/TownHall.algo.ts:481","pc":[2631,2632,2633]},{"teal":1806,"source":"contracts/TownHall.algo.ts:481","pc":[2634,2635]},{"teal":1807,"source":"contracts/TownHall.algo.ts:481","pc":[2636]},{"teal":1808,"source":"contracts/TownHall.algo.ts:481","pc":[2637]},{"teal":1809,"source":"contracts/TownHall.algo.ts:481","pc":[2638]},{"teal":1810,"source":"contracts/TownHall.algo.ts:481","pc":[2639]},{"teal":1813,"source":"contracts/TownHall.algo.ts:481","pc":[2640,2641,2642]},{"teal":1818,"source":"contracts/TownHall.algo.ts:482","pc":[2643,2644]},{"teal":1819,"source":"contracts/TownHall.algo.ts:482","pc":[2645]},{"teal":1820,"source":"contracts/TownHall.algo.ts:482","pc":[2646]},{"teal":1821,"source":"contracts/TownHall.algo.ts:481","pc":[2647,2648,2649]},{"teal":1826,"source":"contracts/TownHall.algo.ts:483","pc":[2650,2651]},{"teal":1827,"source":"contracts/TownHall.algo.ts:483","pc":[2652,2653]},{"teal":1828,"source":"contracts/TownHall.algo.ts:483","pc":[2654]},{"teal":1829,"source":"contracts/TownHall.algo.ts:483","pc":[2655,2656,2657]},{"teal":1830,"source":"contracts/TownHall.algo.ts:483","pc":[2658]},{"teal":1831,"source":"contracts/TownHall.algo.ts:483","pc":[2659]},{"teal":1832,"source":"contracts/TownHall.algo.ts:483","pc":[2660,2661,2662]},{"teal":1833,"source":"contracts/TownHall.algo.ts:483","pc":[2663,2664]},{"teal":1834,"source":"contracts/TownHall.algo.ts:483","pc":[2665]},{"teal":1835,"source":"contracts/TownHall.algo.ts:483","pc":[2666]},{"teal":1836,"source":"contracts/TownHall.algo.ts:483","pc":[2667]},{"teal":1837,"source":"contracts/TownHall.algo.ts:483","pc":[2668]},{"teal":1840,"source":"contracts/TownHall.algo.ts:483","pc":[2669,2670,2671]},{"teal":1845,"source":"contracts/TownHall.algo.ts:484","pc":[2672,2673]},{"teal":1846,"source":"contracts/TownHall.algo.ts:484","pc":[2674]},{"teal":1847,"source":"contracts/TownHall.algo.ts:484","pc":[2675]},{"teal":1848,"source":"contracts/TownHall.algo.ts:483","pc":[2676,2677,2678]},{"teal":1853,"source":"contracts/TownHall.algo.ts:485","pc":[2679,2680]},{"teal":1854,"source":"contracts/TownHall.algo.ts:485","pc":[2681,2682]},{"teal":1855,"source":"contracts/TownHall.algo.ts:485","pc":[2683]},{"teal":1856,"source":"contracts/TownHall.algo.ts:485","pc":[2684,2685,2686]},{"teal":1857,"source":"contracts/TownHall.algo.ts:485","pc":[2687]},{"teal":1858,"source":"contracts/TownHall.algo.ts:485","pc":[2688]},{"teal":1859,"source":"contracts/TownHall.algo.ts:485","pc":[2689,2690,2691]},{"teal":1860,"source":"contracts/TownHall.algo.ts:485","pc":[2692,2693]},{"teal":1861,"source":"contracts/TownHall.algo.ts:485","pc":[2694]},{"teal":1862,"source":"contracts/TownHall.algo.ts:485","pc":[2695]},{"teal":1863,"source":"contracts/TownHall.algo.ts:485","pc":[2696]},{"teal":1864,"source":"contracts/TownHall.algo.ts:485","pc":[2697]},{"teal":1867,"source":"contracts/TownHall.algo.ts:485","pc":[2698,2699,2700]},{"teal":1872,"source":"contracts/TownHall.algo.ts:486","pc":[2701,2702]},{"teal":1873,"source":"contracts/TownHall.algo.ts:486","pc":[2703]},{"teal":1874,"source":"contracts/TownHall.algo.ts:486","pc":[2704]},{"teal":1875,"source":"contracts/TownHall.algo.ts:485","pc":[2705,2706,2707]},{"teal":1880,"source":"contracts/TownHall.algo.ts:487","pc":[2708,2709]},{"teal":1881,"source":"contracts/TownHall.algo.ts:487","pc":[2710,2711]},{"teal":1882,"source":"contracts/TownHall.algo.ts:487","pc":[2712]},{"teal":1883,"source":"contracts/TownHall.algo.ts:487","pc":[2713,2714,2715]},{"teal":1884,"source":"contracts/TownHall.algo.ts:487","pc":[2716]},{"teal":1885,"source":"contracts/TownHall.algo.ts:487","pc":[2717]},{"teal":1886,"source":"contracts/TownHall.algo.ts:487","pc":[2718,2719,2720]},{"teal":1887,"source":"contracts/TownHall.algo.ts:487","pc":[2721,2722]},{"teal":1888,"source":"contracts/TownHall.algo.ts:487","pc":[2723]},{"teal":1889,"source":"contracts/TownHall.algo.ts:487","pc":[2724]},{"teal":1890,"source":"contracts/TownHall.algo.ts:487","pc":[2725]},{"teal":1891,"source":"contracts/TownHall.algo.ts:487","pc":[2726]},{"teal":1894,"source":"contracts/TownHall.algo.ts:487","pc":[2727,2728,2729]},{"teal":1899,"source":"contracts/TownHall.algo.ts:488","pc":[2730,2731]},{"teal":1900,"source":"contracts/TownHall.algo.ts:488","pc":[2732]},{"teal":1901,"source":"contracts/TownHall.algo.ts:488","pc":[2733]},{"teal":1902,"source":"contracts/TownHall.algo.ts:487","pc":[2734,2735,2736]},{"teal":1907,"source":"contracts/TownHall.algo.ts:489","pc":[2737,2738]},{"teal":1908,"source":"contracts/TownHall.algo.ts:489","pc":[2739,2740]},{"teal":1909,"source":"contracts/TownHall.algo.ts:489","pc":[2741]},{"teal":1910,"source":"contracts/TownHall.algo.ts:489","pc":[2742,2743,2744]},{"teal":1911,"source":"contracts/TownHall.algo.ts:489","pc":[2745]},{"teal":1912,"source":"contracts/TownHall.algo.ts:489","pc":[2746]},{"teal":1913,"source":"contracts/TownHall.algo.ts:489","pc":[2747,2748,2749]},{"teal":1914,"source":"contracts/TownHall.algo.ts:489","pc":[2750,2751]},{"teal":1915,"source":"contracts/TownHall.algo.ts:489","pc":[2752]},{"teal":1916,"source":"contracts/TownHall.algo.ts:489","pc":[2753]},{"teal":1917,"source":"contracts/TownHall.algo.ts:489","pc":[2754]},{"teal":1918,"source":"contracts/TownHall.algo.ts:489","pc":[2755]},{"teal":1921,"source":"contracts/TownHall.algo.ts:489","pc":[2756,2757,2758]},{"teal":1926,"source":"contracts/TownHall.algo.ts:490","pc":[2759,2760]},{"teal":1927,"source":"contracts/TownHall.algo.ts:490","pc":[2761]},{"teal":1928,"source":"contracts/TownHall.algo.ts:490","pc":[2762]},{"teal":1929,"source":"contracts/TownHall.algo.ts:489","pc":[2763,2764,2765]},{"teal":1934,"source":"contracts/TownHall.algo.ts:491","pc":[2766,2767]},{"teal":1935,"source":"contracts/TownHall.algo.ts:491","pc":[2768,2769]},{"teal":1936,"source":"contracts/TownHall.algo.ts:491","pc":[2770]},{"teal":1937,"source":"contracts/TownHall.algo.ts:491","pc":[2771,2772,2773]},{"teal":1938,"source":"contracts/TownHall.algo.ts:491","pc":[2774]},{"teal":1939,"source":"contracts/TownHall.algo.ts:491","pc":[2775]},{"teal":1940,"source":"contracts/TownHall.algo.ts:491","pc":[2776,2777,2778]},{"teal":1941,"source":"contracts/TownHall.algo.ts:491","pc":[2779,2780]},{"teal":1942,"source":"contracts/TownHall.algo.ts:491","pc":[2781]},{"teal":1943,"source":"contracts/TownHall.algo.ts:491","pc":[2782]},{"teal":1944,"source":"contracts/TownHall.algo.ts:491","pc":[2783]},{"teal":1945,"source":"contracts/TownHall.algo.ts:491","pc":[2784]},{"teal":1948,"source":"contracts/TownHall.algo.ts:491","pc":[2785,2786,2787]},{"teal":1953,"source":"contracts/TownHall.algo.ts:492","pc":[2788,2789]},{"teal":1954,"source":"contracts/TownHall.algo.ts:492","pc":[2790]},{"teal":1955,"source":"contracts/TownHall.algo.ts:492","pc":[2791]},{"teal":1956,"source":"contracts/TownHall.algo.ts:491","pc":[2792,2793,2794]},{"teal":1960,"source":"contracts/TownHall.algo.ts:494","errorMessage":"Address not allowed to vote.","pc":[2795]},{"teal":1965,"source":"contracts/TownHall.algo.ts:497","pc":[2796,2797]},{"teal":1966,"source":"contracts/TownHall.algo.ts:497","pc":[2798]},{"teal":1967,"source":"contracts/TownHall.algo.ts:497","pc":[2799]},{"teal":1968,"source":"contracts/TownHall.algo.ts:497","pc":[2800]},{"teal":1969,"source":"contracts/TownHall.algo.ts:497","pc":[2801,2802]},{"teal":1970,"source":"contracts/TownHall.algo.ts:497","pc":[2803]},{"teal":1971,"source":"contracts/TownHall.algo.ts:497","pc":[2804]},{"teal":1976,"source":"contracts/TownHall.algo.ts:499","pc":[2805,2806]},{"teal":1977,"source":"contracts/TownHall.algo.ts:499","pc":[2807]},{"teal":1978,"source":"contracts/TownHall.algo.ts:499","pc":[2808,2809]},{"teal":1979,"source":"contracts/TownHall.algo.ts:499","pc":[2810]},{"teal":1980,"source":"contracts/TownHall.algo.ts:499","pc":[2811]},{"teal":1981,"source":"contracts/TownHall.algo.ts:499","pc":[2812,2813,2814]},{"teal":1986,"source":"contracts/TownHall.algo.ts:501","pc":[2815]},{"teal":1987,"source":"contracts/Constants.ts:20","pc":[2816,2817]},{"teal":1988,"source":"contracts/TownHall.algo.ts:501","pc":[2818]},{"teal":1992,"source":"contracts/TownHall.algo.ts:504","pc":[2819,2820]},{"teal":1993,"source":"contracts/TownHall.algo.ts:504","pc":[2821]},{"teal":1994,"source":"contracts/TownHall.algo.ts:504","pc":[2822]},{"teal":1998,"source":"contracts/TownHall.algo.ts:505","pc":[2823,2824]},{"teal":1999,"source":"contracts/TownHall.algo.ts:505","pc":[2825]},{"teal":2000,"source":"contracts/TownHall.algo.ts:505","pc":[2826]},{"teal":2004,"source":"contracts/TownHall.algo.ts:506","pc":[2827,2828]},{"teal":2005,"source":"contracts/TownHall.algo.ts:506","pc":[2829]},{"teal":2006,"source":"contracts/TownHall.algo.ts:506","pc":[2830]},{"teal":2010,"source":"contracts/TownHall.algo.ts:507","pc":[2831,2832]},{"teal":2011,"source":"contracts/TownHall.algo.ts:507","pc":[2833]},{"teal":2012,"source":"contracts/TownHall.algo.ts:507","pc":[2834]},{"teal":2016,"source":"contracts/TownHall.algo.ts:508","pc":[2835,2836]},{"teal":2017,"source":"contracts/TownHall.algo.ts:508","pc":[2837]},{"teal":2018,"source":"contracts/TownHall.algo.ts:508","pc":[2838]},{"teal":2022,"source":"contracts/TownHall.algo.ts:509","pc":[2839,2840]},{"teal":2023,"source":"contracts/TownHall.algo.ts:509","pc":[2841]},{"teal":2024,"source":"contracts/TownHall.algo.ts:509","pc":[2842]},{"teal":2028,"source":"contracts/TownHall.algo.ts:510","pc":[2843,2844]},{"teal":2029,"source":"contracts/TownHall.algo.ts:510","pc":[2845]},{"teal":2030,"source":"contracts/TownHall.algo.ts:510","pc":[2846]},{"teal":2033,"source":"contracts/TownHall.algo.ts:447","pc":[2847]},{"teal":2038,"source":"contracts/TownHall.algo.ts:516","pc":[2848,2849,2850]},{"teal":2039,"source":"contracts/TownHall.algo.ts:516","pc":[2851]},{"teal":2040,"source":"contracts/TownHall.algo.ts:516","pc":[2852]},{"teal":2044,"source":"contracts/TownHall.algo.ts:516","pc":[2853,2854,2855]},{"teal":2047,"source":"contracts/TownHall.algo.ts:516","pc":[2856]},{"teal":2048,"source":"contracts/TownHall.algo.ts:516","pc":[2857]},{"teal":2055,"source":"contracts/TownHall.algo.ts:518","pc":[2858]},{"teal":2056,"source":"contracts/TownHall.algo.ts:518","pc":[2859]},{"teal":2057,"source":"contracts/Constants.ts:20","pc":[2860,2861]},{"teal":2058,"source":"contracts/TownHall.algo.ts:518","pc":[2862]},{"teal":2061,"source":"contracts/TownHall.algo.ts:517","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[2863]},{"teal":2065,"source":"contracts/TownHall.algo.ts:522","pc":[2864]},{"teal":2066,"source":"contracts/TownHall.algo.ts:522","pc":[2865,2866]},{"teal":2067,"source":"contracts/TownHall.algo.ts:522","pc":[2867]},{"teal":2071,"source":"contracts/TownHall.algo.ts:523","pc":[2868]},{"teal":2072,"source":"contracts/TownHall.algo.ts:523","pc":[2869,2870]},{"teal":2076,"source":"contracts/TownHall.algo.ts:529","pc":[2871,2872]},{"teal":2077,"source":"contracts/TownHall.algo.ts:529","pc":[2873,2874]},{"teal":2078,"source":"contracts/TownHall.algo.ts:529","pc":[2875]},{"teal":2079,"source":"contracts/TownHall.algo.ts:529","pc":[2876]},{"teal":2080,"source":"contracts/TownHall.algo.ts:529","pc":[2877]},{"teal":2081,"source":"contracts/TownHall.algo.ts:529","pc":[2878,2879]},{"teal":2086,"source":"contracts/TownHall.algo.ts:531","pc":[2880,2881]},{"teal":2087,"source":"contracts/TownHall.algo.ts:531","pc":[2882]},{"teal":2088,"source":"contracts/TownHall.algo.ts:531","pc":[2883,2884]},{"teal":2089,"source":"contracts/TownHall.algo.ts:531","pc":[2885]},{"teal":2090,"source":"contracts/TownHall.algo.ts:531","pc":[2886]},{"teal":2091,"source":"contracts/TownHall.algo.ts:531","pc":[2887,2888,2889]},{"teal":2092,"source":"contracts/TownHall.algo.ts:531","pc":[2890,2891]},{"teal":2093,"source":"contracts/TownHall.algo.ts:531","pc":[2892]},{"teal":2094,"source":"contracts/TownHall.algo.ts:531","pc":[2893,2894]},{"teal":2095,"source":"contracts/TownHall.algo.ts:531","pc":[2895]},{"teal":2096,"source":"contracts/TownHall.algo.ts:531","pc":[2896]},{"teal":2097,"source":"contracts/TownHall.algo.ts:531","pc":[2897,2898,2899]},{"teal":2098,"source":"contracts/TownHall.algo.ts:531","pc":[2900,2901]},{"teal":2099,"source":"contracts/TownHall.algo.ts:531","pc":[2902]},{"teal":2102,"source":"contracts/TownHall.algo.ts:531","pc":[2903]},{"teal":2105,"source":"contracts/TownHall.algo.ts:531","pc":[2904,2905,2906]},{"teal":2110,"source":"contracts/TownHall.algo.ts:532","pc":[2907]},{"teal":2111,"source":"contracts/TownHall.algo.ts:532","pc":[2908]},{"teal":2112,"source":"contracts/TownHall.algo.ts:532","pc":[2909]},{"teal":2113,"source":"contracts/TownHall.algo.ts:532","pc":[2910,2911,2912]},{"teal":2114,"source":"contracts/TownHall.algo.ts:532","pc":[2913]},{"teal":2118,"source":"contracts/TownHall.algo.ts:533","pc":[2914,2915]},{"teal":2119,"source":"contracts/TownHall.algo.ts:533","pc":[2916]},{"teal":2120,"source":"contracts/TownHall.algo.ts:533","pc":[2917,2918]},{"teal":2126,"source":"contracts/TownHall.algo.ts:536","pc":[2919,2920]},{"teal":2127,"source":"contracts/TownHall.algo.ts:536","pc":[2921]},{"teal":2128,"source":"contracts/TownHall.algo.ts:536","pc":[2922,2923]},{"teal":2129,"source":"contracts/TownHall.algo.ts:536","pc":[2924]},{"teal":2130,"source":"contracts/TownHall.algo.ts:536","pc":[2925]},{"teal":2131,"source":"contracts/TownHall.algo.ts:536","pc":[2926,2927,2928]},{"teal":2132,"source":"contracts/TownHall.algo.ts:536","pc":[2929,2930]},{"teal":2133,"source":"contracts/TownHall.algo.ts:536","pc":[2931]},{"teal":2134,"source":"contracts/TownHall.algo.ts:536","pc":[2932,2933]},{"teal":2135,"source":"contracts/TownHall.algo.ts:536","pc":[2934]},{"teal":2136,"source":"contracts/TownHall.algo.ts:536","pc":[2935]},{"teal":2137,"source":"contracts/TownHall.algo.ts:536","pc":[2936,2937,2938]},{"teal":2138,"source":"contracts/TownHall.algo.ts:536","pc":[2939,2940]},{"teal":2139,"source":"contracts/TownHall.algo.ts:536","pc":[2941]},{"teal":2142,"source":"contracts/TownHall.algo.ts:536","pc":[2942]},{"teal":2145,"source":"contracts/TownHall.algo.ts:536","pc":[2943,2944,2945]},{"teal":2150,"source":"contracts/TownHall.algo.ts:537","pc":[2946]},{"teal":2151,"source":"contracts/TownHall.algo.ts:537","pc":[2947,2948]},{"teal":2152,"source":"contracts/TownHall.algo.ts:537","pc":[2949]},{"teal":2153,"source":"contracts/TownHall.algo.ts:537","pc":[2950,2951,2952]},{"teal":2154,"source":"contracts/TownHall.algo.ts:537","pc":[2953]},{"teal":2158,"source":"contracts/TownHall.algo.ts:538","pc":[2954,2955]},{"teal":2159,"source":"contracts/TownHall.algo.ts:538","pc":[2956]},{"teal":2160,"source":"contracts/TownHall.algo.ts:538","pc":[2957,2958]},{"teal":2166,"source":"contracts/TownHall.algo.ts:541","pc":[2959,2960]},{"teal":2167,"source":"contracts/TownHall.algo.ts:541","pc":[2961]},{"teal":2168,"source":"contracts/TownHall.algo.ts:541","pc":[2962,2963]},{"teal":2169,"source":"contracts/TownHall.algo.ts:541","pc":[2964]},{"teal":2170,"source":"contracts/TownHall.algo.ts:541","pc":[2965]},{"teal":2171,"source":"contracts/TownHall.algo.ts:541","pc":[2966,2967,2968]},{"teal":2172,"source":"contracts/TownHall.algo.ts:541","pc":[2969,2970]},{"teal":2173,"source":"contracts/TownHall.algo.ts:541","pc":[2971]},{"teal":2174,"source":"contracts/TownHall.algo.ts:541","pc":[2972,2973]},{"teal":2175,"source":"contracts/TownHall.algo.ts:541","pc":[2974]},{"teal":2176,"source":"contracts/TownHall.algo.ts:541","pc":[2975]},{"teal":2177,"source":"contracts/TownHall.algo.ts:541","pc":[2976,2977,2978]},{"teal":2178,"source":"contracts/TownHall.algo.ts:541","pc":[2979,2980]},{"teal":2179,"source":"contracts/TownHall.algo.ts:541","pc":[2981]},{"teal":2182,"source":"contracts/TownHall.algo.ts:541","pc":[2982]},{"teal":2185,"source":"contracts/TownHall.algo.ts:541","pc":[2983,2984,2985]},{"teal":2190,"source":"contracts/TownHall.algo.ts:542","pc":[2986]},{"teal":2191,"source":"contracts/TownHall.algo.ts:542","pc":[2987,2988]},{"teal":2192,"source":"contracts/TownHall.algo.ts:542","pc":[2989]},{"teal":2193,"source":"contracts/TownHall.algo.ts:542","pc":[2990,2991,2992]},{"teal":2194,"source":"contracts/TownHall.algo.ts:542","pc":[2993]},{"teal":2198,"source":"contracts/TownHall.algo.ts:543","pc":[2994,2995]},{"teal":2199,"source":"contracts/TownHall.algo.ts:543","pc":[2996]},{"teal":2200,"source":"contracts/TownHall.algo.ts:543","pc":[2997,2998]},{"teal":2206,"source":"contracts/TownHall.algo.ts:546","pc":[2999,3000]},{"teal":2207,"source":"contracts/TownHall.algo.ts:546","pc":[3001]},{"teal":2208,"source":"contracts/TownHall.algo.ts:546","pc":[3002,3003]},{"teal":2209,"source":"contracts/TownHall.algo.ts:546","pc":[3004]},{"teal":2210,"source":"contracts/TownHall.algo.ts:546","pc":[3005]},{"teal":2211,"source":"contracts/TownHall.algo.ts:546","pc":[3006,3007,3008]},{"teal":2212,"source":"contracts/TownHall.algo.ts:546","pc":[3009,3010]},{"teal":2213,"source":"contracts/TownHall.algo.ts:546","pc":[3011]},{"teal":2214,"source":"contracts/TownHall.algo.ts:546","pc":[3012,3013]},{"teal":2215,"source":"contracts/TownHall.algo.ts:546","pc":[3014]},{"teal":2216,"source":"contracts/TownHall.algo.ts:546","pc":[3015]},{"teal":2217,"source":"contracts/TownHall.algo.ts:546","pc":[3016,3017,3018]},{"teal":2218,"source":"contracts/TownHall.algo.ts:546","pc":[3019,3020]},{"teal":2219,"source":"contracts/TownHall.algo.ts:546","pc":[3021]},{"teal":2222,"source":"contracts/TownHall.algo.ts:546","pc":[3022]},{"teal":2225,"source":"contracts/TownHall.algo.ts:546","pc":[3023,3024,3025]},{"teal":2230,"source":"contracts/TownHall.algo.ts:547","pc":[3026]},{"teal":2231,"source":"contracts/TownHall.algo.ts:547","pc":[3027,3028]},{"teal":2232,"source":"contracts/TownHall.algo.ts:547","pc":[3029]},{"teal":2233,"source":"contracts/TownHall.algo.ts:547","pc":[3030,3031,3032]},{"teal":2234,"source":"contracts/TownHall.algo.ts:547","pc":[3033]},{"teal":2238,"source":"contracts/TownHall.algo.ts:548","pc":[3034,3035]},{"teal":2239,"source":"contracts/TownHall.algo.ts:548","pc":[3036]},{"teal":2240,"source":"contracts/TownHall.algo.ts:548","pc":[3037,3038]},{"teal":2246,"source":"contracts/TownHall.algo.ts:551","pc":[3039,3040]},{"teal":2247,"source":"contracts/TownHall.algo.ts:551","pc":[3041]},{"teal":2248,"source":"contracts/TownHall.algo.ts:551","pc":[3042,3043]},{"teal":2249,"source":"contracts/TownHall.algo.ts:551","pc":[3044]},{"teal":2250,"source":"contracts/TownHall.algo.ts:551","pc":[3045]},{"teal":2251,"source":"contracts/TownHall.algo.ts:551","pc":[3046,3047,3048]},{"teal":2252,"source":"contracts/TownHall.algo.ts:551","pc":[3049,3050]},{"teal":2253,"source":"contracts/TownHall.algo.ts:551","pc":[3051]},{"teal":2254,"source":"contracts/TownHall.algo.ts:551","pc":[3052,3053]},{"teal":2255,"source":"contracts/TownHall.algo.ts:551","pc":[3054]},{"teal":2256,"source":"contracts/TownHall.algo.ts:551","pc":[3055]},{"teal":2257,"source":"contracts/TownHall.algo.ts:551","pc":[3056,3057,3058]},{"teal":2258,"source":"contracts/TownHall.algo.ts:551","pc":[3059,3060]},{"teal":2259,"source":"contracts/TownHall.algo.ts:551","pc":[3061]},{"teal":2262,"source":"contracts/TownHall.algo.ts:551","pc":[3062]},{"teal":2265,"source":"contracts/TownHall.algo.ts:551","pc":[3063,3064,3065]},{"teal":2270,"source":"contracts/TownHall.algo.ts:552","pc":[3066]},{"teal":2271,"source":"contracts/TownHall.algo.ts:552","pc":[3067,3068]},{"teal":2272,"source":"contracts/TownHall.algo.ts:552","pc":[3069]},{"teal":2273,"source":"contracts/TownHall.algo.ts:552","pc":[3070,3071,3072]},{"teal":2274,"source":"contracts/TownHall.algo.ts:552","pc":[3073]},{"teal":2278,"source":"contracts/TownHall.algo.ts:553","pc":[3074,3075]},{"teal":2279,"source":"contracts/TownHall.algo.ts:553","pc":[3076]},{"teal":2280,"source":"contracts/TownHall.algo.ts:553","pc":[3077,3078]},{"teal":2286,"source":"contracts/TownHall.algo.ts:556","pc":[3079,3080]},{"teal":2287,"source":"contracts/TownHall.algo.ts:556","pc":[3081]},{"teal":2288,"source":"contracts/TownHall.algo.ts:556","pc":[3082,3083]},{"teal":2289,"source":"contracts/TownHall.algo.ts:556","pc":[3084]},{"teal":2290,"source":"contracts/TownHall.algo.ts:556","pc":[3085]},{"teal":2291,"source":"contracts/TownHall.algo.ts:556","pc":[3086,3087,3088]},{"teal":2292,"source":"contracts/TownHall.algo.ts:556","pc":[3089,3090]},{"teal":2293,"source":"contracts/TownHall.algo.ts:556","pc":[3091]},{"teal":2294,"source":"contracts/TownHall.algo.ts:556","pc":[3092,3093]},{"teal":2295,"source":"contracts/TownHall.algo.ts:556","pc":[3094]},{"teal":2296,"source":"contracts/TownHall.algo.ts:556","pc":[3095]},{"teal":2297,"source":"contracts/TownHall.algo.ts:556","pc":[3096,3097,3098]},{"teal":2298,"source":"contracts/TownHall.algo.ts:556","pc":[3099,3100]},{"teal":2299,"source":"contracts/TownHall.algo.ts:556","pc":[3101]},{"teal":2302,"source":"contracts/TownHall.algo.ts:556","pc":[3102]},{"teal":2305,"source":"contracts/TownHall.algo.ts:556","pc":[3103,3104,3105]},{"teal":2310,"source":"contracts/TownHall.algo.ts:557","pc":[3106]},{"teal":2311,"source":"contracts/TownHall.algo.ts:557","pc":[3107,3108]},{"teal":2312,"source":"contracts/TownHall.algo.ts:557","pc":[3109]},{"teal":2313,"source":"contracts/TownHall.algo.ts:557","pc":[3110,3111,3112]},{"teal":2314,"source":"contracts/TownHall.algo.ts:557","pc":[3113]},{"teal":2318,"source":"contracts/TownHall.algo.ts:558","pc":[3114,3115]},{"teal":2319,"source":"contracts/TownHall.algo.ts:558","pc":[3116]},{"teal":2320,"source":"contracts/TownHall.algo.ts:558","pc":[3117,3118]},{"teal":2325,"source":"contracts/TownHall.algo.ts:561","pc":[3119]},{"teal":2326,"source":"contracts/TownHall.algo.ts:561","pc":[3120]},{"teal":2327,"source":"contracts/TownHall.algo.ts:561","pc":[3121,3122]},{"teal":2328,"source":"contracts/TownHall.algo.ts:561","pc":[3123]},{"teal":2331,"source":"contracts/TownHall.algo.ts:561","errorMessage":"Error state: Zero Address won vote!","pc":[3124]},{"teal":2335,"source":"contracts/TownHall.algo.ts:562","pc":[3125,3126]},{"teal":2336,"source":"contracts/TownHall.algo.ts:562","pc":[3127]},{"teal":2337,"source":"contracts/TownHall.algo.ts:562","pc":[3128]},{"teal":2340,"source":"contracts/TownHall.algo.ts:562","errorMessage":"Error state: No votes were cast!","pc":[3129]},{"teal":2345,"source":"contracts/TownHall.algo.ts:567","pc":[3130]},{"teal":2346,"source":"contracts/TownHall.algo.ts:567","pc":[3131]},{"teal":2347,"source":"contracts/TownHall.algo.ts:567","pc":[3132]},{"teal":2348,"source":"contracts/TownHall.algo.ts:567","pc":[3133]},{"teal":2349,"source":"contracts/TownHall.algo.ts:567","pc":[3134,3135,3136]},{"teal":2350,"source":"contracts/TownHall.algo.ts:567","pc":[3137]},{"teal":2351,"source":"contracts/TownHall.algo.ts:567","pc":[3138,3139,3140]},{"teal":2356,"source":"contracts/TownHall.algo.ts:568","pc":[3141]},{"teal":2357,"source":"contracts/TownHall.algo.ts:568","pc":[3142]},{"teal":2358,"source":"contracts/TownHall.algo.ts:568","pc":[3143,3144]},{"teal":2359,"source":"contracts/TownHall.algo.ts:568","pc":[3145,3146]},{"teal":2360,"source":"contracts/TownHall.algo.ts:568","pc":[3147]},{"teal":2361,"source":"contracts/TownHall.algo.ts:568","pc":[3148]},{"teal":2362,"source":"contracts/TownHall.algo.ts:568","pc":[3149]},{"teal":2368,"source":"contracts/TownHall.algo.ts:571","pc":[3150]},{"teal":2369,"source":"contracts/TownHall.algo.ts:571","pc":[3151]},{"teal":2370,"source":"contracts/TownHall.algo.ts:571","pc":[3152,3153]},{"teal":2371,"source":"contracts/TownHall.algo.ts:571","pc":[3154]},{"teal":2372,"source":"contracts/TownHall.algo.ts:571","pc":[3155,3156,3157]},{"teal":2373,"source":"contracts/TownHall.algo.ts:571","pc":[3158]},{"teal":2374,"source":"contracts/TownHall.algo.ts:571","pc":[3159,3160,3161]},{"teal":2379,"source":"contracts/TownHall.algo.ts:572","pc":[3162,3163]},{"teal":2380,"source":"contracts/TownHall.algo.ts:572","pc":[3164]},{"teal":2381,"source":"contracts/TownHall.algo.ts:572","pc":[3165,3166]},{"teal":2382,"source":"contracts/TownHall.algo.ts:572","pc":[3167,3168]},{"teal":2383,"source":"contracts/TownHall.algo.ts:572","pc":[3169,3170]},{"teal":2384,"source":"contracts/TownHall.algo.ts:572","pc":[3171]},{"teal":2385,"source":"contracts/TownHall.algo.ts:572","pc":[3172]},{"teal":2391,"source":"contracts/TownHall.algo.ts:575","pc":[3173]},{"teal":2392,"source":"contracts/TownHall.algo.ts:575","pc":[3174]},{"teal":2393,"source":"contracts/TownHall.algo.ts:575","pc":[3175,3176]},{"teal":2394,"source":"contracts/TownHall.algo.ts:575","pc":[3177]},{"teal":2395,"source":"contracts/TownHall.algo.ts:575","pc":[3178,3179,3180]},{"teal":2396,"source":"contracts/TownHall.algo.ts:575","pc":[3181]},{"teal":2397,"source":"contracts/TownHall.algo.ts:575","pc":[3182,3183,3184]},{"teal":2402,"source":"contracts/TownHall.algo.ts:576","pc":[3185,3186]},{"teal":2403,"source":"contracts/TownHall.algo.ts:576","pc":[3187]},{"teal":2404,"source":"contracts/TownHall.algo.ts:576","pc":[3188,3189]},{"teal":2405,"source":"contracts/TownHall.algo.ts:576","pc":[3190,3191]},{"teal":2406,"source":"contracts/TownHall.algo.ts:576","pc":[3192,3193]},{"teal":2407,"source":"contracts/TownHall.algo.ts:576","pc":[3194]},{"teal":2408,"source":"contracts/TownHall.algo.ts:576","pc":[3195]},{"teal":2414,"source":"contracts/TownHall.algo.ts:579","pc":[3196]},{"teal":2415,"source":"contracts/TownHall.algo.ts:579","pc":[3197]},{"teal":2416,"source":"contracts/TownHall.algo.ts:579","pc":[3198,3199]},{"teal":2417,"source":"contracts/TownHall.algo.ts:579","pc":[3200]},{"teal":2418,"source":"contracts/TownHall.algo.ts:579","pc":[3201,3202,3203]},{"teal":2419,"source":"contracts/TownHall.algo.ts:579","pc":[3204]},{"teal":2420,"source":"contracts/TownHall.algo.ts:579","pc":[3205,3206,3207]},{"teal":2425,"source":"contracts/TownHall.algo.ts:580","pc":[3208,3209]},{"teal":2426,"source":"contracts/TownHall.algo.ts:580","pc":[3210]},{"teal":2427,"source":"contracts/TownHall.algo.ts:580","pc":[3211,3212]},{"teal":2428,"source":"contracts/TownHall.algo.ts:580","pc":[3213,3214]},{"teal":2429,"source":"contracts/TownHall.algo.ts:580","pc":[3215,3216]},{"teal":2430,"source":"contracts/TownHall.algo.ts:580","pc":[3217]},{"teal":2431,"source":"contracts/TownHall.algo.ts:580","pc":[3218]},{"teal":2437,"source":"contracts/TownHall.algo.ts:583","pc":[3219]},{"teal":2438,"source":"contracts/TownHall.algo.ts:583","pc":[3220]},{"teal":2439,"source":"contracts/TownHall.algo.ts:583","pc":[3221,3222]},{"teal":2440,"source":"contracts/TownHall.algo.ts:583","pc":[3223]},{"teal":2441,"source":"contracts/TownHall.algo.ts:583","pc":[3224,3225,3226]},{"teal":2442,"source":"contracts/TownHall.algo.ts:583","pc":[3227]},{"teal":2443,"source":"contracts/TownHall.algo.ts:583","pc":[3228,3229,3230]},{"teal":2448,"source":"contracts/TownHall.algo.ts:584","pc":[3231,3232]},{"teal":2449,"source":"contracts/TownHall.algo.ts:584","pc":[3233]},{"teal":2450,"source":"contracts/TownHall.algo.ts:584","pc":[3234,3235]},{"teal":2451,"source":"contracts/TownHall.algo.ts:584","pc":[3236,3237]},{"teal":2452,"source":"contracts/TownHall.algo.ts:584","pc":[3238,3239]},{"teal":2453,"source":"contracts/TownHall.algo.ts:584","pc":[3240]},{"teal":2454,"source":"contracts/TownHall.algo.ts:584","pc":[3241]},{"teal":2460,"source":"contracts/TownHall.algo.ts:587","pc":[3242]},{"teal":2461,"source":"contracts/TownHall.algo.ts:587","pc":[3243]},{"teal":2462,"source":"contracts/TownHall.algo.ts:587","pc":[3244,3245]},{"teal":2463,"source":"contracts/TownHall.algo.ts:587","pc":[3246]},{"teal":2464,"source":"contracts/TownHall.algo.ts:587","pc":[3247,3248,3249]},{"teal":2465,"source":"contracts/TownHall.algo.ts:587","pc":[3250]},{"teal":2466,"source":"contracts/TownHall.algo.ts:587","pc":[3251,3252,3253]},{"teal":2471,"source":"contracts/TownHall.algo.ts:588","pc":[3254,3255]},{"teal":2472,"source":"contracts/TownHall.algo.ts:588","pc":[3256]},{"teal":2473,"source":"contracts/TownHall.algo.ts:588","pc":[3257,3258]},{"teal":2474,"source":"contracts/TownHall.algo.ts:588","pc":[3259,3260]},{"teal":2475,"source":"contracts/TownHall.algo.ts:588","pc":[3261,3262]},{"teal":2476,"source":"contracts/TownHall.algo.ts:588","pc":[3263]},{"teal":2477,"source":"contracts/TownHall.algo.ts:588","pc":[3264]},{"teal":2482,"source":"contracts/TownHall.algo.ts:591","pc":[3265,3266]},{"teal":2483,"source":"contracts/TownHall.algo.ts:591","pc":[3267]},{"teal":2484,"source":"contracts/TownHall.algo.ts:591","pc":[3268]},{"teal":2485,"source":"contracts/TownHall.algo.ts:591","pc":[3269]},{"teal":2486,"source":"contracts/TownHall.algo.ts:591","pc":[3270,3271]},{"teal":2487,"source":"contracts/TownHall.algo.ts:591","pc":[3272]},{"teal":2488,"source":"contracts/TownHall.algo.ts:591","pc":[3273]},{"teal":2492,"source":"contracts/TownHall.algo.ts:595","pc":[3274,3275]},{"teal":2493,"source":"contracts/TownHall.algo.ts:595","pc":[3276]},{"teal":2494,"source":"contracts/TownHall.algo.ts:595","pc":[3277]},{"teal":2498,"source":"contracts/TownHall.algo.ts:596","pc":[3278,3279]},{"teal":2499,"source":"contracts/TownHall.algo.ts:596","pc":[3280]},{"teal":2500,"source":"contracts/TownHall.algo.ts:596","pc":[3281]},{"teal":2504,"source":"contracts/TownHall.algo.ts:597","pc":[3282,3283]},{"teal":2505,"source":"contracts/TownHall.algo.ts:597","pc":[3284]},{"teal":2506,"source":"contracts/TownHall.algo.ts:597","pc":[3285]},{"teal":2510,"source":"contracts/TownHall.algo.ts:598","pc":[3286,3287]},{"teal":2511,"source":"contracts/TownHall.algo.ts:598","pc":[3288]},{"teal":2512,"source":"contracts/TownHall.algo.ts:598","pc":[3289]},{"teal":2516,"source":"contracts/TownHall.algo.ts:599","pc":[3290,3291]},{"teal":2517,"source":"contracts/TownHall.algo.ts:599","pc":[3292]},{"teal":2518,"source":"contracts/TownHall.algo.ts:599","pc":[3293]},{"teal":2522,"source":"contracts/TownHall.algo.ts:600","pc":[3294,3295]},{"teal":2523,"source":"contracts/TownHall.algo.ts:600","pc":[3296]},{"teal":2524,"source":"contracts/TownHall.algo.ts:600","pc":[3297]},{"teal":2528,"source":"contracts/TownHall.algo.ts:602","pc":[3298]},{"teal":2529,"source":"contracts/Constants.ts:21","pc":[3299,3300]},{"teal":2530,"source":"contracts/TownHall.algo.ts:602","pc":[3301]},{"teal":2531,"source":"contracts/TownHall.algo.ts:516","pc":[3302]},{"teal":2536,"source":"contracts/TownHall.algo.ts:605","pc":[3303,3304,3305]},{"teal":2537,"source":"contracts/TownHall.algo.ts:605","pc":[3306,3307,3308]},{"teal":2540,"source":"contracts/TownHall.algo.ts:605","pc":[3309,3310,3311]},{"teal":2541,"source":"contracts/TownHall.algo.ts:605","pc":[3312]},{"teal":2542,"source":"contracts/TownHall.algo.ts:605","pc":[3313]},{"teal":2546,"source":"contracts/TownHall.algo.ts:605","pc":[3314,3315,3316]},{"teal":2549,"source":"contracts/TownHall.algo.ts:605","pc":[3317]},{"teal":2550,"source":"contracts/TownHall.algo.ts:605","pc":[3318,3319]},{"teal":2557,"source":"contracts/TownHall.algo.ts:607","pc":[3320]},{"teal":2558,"source":"contracts/TownHall.algo.ts:607","pc":[3321]},{"teal":2559,"source":"contracts/Constants.ts:21","pc":[3322,3323]},{"teal":2560,"source":"contracts/TownHall.algo.ts:607","pc":[3324]},{"teal":2563,"source":"contracts/TownHall.algo.ts:606","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[3325]},{"teal":2567,"source":"contracts/TownHall.algo.ts:611","pc":[3326]},{"teal":2568,"source":"contracts/TownHall.algo.ts:611","pc":[3327]},{"teal":2569,"source":"contracts/TownHall.algo.ts:611","pc":[3328,3329]},{"teal":2570,"source":"contracts/TownHall.algo.ts:611","pc":[3330]},{"teal":2573,"source":"contracts/TownHall.algo.ts:611","errorMessage":"Error state: Other player called method.","pc":[3331]},{"teal":2577,"source":"contracts/TownHall.algo.ts:614","pc":[3332,3333]},{"teal":2578,"source":"contracts/TownHall.algo.ts:614","pc":[3334,3335]},{"teal":2579,"source":"contracts/TownHall.algo.ts:614","pc":[3336,3337]},{"teal":2580,"source":"contracts/TownHall.algo.ts:614","pc":[3338,3339]},{"teal":2584,"source":"contracts/TownHall.algo.ts:615","pc":[3340,3341]},{"teal":2585,"source":"contracts/TownHall.algo.ts:615","pc":[3342,3343,3344]},{"teal":2586,"source":"contracts/TownHall.algo.ts:615","pc":[3345,3346]},{"teal":2590,"source":"contracts/TownHall.algo.ts:616","pc":[3347,3348]},{"teal":2591,"source":"contracts/TownHall.algo.ts:616","pc":[3349,3350]},{"teal":2592,"source":"contracts/TownHall.algo.ts:616","pc":[3351,3352]},{"teal":2593,"source":"contracts/TownHall.algo.ts:616","pc":[3353,3354]},{"teal":2598,"source":"contracts/TownHall.algo.ts:618","pc":[3355,3356]},{"teal":2599,"source":"contracts/TownHall.algo.ts:618","pc":[3357,3358]},{"teal":2600,"source":"contracts/TownHall.algo.ts:618","pc":[3359]},{"teal":2601,"source":"contracts/TownHall.algo.ts:618","pc":[3360]},{"teal":2602,"source":"contracts/TownHall.algo.ts:618","pc":[3361,3362,3363]},{"teal":2607,"source":"contracts/TownHall.algo.ts:621","pc":[3364,3365]},{"teal":2608,"source":"contracts/TownHall.algo.ts:621","pc":[3366,3367]},{"teal":2609,"source":"contracts/TownHall.algo.ts:621","pc":[3368]},{"teal":2613,"source":"contracts/TownHall.algo.ts:622","pc":[3369]},{"teal":2614,"source":"contracts/Constants.ts:28","pc":[3370,3371]},{"teal":2615,"source":"contracts/TownHall.algo.ts:622","pc":[3372]},{"teal":2619,"source":"contracts/TownHall.algo.ts:623","pc":[3373,3374]},{"teal":2620,"source":"contracts/TownHall.algo.ts:623","pc":[3375,3376]},{"teal":2621,"source":"contracts/TownHall.algo.ts:623","pc":[3377]},{"teal":2625,"source":"contracts/TownHall.algo.ts:624","pc":[3378]},{"teal":2631,"source":"contracts/TownHall.algo.ts:627","pc":[3379,3380]},{"teal":2632,"source":"contracts/TownHall.algo.ts:627","pc":[3381,3382]},{"teal":2633,"source":"contracts/TownHall.algo.ts:627","pc":[3383]},{"teal":2634,"source":"contracts/TownHall.algo.ts:627","pc":[3384]},{"teal":2635,"source":"contracts/TownHall.algo.ts:627","pc":[3385,3386,3387]},{"teal":2640,"source":"contracts/TownHall.algo.ts:629","pc":[3388,3389]},{"teal":2641,"source":"contracts/TownHall.algo.ts:629","pc":[3390,3391]},{"teal":2642,"source":"contracts/TownHall.algo.ts:629","pc":[3392]},{"teal":2647,"source":"contracts/TownHall.algo.ts:632","pc":[3393]},{"teal":2648,"source":"contracts/TownHall.algo.ts:632","pc":[3394,3395]},{"teal":2649,"source":"contracts/TownHall.algo.ts:632","pc":[3396]},{"teal":2654,"source":"contracts/TownHall.algo.ts:634","pc":[3397,3398]},{"teal":2655,"source":"contracts/TownHall.algo.ts:634","pc":[3399]},{"teal":2656,"source":"contracts/TownHall.algo.ts:634","pc":[3400,3401]},{"teal":2657,"source":"contracts/TownHall.algo.ts:634","pc":[3402]},{"teal":2658,"source":"contracts/TownHall.algo.ts:634","pc":[3403,3404,3405]},{"teal":2663,"source":"contracts/TownHall.algo.ts:637","pc":[3406]},{"teal":2664,"source":"contracts/Constants.ts:28","pc":[3407,3408]},{"teal":2665,"source":"contracts/TownHall.algo.ts:637","pc":[3409]},{"teal":2669,"source":"contracts/TownHall.algo.ts:638","pc":[3410,3411]},{"teal":2670,"source":"contracts/TownHall.algo.ts:638","pc":[3412,3413]},{"teal":2671,"source":"contracts/TownHall.algo.ts:638","pc":[3414]},{"teal":2675,"source":"contracts/TownHall.algo.ts:639","pc":[3415]},{"teal":2680,"source":"contracts/TownHall.algo.ts:642","pc":[3416]},{"teal":2681,"source":"contracts/Constants.ts:22","pc":[3417]},{"teal":2682,"source":"contracts/TownHall.algo.ts:642","pc":[3418]},{"teal":2686,"source":"contracts/TownHall.algo.ts:643","pc":[3419,3420]},{"teal":2687,"source":"contracts/TownHall.algo.ts:643","pc":[3421,3422]},{"teal":2688,"source":"contracts/TownHall.algo.ts:643","pc":[3423]},{"teal":2689,"source":"contracts/TownHall.algo.ts:605","pc":[3424]},{"teal":2694,"source":"contracts/TownHall.algo.ts:646","pc":[3425,3426,3427]},{"teal":2695,"source":"contracts/TownHall.algo.ts:646","pc":[3428,3429,3430]},{"teal":2698,"source":"contracts/TownHall.algo.ts:646","pc":[3431,3432,3433]},{"teal":2699,"source":"contracts/TownHall.algo.ts:646","pc":[3434]},{"teal":2700,"source":"contracts/TownHall.algo.ts:646","pc":[3435]},{"teal":2704,"source":"contracts/TownHall.algo.ts:646","pc":[3436,3437,3438]},{"teal":2711,"source":"contracts/TownHall.algo.ts:648","pc":[3439]},{"teal":2712,"source":"contracts/TownHall.algo.ts:648","pc":[3440]},{"teal":2713,"source":"contracts/Constants.ts:22","pc":[3441]},{"teal":2714,"source":"contracts/TownHall.algo.ts:648","pc":[3442]},{"teal":2717,"source":"contracts/TownHall.algo.ts:647","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[3443]},{"teal":2721,"source":"contracts/TownHall.algo.ts:652","pc":[3444,3445]},{"teal":2722,"source":"contracts/TownHall.algo.ts:652","pc":[3446,3447]},{"teal":2723,"source":"contracts/TownHall.algo.ts:652","pc":[3448]},{"teal":2724,"source":"contracts/TownHall.algo.ts:652","pc":[3449]},{"teal":2727,"source":"contracts/TownHall.algo.ts:652","errorMessage":"Error state: Non-mafia player called method.","pc":[3450]},{"teal":2731,"source":"contracts/TownHall.algo.ts:654","pc":[3451,3452]},{"teal":2732,"source":"contracts/TownHall.algo.ts:654","pc":[3453,3454]},{"teal":2733,"source":"contracts/TownHall.algo.ts:654","pc":[3455]},{"teal":2738,"source":"contracts/TownHall.algo.ts:656","pc":[3456,3457]},{"teal":2739,"source":"contracts/TownHall.algo.ts:656","pc":[3458]},{"teal":2740,"source":"contracts/TownHall.algo.ts:656","pc":[3459,3460]},{"teal":2741,"source":"contracts/TownHall.algo.ts:656","pc":[3461]},{"teal":2742,"source":"contracts/TownHall.algo.ts:656","pc":[3462,3463,3464]},{"teal":2747,"source":"contracts/TownHall.algo.ts:658","pc":[3465]},{"teal":2748,"source":"contracts/Constants.ts:24","pc":[3466,3467]},{"teal":2749,"source":"contracts/TownHall.algo.ts:658","pc":[3468]},{"teal":2750,"source":"contracts/TownHall.algo.ts:656","pc":[3469,3470,3471]},{"teal":2755,"source":"contracts/TownHall.algo.ts:660","pc":[3472]},{"teal":2756,"source":"contracts/Constants.ts:23","pc":[3473,3474]},{"teal":2757,"source":"contracts/TownHall.algo.ts:660","pc":[3475]},{"teal":2760,"source":"contracts/TownHall.algo.ts:646","pc":[3476]},{"teal":2765,"source":"contracts/TownHall.algo.ts:664","pc":[3477,3478,3479]},{"teal":2766,"source":"contracts/TownHall.algo.ts:664","pc":[3480,3481,3482]},{"teal":2769,"source":"contracts/TownHall.algo.ts:664","pc":[3483,3484,3485]},{"teal":2770,"source":"contracts/TownHall.algo.ts:664","pc":[3486]},{"teal":2771,"source":"contracts/TownHall.algo.ts:664","pc":[3487]},{"teal":2775,"source":"contracts/TownHall.algo.ts:664","pc":[3488,3489,3490]},{"teal":2782,"source":"contracts/TownHall.algo.ts:666","pc":[3491]},{"teal":2783,"source":"contracts/TownHall.algo.ts:666","pc":[3492]},{"teal":2784,"source":"contracts/Constants.ts:23","pc":[3493,3494]},{"teal":2785,"source":"contracts/TownHall.algo.ts:666","pc":[3495]},{"teal":2788,"source":"contracts/TownHall.algo.ts:665","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[3496]},{"teal":2792,"source":"contracts/TownHall.algo.ts:670","pc":[3497,3498]},{"teal":2793,"source":"contracts/TownHall.algo.ts:670","pc":[3499,3500]},{"teal":2794,"source":"contracts/TownHall.algo.ts:670","pc":[3501]},{"teal":2795,"source":"contracts/TownHall.algo.ts:670","pc":[3502]},{"teal":2798,"source":"contracts/TownHall.algo.ts:670","errorMessage":"Error state: Non-doctor player called method.","pc":[3503]},{"teal":2805,"source":"contracts/TownHall.algo.ts:672","pc":[3504,3505]},{"teal":2806,"source":"contracts/TownHall.algo.ts:672","pc":[3506]},{"teal":2807,"source":"contracts/TownHall.algo.ts:672","pc":[3507,3508]},{"teal":2808,"source":"contracts/TownHall.algo.ts:672","pc":[3509]},{"teal":2811,"source":"contracts/TownHall.algo.ts:671","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[3510]},{"teal":2815,"source":"contracts/TownHall.algo.ts:676","pc":[3511,3512]},{"teal":2816,"source":"contracts/TownHall.algo.ts:676","pc":[3513,3514]},{"teal":2817,"source":"contracts/TownHall.algo.ts:676","pc":[3515]},{"teal":2821,"source":"contracts/TownHall.algo.ts:678","pc":[3516]},{"teal":2822,"source":"contracts/Constants.ts:24","pc":[3517,3518]},{"teal":2823,"source":"contracts/TownHall.algo.ts:678","pc":[3519]},{"teal":2824,"source":"contracts/TownHall.algo.ts:664","pc":[3520]},{"teal":2829,"source":"contracts/TownHall.algo.ts:681","pc":[3521,3522,3523]},{"teal":2830,"source":"contracts/TownHall.algo.ts:681","pc":[3524]},{"teal":2831,"source":"contracts/TownHall.algo.ts:681","pc":[3525]},{"teal":2832,"source":"contracts/TownHall.algo.ts:681","pc":[3526]},{"teal":2833,"source":"contracts/TownHall.algo.ts:681","pc":[3527]},{"teal":2836,"source":"contracts/TownHall.algo.ts:681","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[3528]},{"teal":2839,"source":"contracts/TownHall.algo.ts:681","pc":[3529,3530,3531]},{"teal":2840,"source":"contracts/TownHall.algo.ts:681","pc":[3532]},{"teal":2841,"source":"contracts/TownHall.algo.ts:681","pc":[3533]},{"teal":2842,"source":"contracts/TownHall.algo.ts:681","pc":[3534]},{"teal":2843,"source":"contracts/TownHall.algo.ts:681","pc":[3535]},{"teal":2846,"source":"contracts/TownHall.algo.ts:681","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[3536]},{"teal":2849,"source":"contracts/TownHall.algo.ts:681","pc":[3537,3538,3539]},{"teal":2850,"source":"contracts/TownHall.algo.ts:681","pc":[3540]},{"teal":2851,"source":"contracts/TownHall.algo.ts:681","pc":[3541]},{"teal":2855,"source":"contracts/TownHall.algo.ts:681","pc":[3542,3543,3544]},{"teal":2858,"source":"contracts/TownHall.algo.ts:681","pc":[3545]},{"teal":2865,"source":"contracts/TownHall.algo.ts:683","pc":[3546]},{"teal":2866,"source":"contracts/TownHall.algo.ts:683","pc":[3547]},{"teal":2867,"source":"contracts/Constants.ts:24","pc":[3548,3549]},{"teal":2868,"source":"contracts/TownHall.algo.ts:683","pc":[3550]},{"teal":2871,"source":"contracts/TownHall.algo.ts:682","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[3551]},{"teal":2875,"source":"contracts/TownHall.algo.ts:687","pc":[3552,3553]},{"teal":2876,"source":"contracts/TownHall.algo.ts:687","pc":[3554,3555]},{"teal":2877,"source":"contracts/TownHall.algo.ts:687","pc":[3556]},{"teal":2878,"source":"contracts/TownHall.algo.ts:687","pc":[3557]},{"teal":2881,"source":"contracts/TownHall.algo.ts:687","errorMessage":"Error state: Non-mafia player called method.","pc":[3558]},{"teal":2885,"source":"contracts/TownHall.algo.ts:689","pc":[3559,3560]},{"teal":2886,"source":"contracts/TownHall.algo.ts:689","pc":[3561,3562]},{"teal":2887,"source":"contracts/TownHall.algo.ts:689","pc":[3563]},{"teal":2890,"source":"contracts/TownHall.algo.ts:689","errorMessage":"Error state: Victim must be a valid address.","pc":[3564]},{"teal":2894,"source":"contracts/TownHall.algo.ts:693","pc":[3565,3566]},{"teal":2895,"source":"contracts/TownHall.algo.ts:693","pc":[3567,3568]},{"teal":2896,"source":"contracts/TownHall.algo.ts:693","pc":[3569]},{"teal":2897,"source":"contracts/TownHall.algo.ts:693","pc":[3570]},{"teal":2898,"source":"contracts/TownHall.algo.ts:693","pc":[3571,3572]},{"teal":2905,"source":"contracts/TownHall.algo.ts:696","pc":[3573,3574]},{"teal":2906,"source":"contracts/TownHall.algo.ts:696","pc":[3575,3576]},{"teal":2907,"source":"contracts/TownHall.algo.ts:696","pc":[3577]},{"teal":2908,"source":"contracts/TownHall.algo.ts:696","pc":[3578]},{"teal":2911,"source":"contracts/TownHall.algo.ts:695","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3579]},{"teal":2916,"source":"contracts/TownHall.algo.ts:700","pc":[3580,3581]},{"teal":2917,"source":"contracts/TownHall.algo.ts:700","pc":[3582]},{"teal":2918,"source":"contracts/TownHall.algo.ts:700","pc":[3583]},{"teal":2919,"source":"contracts/TownHall.algo.ts:700","pc":[3584,3585,3586]},{"teal":2920,"source":"contracts/TownHall.algo.ts:700","pc":[3587]},{"teal":2921,"source":"contracts/TownHall.algo.ts:700","pc":[3588,3589,3590]},{"teal":2926,"source":"contracts/TownHall.algo.ts:701","pc":[3591,3592]},{"teal":2927,"source":"contracts/TownHall.algo.ts:701","pc":[3593]},{"teal":2928,"source":"contracts/TownHall.algo.ts:701","pc":[3594]},{"teal":2929,"source":"contracts/TownHall.algo.ts:701","pc":[3595,3596,3597]},{"teal":2930,"source":"contracts/TownHall.algo.ts:701","pc":[3598]},{"teal":2931,"source":"contracts/TownHall.algo.ts:700","pc":[3599,3600,3601]},{"teal":2936,"source":"contracts/TownHall.algo.ts:702","pc":[3602,3603]},{"teal":2937,"source":"contracts/TownHall.algo.ts:702","pc":[3604,3605]},{"teal":2938,"source":"contracts/TownHall.algo.ts:702","pc":[3606]},{"teal":2939,"source":"contracts/TownHall.algo.ts:702","pc":[3607,3608,3609]},{"teal":2940,"source":"contracts/TownHall.algo.ts:702","pc":[3610]},{"teal":2941,"source":"contracts/TownHall.algo.ts:702","pc":[3611,3612,3613]},{"teal":2946,"source":"contracts/TownHall.algo.ts:703","pc":[3614,3615]},{"teal":2947,"source":"contracts/TownHall.algo.ts:703","pc":[3616,3617]},{"teal":2948,"source":"contracts/TownHall.algo.ts:703","pc":[3618]},{"teal":2949,"source":"contracts/TownHall.algo.ts:703","pc":[3619,3620,3621]},{"teal":2950,"source":"contracts/TownHall.algo.ts:703","pc":[3622]},{"teal":2951,"source":"contracts/TownHall.algo.ts:702","pc":[3623,3624,3625]},{"teal":2956,"source":"contracts/TownHall.algo.ts:704","pc":[3626,3627]},{"teal":2957,"source":"contracts/TownHall.algo.ts:704","pc":[3628,3629]},{"teal":2958,"source":"contracts/TownHall.algo.ts:704","pc":[3630]},{"teal":2959,"source":"contracts/TownHall.algo.ts:704","pc":[3631,3632,3633]},{"teal":2960,"source":"contracts/TownHall.algo.ts:704","pc":[3634]},{"teal":2961,"source":"contracts/TownHall.algo.ts:704","pc":[3635,3636,3637]},{"teal":2966,"source":"contracts/TownHall.algo.ts:705","pc":[3638,3639]},{"teal":2967,"source":"contracts/TownHall.algo.ts:705","pc":[3640,3641]},{"teal":2968,"source":"contracts/TownHall.algo.ts:705","pc":[3642]},{"teal":2969,"source":"contracts/TownHall.algo.ts:705","pc":[3643,3644,3645]},{"teal":2970,"source":"contracts/TownHall.algo.ts:705","pc":[3646]},{"teal":2971,"source":"contracts/TownHall.algo.ts:704","pc":[3647,3648,3649]},{"teal":2976,"source":"contracts/TownHall.algo.ts:706","pc":[3650,3651]},{"teal":2977,"source":"contracts/TownHall.algo.ts:706","pc":[3652,3653]},{"teal":2978,"source":"contracts/TownHall.algo.ts:706","pc":[3654]},{"teal":2979,"source":"contracts/TownHall.algo.ts:706","pc":[3655,3656,3657]},{"teal":2980,"source":"contracts/TownHall.algo.ts:706","pc":[3658]},{"teal":2981,"source":"contracts/TownHall.algo.ts:706","pc":[3659,3660,3661]},{"teal":2986,"source":"contracts/TownHall.algo.ts:707","pc":[3662,3663]},{"teal":2987,"source":"contracts/TownHall.algo.ts:707","pc":[3664,3665]},{"teal":2988,"source":"contracts/TownHall.algo.ts:707","pc":[3666]},{"teal":2989,"source":"contracts/TownHall.algo.ts:707","pc":[3667,3668,3669]},{"teal":2990,"source":"contracts/TownHall.algo.ts:707","pc":[3670]},{"teal":2991,"source":"contracts/TownHall.algo.ts:706","pc":[3671,3672,3673]},{"teal":2996,"source":"contracts/TownHall.algo.ts:708","pc":[3674,3675]},{"teal":2997,"source":"contracts/TownHall.algo.ts:708","pc":[3676,3677]},{"teal":2998,"source":"contracts/TownHall.algo.ts:708","pc":[3678]},{"teal":2999,"source":"contracts/TownHall.algo.ts:708","pc":[3679,3680,3681]},{"teal":3000,"source":"contracts/TownHall.algo.ts:708","pc":[3682]},{"teal":3001,"source":"contracts/TownHall.algo.ts:708","pc":[3683,3684,3685]},{"teal":3006,"source":"contracts/TownHall.algo.ts:709","pc":[3686,3687]},{"teal":3007,"source":"contracts/TownHall.algo.ts:709","pc":[3688,3689]},{"teal":3008,"source":"contracts/TownHall.algo.ts:709","pc":[3690]},{"teal":3009,"source":"contracts/TownHall.algo.ts:709","pc":[3691,3692,3693]},{"teal":3010,"source":"contracts/TownHall.algo.ts:709","pc":[3694]},{"teal":3011,"source":"contracts/TownHall.algo.ts:708","pc":[3695,3696,3697]},{"teal":3016,"source":"contracts/TownHall.algo.ts:710","pc":[3698,3699]},{"teal":3017,"source":"contracts/TownHall.algo.ts:710","pc":[3700,3701]},{"teal":3018,"source":"contracts/TownHall.algo.ts:710","pc":[3702]},{"teal":3019,"source":"contracts/TownHall.algo.ts:710","pc":[3703,3704,3705]},{"teal":3020,"source":"contracts/TownHall.algo.ts:710","pc":[3706]},{"teal":3021,"source":"contracts/TownHall.algo.ts:710","pc":[3707,3708,3709]},{"teal":3026,"source":"contracts/TownHall.algo.ts:711","pc":[3710,3711]},{"teal":3027,"source":"contracts/TownHall.algo.ts:711","pc":[3712,3713]},{"teal":3028,"source":"contracts/TownHall.algo.ts:711","pc":[3714]},{"teal":3029,"source":"contracts/TownHall.algo.ts:711","pc":[3715,3716,3717]},{"teal":3030,"source":"contracts/TownHall.algo.ts:711","pc":[3718]},{"teal":3031,"source":"contracts/TownHall.algo.ts:710","pc":[3719,3720,3721]},{"teal":3036,"source":"contracts/TownHall.algo.ts:713","pc":[3722,3723]},{"teal":3037,"source":"contracts/TownHall.algo.ts:713","pc":[3724,3725]},{"teal":3038,"source":"contracts/TownHall.algo.ts:713","pc":[3726]},{"teal":3044,"source":"contracts/TownHall.algo.ts:719","pc":[3727,3728]},{"teal":3045,"source":"contracts/TownHall.algo.ts:719","pc":[3729]},{"teal":3046,"source":"contracts/TownHall.algo.ts:719","pc":[3730,3731]},{"teal":3047,"source":"contracts/TownHall.algo.ts:719","pc":[3732]},{"teal":3048,"source":"contracts/TownHall.algo.ts:719","pc":[3733,3734,3735]},{"teal":3053,"source":"contracts/TownHall.algo.ts:721","pc":[3736]},{"teal":3054,"source":"contracts/Constants.ts:26","pc":[3737,3738]},{"teal":3055,"source":"contracts/TownHall.algo.ts:721","pc":[3739]},{"teal":3056,"source":"contracts/TownHall.algo.ts:719","pc":[3740,3741,3742]},{"teal":3061,"source":"contracts/TownHall.algo.ts:724","pc":[3743]},{"teal":3062,"source":"contracts/Constants.ts:25","pc":[3744,3745]},{"teal":3063,"source":"contracts/TownHall.algo.ts:724","pc":[3746]},{"teal":3066,"source":"contracts/TownHall.algo.ts:681","pc":[3747]},{"teal":3071,"source":"contracts/TownHall.algo.ts:728","pc":[3748,3749,3750]},{"teal":3072,"source":"contracts/TownHall.algo.ts:728","pc":[3751]},{"teal":3073,"source":"contracts/TownHall.algo.ts:728","pc":[3752]},{"teal":3074,"source":"contracts/TownHall.algo.ts:728","pc":[3753]},{"teal":3075,"source":"contracts/TownHall.algo.ts:728","pc":[3754]},{"teal":3078,"source":"contracts/TownHall.algo.ts:728","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3755]},{"teal":3081,"source":"contracts/TownHall.algo.ts:728","pc":[3756,3757,3758]},{"teal":3082,"source":"contracts/TownHall.algo.ts:728","pc":[3759]},{"teal":3083,"source":"contracts/TownHall.algo.ts:728","pc":[3760]},{"teal":3084,"source":"contracts/TownHall.algo.ts:728","pc":[3761]},{"teal":3085,"source":"contracts/TownHall.algo.ts:728","pc":[3762]},{"teal":3088,"source":"contracts/TownHall.algo.ts:728","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3763]},{"teal":3091,"source":"contracts/TownHall.algo.ts:728","pc":[3764,3765,3766]},{"teal":3092,"source":"contracts/TownHall.algo.ts:728","pc":[3767]},{"teal":3093,"source":"contracts/TownHall.algo.ts:728","pc":[3768]},{"teal":3097,"source":"contracts/TownHall.algo.ts:728","pc":[3769,3770,3771]},{"teal":3100,"source":"contracts/TownHall.algo.ts:728","pc":[3772]},{"teal":3107,"source":"contracts/TownHall.algo.ts:730","pc":[3773]},{"teal":3108,"source":"contracts/TownHall.algo.ts:730","pc":[3774]},{"teal":3109,"source":"contracts/Constants.ts:25","pc":[3775,3776]},{"teal":3110,"source":"contracts/TownHall.algo.ts:730","pc":[3777]},{"teal":3113,"source":"contracts/TownHall.algo.ts:729","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3778]},{"teal":3117,"source":"contracts/TownHall.algo.ts:734","pc":[3779,3780]},{"teal":3118,"source":"contracts/TownHall.algo.ts:734","pc":[3781,3782]},{"teal":3119,"source":"contracts/TownHall.algo.ts:734","pc":[3783]},{"teal":3120,"source":"contracts/TownHall.algo.ts:734","pc":[3784]},{"teal":3123,"source":"contracts/TownHall.algo.ts:734","errorMessage":"Error state: Non-doctor player called method.","pc":[3785]},{"teal":3127,"source":"contracts/TownHall.algo.ts:736","pc":[3786,3787]},{"teal":3128,"source":"contracts/TownHall.algo.ts:736","pc":[3788]},{"teal":3129,"source":"contracts/TownHall.algo.ts:736","pc":[3789,3790]},{"teal":3130,"source":"contracts/TownHall.algo.ts:736","pc":[3791]},{"teal":3133,"source":"contracts/TownHall.algo.ts:736","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3792]},{"teal":3137,"source":"contracts/TownHall.algo.ts:738","pc":[3793,3794]},{"teal":3138,"source":"contracts/TownHall.algo.ts:738","pc":[3795,3796]},{"teal":3139,"source":"contracts/TownHall.algo.ts:738","pc":[3797]},{"teal":3142,"source":"contracts/TownHall.algo.ts:738","errorMessage":"Error state: Patient must be a valid address.","pc":[3798]},{"teal":3146,"source":"contracts/TownHall.algo.ts:742","pc":[3799,3800]},{"teal":3147,"source":"contracts/TownHall.algo.ts:742","pc":[3801,3802]},{"teal":3148,"source":"contracts/TownHall.algo.ts:742","pc":[3803]},{"teal":3149,"source":"contracts/TownHall.algo.ts:742","pc":[3804]},{"teal":3150,"source":"contracts/TownHall.algo.ts:742","pc":[3805,3806]},{"teal":3157,"source":"contracts/TownHall.algo.ts:745","pc":[3807,3808]},{"teal":3158,"source":"contracts/TownHall.algo.ts:745","pc":[3809,3810]},{"teal":3159,"source":"contracts/TownHall.algo.ts:745","pc":[3811]},{"teal":3160,"source":"contracts/TownHall.algo.ts:745","pc":[3812]},{"teal":3163,"source":"contracts/TownHall.algo.ts:744","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3813]},{"teal":3168,"source":"contracts/TownHall.algo.ts:749","pc":[3814,3815]},{"teal":3169,"source":"contracts/TownHall.algo.ts:749","pc":[3816]},{"teal":3170,"source":"contracts/TownHall.algo.ts:749","pc":[3817]},{"teal":3171,"source":"contracts/TownHall.algo.ts:749","pc":[3818,3819,3820]},{"teal":3172,"source":"contracts/TownHall.algo.ts:749","pc":[3821]},{"teal":3173,"source":"contracts/TownHall.algo.ts:749","pc":[3822,3823,3824]},{"teal":3178,"source":"contracts/TownHall.algo.ts:750","pc":[3825,3826]},{"teal":3179,"source":"contracts/TownHall.algo.ts:750","pc":[3827]},{"teal":3180,"source":"contracts/TownHall.algo.ts:750","pc":[3828]},{"teal":3181,"source":"contracts/TownHall.algo.ts:750","pc":[3829,3830,3831]},{"teal":3182,"source":"contracts/TownHall.algo.ts:750","pc":[3832]},{"teal":3183,"source":"contracts/TownHall.algo.ts:749","pc":[3833,3834,3835]},{"teal":3188,"source":"contracts/TownHall.algo.ts:751","pc":[3836,3837]},{"teal":3189,"source":"contracts/TownHall.algo.ts:751","pc":[3838,3839]},{"teal":3190,"source":"contracts/TownHall.algo.ts:751","pc":[3840]},{"teal":3191,"source":"contracts/TownHall.algo.ts:751","pc":[3841,3842,3843]},{"teal":3192,"source":"contracts/TownHall.algo.ts:751","pc":[3844]},{"teal":3193,"source":"contracts/TownHall.algo.ts:751","pc":[3845,3846,3847]},{"teal":3198,"source":"contracts/TownHall.algo.ts:752","pc":[3848,3849]},{"teal":3199,"source":"contracts/TownHall.algo.ts:752","pc":[3850,3851]},{"teal":3200,"source":"contracts/TownHall.algo.ts:752","pc":[3852]},{"teal":3201,"source":"contracts/TownHall.algo.ts:752","pc":[3853,3854,3855]},{"teal":3202,"source":"contracts/TownHall.algo.ts:752","pc":[3856]},{"teal":3203,"source":"contracts/TownHall.algo.ts:751","pc":[3857,3858,3859]},{"teal":3208,"source":"contracts/TownHall.algo.ts:753","pc":[3860,3861]},{"teal":3209,"source":"contracts/TownHall.algo.ts:753","pc":[3862,3863]},{"teal":3210,"source":"contracts/TownHall.algo.ts:753","pc":[3864]},{"teal":3211,"source":"contracts/TownHall.algo.ts:753","pc":[3865,3866,3867]},{"teal":3212,"source":"contracts/TownHall.algo.ts:753","pc":[3868]},{"teal":3213,"source":"contracts/TownHall.algo.ts:753","pc":[3869,3870,3871]},{"teal":3218,"source":"contracts/TownHall.algo.ts:754","pc":[3872,3873]},{"teal":3219,"source":"contracts/TownHall.algo.ts:754","pc":[3874,3875]},{"teal":3220,"source":"contracts/TownHall.algo.ts:754","pc":[3876]},{"teal":3221,"source":"contracts/TownHall.algo.ts:754","pc":[3877,3878,3879]},{"teal":3222,"source":"contracts/TownHall.algo.ts:754","pc":[3880]},{"teal":3223,"source":"contracts/TownHall.algo.ts:753","pc":[3881,3882,3883]},{"teal":3228,"source":"contracts/TownHall.algo.ts:755","pc":[3884,3885]},{"teal":3229,"source":"contracts/TownHall.algo.ts:755","pc":[3886,3887]},{"teal":3230,"source":"contracts/TownHall.algo.ts:755","pc":[3888]},{"teal":3231,"source":"contracts/TownHall.algo.ts:755","pc":[3889,3890,3891]},{"teal":3232,"source":"contracts/TownHall.algo.ts:755","pc":[3892]},{"teal":3233,"source":"contracts/TownHall.algo.ts:755","pc":[3893,3894,3895]},{"teal":3238,"source":"contracts/TownHall.algo.ts:756","pc":[3896,3897]},{"teal":3239,"source":"contracts/TownHall.algo.ts:756","pc":[3898,3899]},{"teal":3240,"source":"contracts/TownHall.algo.ts:756","pc":[3900]},{"teal":3241,"source":"contracts/TownHall.algo.ts:756","pc":[3901,3902,3903]},{"teal":3242,"source":"contracts/TownHall.algo.ts:756","pc":[3904]},{"teal":3243,"source":"contracts/TownHall.algo.ts:755","pc":[3905,3906,3907]},{"teal":3248,"source":"contracts/TownHall.algo.ts:757","pc":[3908,3909]},{"teal":3249,"source":"contracts/TownHall.algo.ts:757","pc":[3910,3911]},{"teal":3250,"source":"contracts/TownHall.algo.ts:757","pc":[3912]},{"teal":3251,"source":"contracts/TownHall.algo.ts:757","pc":[3913,3914,3915]},{"teal":3252,"source":"contracts/TownHall.algo.ts:757","pc":[3916]},{"teal":3253,"source":"contracts/TownHall.algo.ts:757","pc":[3917,3918,3919]},{"teal":3258,"source":"contracts/TownHall.algo.ts:758","pc":[3920,3921]},{"teal":3259,"source":"contracts/TownHall.algo.ts:758","pc":[3922,3923]},{"teal":3260,"source":"contracts/TownHall.algo.ts:758","pc":[3924]},{"teal":3261,"source":"contracts/TownHall.algo.ts:758","pc":[3925,3926,3927]},{"teal":3262,"source":"contracts/TownHall.algo.ts:758","pc":[3928]},{"teal":3263,"source":"contracts/TownHall.algo.ts:757","pc":[3929,3930,3931]},{"teal":3268,"source":"contracts/TownHall.algo.ts:759","pc":[3932,3933]},{"teal":3269,"source":"contracts/TownHall.algo.ts:759","pc":[3934,3935]},{"teal":3270,"source":"contracts/TownHall.algo.ts:759","pc":[3936]},{"teal":3271,"source":"contracts/TownHall.algo.ts:759","pc":[3937,3938,3939]},{"teal":3272,"source":"contracts/TownHall.algo.ts:759","pc":[3940]},{"teal":3273,"source":"contracts/TownHall.algo.ts:759","pc":[3941,3942,3943]},{"teal":3278,"source":"contracts/TownHall.algo.ts:760","pc":[3944,3945]},{"teal":3279,"source":"contracts/TownHall.algo.ts:760","pc":[3946,3947]},{"teal":3280,"source":"contracts/TownHall.algo.ts:760","pc":[3948]},{"teal":3281,"source":"contracts/TownHall.algo.ts:760","pc":[3949,3950,3951]},{"teal":3282,"source":"contracts/TownHall.algo.ts:760","pc":[3952]},{"teal":3283,"source":"contracts/TownHall.algo.ts:759","pc":[3953,3954,3955]},{"teal":3288,"source":"contracts/TownHall.algo.ts:762","pc":[3956,3957]},{"teal":3289,"source":"contracts/TownHall.algo.ts:762","pc":[3958,3959]},{"teal":3290,"source":"contracts/TownHall.algo.ts:762","pc":[3960]},{"teal":3295,"source":"contracts/TownHall.algo.ts:768","pc":[3961]},{"teal":3296,"source":"contracts/Constants.ts:26","pc":[3962,3963]},{"teal":3297,"source":"contracts/TownHall.algo.ts:768","pc":[3964]},{"teal":3298,"source":"contracts/TownHall.algo.ts:728","pc":[3965]},{"teal":3303,"source":"contracts/TownHall.algo.ts:771","pc":[3966,3967,3968]},{"teal":3304,"source":"contracts/TownHall.algo.ts:771","pc":[3969]},{"teal":3305,"source":"contracts/TownHall.algo.ts:771","pc":[3970]},{"teal":3309,"source":"contracts/TownHall.algo.ts:771","pc":[3971,3972,3973]},{"teal":3316,"source":"contracts/TownHall.algo.ts:773","pc":[3974]},{"teal":3317,"source":"contracts/TownHall.algo.ts:773","pc":[3975]},{"teal":3318,"source":"contracts/Constants.ts:26","pc":[3976,3977]},{"teal":3319,"source":"contracts/TownHall.algo.ts:773","pc":[3978]},{"teal":3322,"source":"contracts/TownHall.algo.ts:772","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[3979]},{"teal":3327,"source":"contracts/TownHall.algo.ts:777","pc":[3980,3981]},{"teal":3328,"source":"contracts/TownHall.algo.ts:777","pc":[3982]},{"teal":3329,"source":"contracts/TownHall.algo.ts:777","pc":[3983,3984]},{"teal":3330,"source":"contracts/TownHall.algo.ts:777","pc":[3985]},{"teal":3331,"source":"contracts/TownHall.algo.ts:777","pc":[3986]},{"teal":3332,"source":"contracts/TownHall.algo.ts:777","pc":[3987,3988,3989]},{"teal":3333,"source":"contracts/TownHall.algo.ts:777","pc":[3990,3991]},{"teal":3334,"source":"contracts/TownHall.algo.ts:777","pc":[3992]},{"teal":3335,"source":"contracts/TownHall.algo.ts:777","pc":[3993,3994]},{"teal":3336,"source":"contracts/TownHall.algo.ts:777","pc":[3995]},{"teal":3337,"source":"contracts/TownHall.algo.ts:777","pc":[3996]},{"teal":3338,"source":"contracts/TownHall.algo.ts:777","pc":[3997]},{"teal":3341,"source":"contracts/TownHall.algo.ts:777","pc":[3998,3999,4000]},{"teal":3346,"source":"contracts/TownHall.algo.ts:782","pc":[4001,4002]},{"teal":3347,"source":"contracts/TownHall.algo.ts:782","pc":[4003,4004]},{"teal":3348,"source":"contracts/TownHall.algo.ts:782","pc":[4005]},{"teal":3352,"source":"contracts/TownHall.algo.ts:783","pc":[4006,4007]},{"teal":3353,"source":"contracts/TownHall.algo.ts:783","pc":[4008,4009]},{"teal":3354,"source":"contracts/TownHall.algo.ts:783","pc":[4010]},{"teal":3358,"source":"contracts/TownHall.algo.ts:784","pc":[4011]},{"teal":3359,"source":"contracts/Constants.ts:19","pc":[4012,4013]},{"teal":3360,"source":"contracts/TownHall.algo.ts:784","pc":[4014]},{"teal":3364,"source":"contracts/TownHall.algo.ts:785","pc":[4015]},{"teal":3370,"source":"contracts/TownHall.algo.ts:790","pc":[4016,4017]},{"teal":3371,"source":"contracts/TownHall.algo.ts:790","pc":[4018]},{"teal":3372,"source":"contracts/TownHall.algo.ts:790","pc":[4019]},{"teal":3373,"source":"contracts/TownHall.algo.ts:790","pc":[4020]},{"teal":3374,"source":"contracts/TownHall.algo.ts:790","pc":[4021,4022,4023]},{"teal":3375,"source":"contracts/TownHall.algo.ts:790","pc":[4024]},{"teal":3376,"source":"contracts/TownHall.algo.ts:790","pc":[4025,4026,4027]},{"teal":3381,"source":"contracts/TownHall.algo.ts:791","pc":[4028]},{"teal":3382,"source":"contracts/TownHall.algo.ts:791","pc":[4029]},{"teal":3383,"source":"contracts/TownHall.algo.ts:791","pc":[4030]},{"teal":3384,"source":"contracts/TownHall.algo.ts:791","pc":[4031,4032,4033]},{"teal":3385,"source":"contracts/TownHall.algo.ts:791","pc":[4034]},{"teal":3389,"source":"contracts/TownHall.algo.ts:792","pc":[4035]},{"teal":3390,"source":"contracts/TownHall.algo.ts:792","pc":[4036]},{"teal":3391,"source":"contracts/TownHall.algo.ts:792","pc":[4037,4038]},{"teal":3392,"source":"contracts/TownHall.algo.ts:792","pc":[4039,4040]},{"teal":3393,"source":"contracts/TownHall.algo.ts:792","pc":[4041]},{"teal":3394,"source":"contracts/TownHall.algo.ts:792","pc":[4042]},{"teal":3395,"source":"contracts/TownHall.algo.ts:792","pc":[4043]},{"teal":3396,"source":"contracts/TownHall.algo.ts:790","pc":[4044,4045,4046]},{"teal":3401,"source":"contracts/TownHall.algo.ts:793","pc":[4047,4048]},{"teal":3402,"source":"contracts/TownHall.algo.ts:793","pc":[4049]},{"teal":3403,"source":"contracts/TownHall.algo.ts:793","pc":[4050,4051]},{"teal":3404,"source":"contracts/TownHall.algo.ts:793","pc":[4052]},{"teal":3405,"source":"contracts/TownHall.algo.ts:793","pc":[4053,4054,4055]},{"teal":3406,"source":"contracts/TownHall.algo.ts:793","pc":[4056]},{"teal":3407,"source":"contracts/TownHall.algo.ts:793","pc":[4057,4058,4059]},{"teal":3412,"source":"contracts/TownHall.algo.ts:794","pc":[4060]},{"teal":3413,"source":"contracts/TownHall.algo.ts:794","pc":[4061,4062]},{"teal":3414,"source":"contracts/TownHall.algo.ts:794","pc":[4063]},{"teal":3415,"source":"contracts/TownHall.algo.ts:794","pc":[4064,4065,4066]},{"teal":3416,"source":"contracts/TownHall.algo.ts:794","pc":[4067]},{"teal":3420,"source":"contracts/TownHall.algo.ts:795","pc":[4068,4069]},{"teal":3421,"source":"contracts/TownHall.algo.ts:795","pc":[4070]},{"teal":3422,"source":"contracts/TownHall.algo.ts:795","pc":[4071,4072]},{"teal":3423,"source":"contracts/TownHall.algo.ts:795","pc":[4073,4074]},{"teal":3424,"source":"contracts/TownHall.algo.ts:795","pc":[4075,4076]},{"teal":3425,"source":"contracts/TownHall.algo.ts:795","pc":[4077]},{"teal":3426,"source":"contracts/TownHall.algo.ts:795","pc":[4078]},{"teal":3427,"source":"contracts/TownHall.algo.ts:793","pc":[4079,4080,4081]},{"teal":3432,"source":"contracts/TownHall.algo.ts:796","pc":[4082,4083]},{"teal":3433,"source":"contracts/TownHall.algo.ts:796","pc":[4084]},{"teal":3434,"source":"contracts/TownHall.algo.ts:796","pc":[4085,4086]},{"teal":3435,"source":"contracts/TownHall.algo.ts:796","pc":[4087]},{"teal":3436,"source":"contracts/TownHall.algo.ts:796","pc":[4088,4089,4090]},{"teal":3437,"source":"contracts/TownHall.algo.ts:796","pc":[4091]},{"teal":3438,"source":"contracts/TownHall.algo.ts:796","pc":[4092,4093,4094]},{"teal":3443,"source":"contracts/TownHall.algo.ts:797","pc":[4095]},{"teal":3444,"source":"contracts/TownHall.algo.ts:797","pc":[4096,4097]},{"teal":3445,"source":"contracts/TownHall.algo.ts:797","pc":[4098]},{"teal":3446,"source":"contracts/TownHall.algo.ts:797","pc":[4099,4100,4101]},{"teal":3447,"source":"contracts/TownHall.algo.ts:797","pc":[4102]},{"teal":3451,"source":"contracts/TownHall.algo.ts:798","pc":[4103,4104]},{"teal":3452,"source":"contracts/TownHall.algo.ts:798","pc":[4105]},{"teal":3453,"source":"contracts/TownHall.algo.ts:798","pc":[4106,4107]},{"teal":3454,"source":"contracts/TownHall.algo.ts:798","pc":[4108,4109]},{"teal":3455,"source":"contracts/TownHall.algo.ts:798","pc":[4110,4111]},{"teal":3456,"source":"contracts/TownHall.algo.ts:798","pc":[4112]},{"teal":3457,"source":"contracts/TownHall.algo.ts:798","pc":[4113]},{"teal":3458,"source":"contracts/TownHall.algo.ts:796","pc":[4114,4115,4116]},{"teal":3463,"source":"contracts/TownHall.algo.ts:799","pc":[4117,4118]},{"teal":3464,"source":"contracts/TownHall.algo.ts:799","pc":[4119]},{"teal":3465,"source":"contracts/TownHall.algo.ts:799","pc":[4120,4121]},{"teal":3466,"source":"contracts/TownHall.algo.ts:799","pc":[4122]},{"teal":3467,"source":"contracts/TownHall.algo.ts:799","pc":[4123,4124,4125]},{"teal":3468,"source":"contracts/TownHall.algo.ts:799","pc":[4126]},{"teal":3469,"source":"contracts/TownHall.algo.ts:799","pc":[4127,4128,4129]},{"teal":3474,"source":"contracts/TownHall.algo.ts:800","pc":[4130]},{"teal":3475,"source":"contracts/TownHall.algo.ts:800","pc":[4131,4132]},{"teal":3476,"source":"contracts/TownHall.algo.ts:800","pc":[4133]},{"teal":3477,"source":"contracts/TownHall.algo.ts:800","pc":[4134,4135,4136]},{"teal":3478,"source":"contracts/TownHall.algo.ts:800","pc":[4137]},{"teal":3482,"source":"contracts/TownHall.algo.ts:801","pc":[4138,4139]},{"teal":3483,"source":"contracts/TownHall.algo.ts:801","pc":[4140]},{"teal":3484,"source":"contracts/TownHall.algo.ts:801","pc":[4141,4142]},{"teal":3485,"source":"contracts/TownHall.algo.ts:801","pc":[4143,4144]},{"teal":3486,"source":"contracts/TownHall.algo.ts:801","pc":[4145,4146]},{"teal":3487,"source":"contracts/TownHall.algo.ts:801","pc":[4147]},{"teal":3488,"source":"contracts/TownHall.algo.ts:801","pc":[4148]},{"teal":3489,"source":"contracts/TownHall.algo.ts:799","pc":[4149,4150,4151]},{"teal":3494,"source":"contracts/TownHall.algo.ts:802","pc":[4152,4153]},{"teal":3495,"source":"contracts/TownHall.algo.ts:802","pc":[4154]},{"teal":3496,"source":"contracts/TownHall.algo.ts:802","pc":[4155,4156]},{"teal":3497,"source":"contracts/TownHall.algo.ts:802","pc":[4157]},{"teal":3498,"source":"contracts/TownHall.algo.ts:802","pc":[4158,4159,4160]},{"teal":3499,"source":"contracts/TownHall.algo.ts:802","pc":[4161]},{"teal":3500,"source":"contracts/TownHall.algo.ts:802","pc":[4162,4163,4164]},{"teal":3505,"source":"contracts/TownHall.algo.ts:803","pc":[4165]},{"teal":3506,"source":"contracts/TownHall.algo.ts:803","pc":[4166,4167]},{"teal":3507,"source":"contracts/TownHall.algo.ts:803","pc":[4168]},{"teal":3508,"source":"contracts/TownHall.algo.ts:803","pc":[4169,4170,4171]},{"teal":3509,"source":"contracts/TownHall.algo.ts:803","pc":[4172]},{"teal":3513,"source":"contracts/TownHall.algo.ts:804","pc":[4173,4174]},{"teal":3514,"source":"contracts/TownHall.algo.ts:804","pc":[4175]},{"teal":3515,"source":"contracts/TownHall.algo.ts:804","pc":[4176,4177]},{"teal":3516,"source":"contracts/TownHall.algo.ts:804","pc":[4178,4179]},{"teal":3517,"source":"contracts/TownHall.algo.ts:804","pc":[4180,4181]},{"teal":3518,"source":"contracts/TownHall.algo.ts:804","pc":[4182]},{"teal":3519,"source":"contracts/TownHall.algo.ts:804","pc":[4183]},{"teal":3520,"source":"contracts/TownHall.algo.ts:802","pc":[4184,4185,4186]},{"teal":3525,"source":"contracts/TownHall.algo.ts:805","pc":[4187,4188]},{"teal":3526,"source":"contracts/TownHall.algo.ts:805","pc":[4189]},{"teal":3527,"source":"contracts/TownHall.algo.ts:805","pc":[4190,4191]},{"teal":3528,"source":"contracts/TownHall.algo.ts:805","pc":[4192]},{"teal":3529,"source":"contracts/TownHall.algo.ts:805","pc":[4193,4194,4195]},{"teal":3530,"source":"contracts/TownHall.algo.ts:805","pc":[4196]},{"teal":3531,"source":"contracts/TownHall.algo.ts:805","pc":[4197,4198,4199]},{"teal":3536,"source":"contracts/TownHall.algo.ts:806","pc":[4200]},{"teal":3537,"source":"contracts/TownHall.algo.ts:806","pc":[4201,4202]},{"teal":3538,"source":"contracts/TownHall.algo.ts:806","pc":[4203]},{"teal":3539,"source":"contracts/TownHall.algo.ts:806","pc":[4204,4205,4206]},{"teal":3540,"source":"contracts/TownHall.algo.ts:806","pc":[4207]},{"teal":3544,"source":"contracts/TownHall.algo.ts:807","pc":[4208,4209]},{"teal":3545,"source":"contracts/TownHall.algo.ts:807","pc":[4210]},{"teal":3546,"source":"contracts/TownHall.algo.ts:807","pc":[4211,4212]},{"teal":3547,"source":"contracts/TownHall.algo.ts:807","pc":[4213,4214]},{"teal":3548,"source":"contracts/TownHall.algo.ts:807","pc":[4215,4216]},{"teal":3549,"source":"contracts/TownHall.algo.ts:807","pc":[4217]},{"teal":3550,"source":"contracts/TownHall.algo.ts:807","pc":[4218]},{"teal":3551,"source":"contracts/TownHall.algo.ts:805","pc":[4219,4220,4221]},{"teal":3555,"source":"contracts/TownHall.algo.ts:809","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[4222]},{"teal":3560,"source":"contracts/TownHall.algo.ts:812","pc":[4223,4224]},{"teal":3561,"source":"contracts/TownHall.algo.ts:812","pc":[4225]},{"teal":3562,"source":"contracts/TownHall.algo.ts:812","pc":[4226]},{"teal":3563,"source":"contracts/TownHall.algo.ts:812","pc":[4227]},{"teal":3564,"source":"contracts/TownHall.algo.ts:812","pc":[4228,4229]},{"teal":3565,"source":"contracts/TownHall.algo.ts:812","pc":[4230]},{"teal":3566,"source":"contracts/TownHall.algo.ts:812","pc":[4231]},{"teal":3570,"source":"contracts/TownHall.algo.ts:814","pc":[4232,4233]},{"teal":3571,"source":"contracts/TownHall.algo.ts:814","pc":[4234,4235]},{"teal":3572,"source":"contracts/TownHall.algo.ts:814","pc":[4236]},{"teal":3576,"source":"contracts/TownHall.algo.ts:815","pc":[4237,4238]},{"teal":3577,"source":"contracts/TownHall.algo.ts:815","pc":[4239,4240]},{"teal":3578,"source":"contracts/TownHall.algo.ts:815","pc":[4241]},{"teal":3583,"source":"contracts/TownHall.algo.ts:817","pc":[4242,4243]},{"teal":3584,"source":"contracts/TownHall.algo.ts:817","pc":[4244]},{"teal":3585,"source":"contracts/TownHall.algo.ts:817","pc":[4245,4246]},{"teal":3586,"source":"contracts/TownHall.algo.ts:817","pc":[4247]},{"teal":3587,"source":"contracts/TownHall.algo.ts:817","pc":[4248,4249,4250]},{"teal":3592,"source":"contracts/TownHall.algo.ts:820","pc":[4251]},{"teal":3593,"source":"contracts/Constants.ts:28","pc":[4252,4253]},{"teal":3594,"source":"contracts/TownHall.algo.ts:820","pc":[4254]},{"teal":3598,"source":"contracts/TownHall.algo.ts:821","pc":[4255]},{"teal":3603,"source":"contracts/TownHall.algo.ts:824","pc":[4256]},{"teal":3604,"source":"contracts/Constants.ts:27","pc":[4257,4258]},{"teal":3605,"source":"contracts/TownHall.algo.ts:824","pc":[4259]},{"teal":3606,"source":"contracts/TownHall.algo.ts:771","pc":[4260]},{"teal":3611,"source":"contracts/TownHall.algo.ts:827","pc":[4261,4262,4263]},{"teal":3612,"source":"contracts/TownHall.algo.ts:827","pc":[4264,4265,4266]},{"teal":3615,"source":"contracts/TownHall.algo.ts:827","pc":[4267,4268,4269]},{"teal":3616,"source":"contracts/TownHall.algo.ts:827","pc":[4270]},{"teal":3617,"source":"contracts/TownHall.algo.ts:827","pc":[4271]},{"teal":3621,"source":"contracts/TownHall.algo.ts:827","pc":[4272,4273,4274]},{"teal":3624,"source":"contracts/TownHall.algo.ts:827","pc":[4275]},{"teal":3625,"source":"contracts/TownHall.algo.ts:827","pc":[4276,4277]},{"teal":3632,"source":"contracts/TownHall.algo.ts:834","pc":[4278]},{"teal":3633,"source":"contracts/TownHall.algo.ts:834","pc":[4279]},{"teal":3634,"source":"contracts/Constants.ts:27","pc":[4280,4281]},{"teal":3635,"source":"contracts/TownHall.algo.ts:834","pc":[4282]},{"teal":3638,"source":"contracts/TownHall.algo.ts:833","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[4283]},{"teal":3642,"source":"contracts/TownHall.algo.ts:838","pc":[4284]},{"teal":3643,"source":"contracts/TownHall.algo.ts:838","pc":[4285]},{"teal":3644,"source":"contracts/TownHall.algo.ts:838","pc":[4286,4287]},{"teal":3645,"source":"contracts/TownHall.algo.ts:838","pc":[4288]},{"teal":3648,"source":"contracts/TownHall.algo.ts:838","errorMessage":"Error state: Other player called method.","pc":[4289]},{"teal":3652,"source":"contracts/TownHall.algo.ts:841","pc":[4290,4291]},{"teal":3653,"source":"contracts/TownHall.algo.ts:841","pc":[4292,4293]},{"teal":3654,"source":"contracts/TownHall.algo.ts:841","pc":[4294,4295]},{"teal":3655,"source":"contracts/TownHall.algo.ts:841","pc":[4296,4297]},{"teal":3659,"source":"contracts/TownHall.algo.ts:842","pc":[4298,4299]},{"teal":3660,"source":"contracts/TownHall.algo.ts:842","pc":[4300,4301,4302]},{"teal":3661,"source":"contracts/TownHall.algo.ts:842","pc":[4303,4304]},{"teal":3665,"source":"contracts/TownHall.algo.ts:843","pc":[4305,4306]},{"teal":3666,"source":"contracts/TownHall.algo.ts:843","pc":[4307,4308]},{"teal":3667,"source":"contracts/TownHall.algo.ts:843","pc":[4309,4310]},{"teal":3668,"source":"contracts/TownHall.algo.ts:843","pc":[4311,4312]},{"teal":3673,"source":"contracts/TownHall.algo.ts:845","pc":[4313,4314]},{"teal":3674,"source":"contracts/TownHall.algo.ts:845","pc":[4315,4316]},{"teal":3675,"source":"contracts/TownHall.algo.ts:845","pc":[4317]},{"teal":3676,"source":"contracts/TownHall.algo.ts:845","pc":[4318]},{"teal":3677,"source":"contracts/TownHall.algo.ts:845","pc":[4319,4320,4321]},{"teal":3682,"source":"contracts/TownHall.algo.ts:849","pc":[4322]},{"teal":3683,"source":"contracts/Constants.ts:28","pc":[4323,4324]},{"teal":3684,"source":"contracts/TownHall.algo.ts:849","pc":[4325]},{"teal":3688,"source":"contracts/TownHall.algo.ts:850","pc":[4326,4327]},{"teal":3689,"source":"contracts/TownHall.algo.ts:850","pc":[4328,4329]},{"teal":3690,"source":"contracts/TownHall.algo.ts:850","pc":[4330]},{"teal":3694,"source":"contracts/TownHall.algo.ts:851","pc":[4331,4332]},{"teal":3695,"source":"contracts/TownHall.algo.ts:851","pc":[4333,4334]},{"teal":3696,"source":"contracts/TownHall.algo.ts:851","pc":[4335]},{"teal":3700,"source":"contracts/TownHall.algo.ts:852","pc":[4336]},{"teal":3706,"source":"contracts/TownHall.algo.ts:855","pc":[4337,4338]},{"teal":3707,"source":"contracts/TownHall.algo.ts:855","pc":[4339,4340]},{"teal":3708,"source":"contracts/TownHall.algo.ts:855","pc":[4341]},{"teal":3709,"source":"contracts/TownHall.algo.ts:855","pc":[4342]},{"teal":3710,"source":"contracts/TownHall.algo.ts:855","pc":[4343,4344,4345]},{"teal":3715,"source":"contracts/TownHall.algo.ts:857","pc":[4346,4347]},{"teal":3716,"source":"contracts/TownHall.algo.ts:857","pc":[4348,4349]},{"teal":3717,"source":"contracts/TownHall.algo.ts:857","pc":[4350]},{"teal":3722,"source":"contracts/TownHall.algo.ts:861","pc":[4351]},{"teal":3723,"source":"contracts/TownHall.algo.ts:861","pc":[4352,4353]},{"teal":3724,"source":"contracts/TownHall.algo.ts:861","pc":[4354]},{"teal":3728,"source":"contracts/TownHall.algo.ts:863","pc":[4355]},{"teal":3729,"source":"contracts/Constants.ts:19","pc":[4356,4357]},{"teal":3730,"source":"contracts/TownHall.algo.ts:863","pc":[4358]},{"teal":3734,"source":"contracts/TownHall.algo.ts:864","pc":[4359,4360]},{"teal":3735,"source":"contracts/TownHall.algo.ts:864","pc":[4361,4362]},{"teal":3736,"source":"contracts/TownHall.algo.ts:864","pc":[4363]},{"teal":3737,"source":"contracts/TownHall.algo.ts:827","pc":[4364]},{"teal":3742,"source":"contracts/TownHall.algo.ts:868","pc":[4365,4366,4367]},{"teal":3743,"source":"contracts/TownHall.algo.ts:868","pc":[4368]},{"teal":3744,"source":"contracts/TownHall.algo.ts:868","pc":[4369]},{"teal":3748,"source":"contracts/TownHall.algo.ts:868","pc":[4370,4371,4372]},{"teal":3751,"source":"contracts/TownHall.algo.ts:868","pc":[4373]},{"teal":3755,"source":"contracts/TownHall.algo.ts:869","pc":[4374]},{"teal":3756,"source":"contracts/TownHall.algo.ts:869","pc":[4375]},{"teal":3757,"source":"contracts/Constants.ts:28","pc":[4376,4377]},{"teal":3758,"source":"contracts/TownHall.algo.ts:869","pc":[4378]},{"teal":3761,"source":"contracts/TownHall.algo.ts:869","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4379]},{"teal":3765,"source":"contracts/TownHall.algo.ts:870","pc":[4380,4381,4382]},{"teal":3769,"source":"contracts/TownHall.algo.ts:872","pc":[4383,4384]},{"teal":3770,"source":"contracts/TownHall.algo.ts:872","pc":[4385,4386]},{"teal":3771,"source":"contracts/TownHall.algo.ts:872","pc":[4387]},{"teal":3772,"source":"contracts/TownHall.algo.ts:872","pc":[4388,4389]},{"teal":3780,"source":"contracts/TownHall.algo.ts:873","pc":[4390]},{"teal":3781,"source":"contracts/TownHall.algo.ts:873","pc":[4391]},{"teal":3782,"source":"contracts/TownHall.algo.ts:873","pc":[4392,4393]},{"teal":3786,"source":"contracts/TownHall.algo.ts:874","pc":[4394,4395]},{"teal":3787,"source":"contracts/TownHall.algo.ts:874","pc":[4396,4397]},{"teal":3791,"source":"contracts/TownHall.algo.ts:875","pc":[4398]},{"teal":3792,"source":"contracts/TownHall.algo.ts:875","pc":[4399]},{"teal":3793,"source":"contracts/TownHall.algo.ts:875","pc":[4400,4401,4402]},{"teal":3794,"source":"contracts/TownHall.algo.ts:875","pc":[4403,4404]},{"teal":3798,"source":"contracts/TownHall.algo.ts:876","pc":[4405,4406]},{"teal":3799,"source":"contracts/TownHall.algo.ts:876","pc":[4407,4408]},{"teal":3802,"source":"contracts/TownHall.algo.ts:873","pc":[4409]},{"teal":3810,"source":"contracts/TownHall.algo.ts:879","pc":[4410]},{"teal":3811,"source":"contracts/TownHall.algo.ts:879","pc":[4411]},{"teal":3812,"source":"contracts/TownHall.algo.ts:879","pc":[4412,4413]},{"teal":3816,"source":"contracts/TownHall.algo.ts:880","pc":[4414,4415]},{"teal":3817,"source":"contracts/TownHall.algo.ts:880","pc":[4416,4417]},{"teal":3821,"source":"contracts/TownHall.algo.ts:881","pc":[4418,4419]},{"teal":3822,"source":"contracts/TownHall.algo.ts:881","pc":[4420]},{"teal":3823,"source":"contracts/TownHall.algo.ts:881","pc":[4421,4422,4423]},{"teal":3824,"source":"contracts/TownHall.algo.ts:881","pc":[4424,4425]},{"teal":3828,"source":"contracts/TownHall.algo.ts:882","pc":[4426,4427]},{"teal":3829,"source":"contracts/TownHall.algo.ts:882","pc":[4428,4429]},{"teal":3832,"source":"contracts/TownHall.algo.ts:879","pc":[4430]},{"teal":3840,"source":"contracts/TownHall.algo.ts:884","pc":[4431]},{"teal":3841,"source":"contracts/TownHall.algo.ts:884","pc":[4432]},{"teal":3842,"source":"contracts/TownHall.algo.ts:884","pc":[4433,4434]},{"teal":3846,"source":"contracts/TownHall.algo.ts:885","pc":[4435,4436]},{"teal":3847,"source":"contracts/TownHall.algo.ts:885","pc":[4437,4438]},{"teal":3851,"source":"contracts/TownHall.algo.ts:886","pc":[4439,4440]},{"teal":3852,"source":"contracts/TownHall.algo.ts:886","pc":[4441]},{"teal":3853,"source":"contracts/TownHall.algo.ts:886","pc":[4442,4443,4444]},{"teal":3854,"source":"contracts/TownHall.algo.ts:886","pc":[4445,4446]},{"teal":3858,"source":"contracts/TownHall.algo.ts:887","pc":[4447,4448]},{"teal":3859,"source":"contracts/TownHall.algo.ts:887","pc":[4449,4450]},{"teal":3862,"source":"contracts/TownHall.algo.ts:884","pc":[4451]},{"teal":3870,"source":"contracts/TownHall.algo.ts:890","pc":[4452]},{"teal":3871,"source":"contracts/TownHall.algo.ts:890","pc":[4453]},{"teal":3872,"source":"contracts/TownHall.algo.ts:890","pc":[4454,4455]},{"teal":3876,"source":"contracts/TownHall.algo.ts:891","pc":[4456,4457]},{"teal":3877,"source":"contracts/TownHall.algo.ts:891","pc":[4458,4459]},{"teal":3881,"source":"contracts/TownHall.algo.ts:892","pc":[4460,4461]},{"teal":3882,"source":"contracts/TownHall.algo.ts:892","pc":[4462]},{"teal":3883,"source":"contracts/TownHall.algo.ts:892","pc":[4463,4464,4465]},{"teal":3884,"source":"contracts/TownHall.algo.ts:892","pc":[4466,4467]},{"teal":3888,"source":"contracts/TownHall.algo.ts:893","pc":[4468,4469]},{"teal":3889,"source":"contracts/TownHall.algo.ts:893","pc":[4470,4471]},{"teal":3892,"source":"contracts/TownHall.algo.ts:890","pc":[4472]},{"teal":3900,"source":"contracts/TownHall.algo.ts:896","pc":[4473]},{"teal":3901,"source":"contracts/TownHall.algo.ts:896","pc":[4474]},{"teal":3902,"source":"contracts/TownHall.algo.ts:896","pc":[4475,4476]},{"teal":3906,"source":"contracts/TownHall.algo.ts:897","pc":[4477,4478]},{"teal":3907,"source":"contracts/TownHall.algo.ts:897","pc":[4479,4480]},{"teal":3911,"source":"contracts/TownHall.algo.ts:898","pc":[4481,4482]},{"teal":3912,"source":"contracts/TownHall.algo.ts:898","pc":[4483]},{"teal":3913,"source":"contracts/TownHall.algo.ts:898","pc":[4484,4485,4486]},{"teal":3914,"source":"contracts/TownHall.algo.ts:898","pc":[4487,4488]},{"teal":3918,"source":"contracts/TownHall.algo.ts:899","pc":[4489,4490]},{"teal":3919,"source":"contracts/TownHall.algo.ts:899","pc":[4491,4492]},{"teal":3922,"source":"contracts/TownHall.algo.ts:896","pc":[4493]},{"teal":3930,"source":"contracts/TownHall.algo.ts:902","pc":[4494]},{"teal":3931,"source":"contracts/TownHall.algo.ts:902","pc":[4495]},{"teal":3932,"source":"contracts/TownHall.algo.ts:902","pc":[4496,4497]},{"teal":3936,"source":"contracts/TownHall.algo.ts:903","pc":[4498,4499]},{"teal":3937,"source":"contracts/TownHall.algo.ts:903","pc":[4500,4501]},{"teal":3941,"source":"contracts/TownHall.algo.ts:904","pc":[4502,4503]},{"teal":3942,"source":"contracts/TownHall.algo.ts:904","pc":[4504]},{"teal":3943,"source":"contracts/TownHall.algo.ts:904","pc":[4505,4506,4507]},{"teal":3944,"source":"contracts/TownHall.algo.ts:904","pc":[4508,4509]},{"teal":3948,"source":"contracts/TownHall.algo.ts:905","pc":[4510,4511]},{"teal":3949,"source":"contracts/TownHall.algo.ts:905","pc":[4512,4513]},{"teal":3952,"source":"contracts/TownHall.algo.ts:902","pc":[4514]},{"teal":3953,"source":"contracts/TownHall.algo.ts:868","pc":[4515]},{"teal":3958,"source":"contracts/TownHall.algo.ts:915","pc":[4516,4517,4518]},{"teal":3959,"source":"contracts/TownHall.algo.ts:915","pc":[4519]},{"teal":3960,"source":"contracts/TownHall.algo.ts:915","pc":[4520]},{"teal":3964,"source":"contracts/TownHall.algo.ts:915","pc":[4521,4522,4523]},{"teal":3967,"source":"contracts/TownHall.algo.ts:915","pc":[4524]},{"teal":3968,"source":"contracts/TownHall.algo.ts:915","pc":[4525,4526]},{"teal":3975,"source":"contracts/TownHall.algo.ts:917","pc":[4527]},{"teal":3976,"source":"contracts/TownHall.algo.ts:917","pc":[4528]},{"teal":3977,"source":"contracts/Constants.ts:29","pc":[4529,4530]},{"teal":3978,"source":"contracts/TownHall.algo.ts:917","pc":[4531]},{"teal":3981,"source":"contracts/TownHall.algo.ts:916","errorMessage":"Invalid method call: Game is not in Assign Role Timeout state","pc":[4532]},{"teal":3985,"source":"contracts/TownHall.algo.ts:921","pc":[4533,4534,4535]},{"teal":3986,"source":"contracts/TownHall.algo.ts:921","pc":[4536,4537]},{"teal":3990,"source":"contracts/TownHall.algo.ts:922","pc":[4538,4539]},{"teal":3991,"source":"contracts/TownHall.algo.ts:922","pc":[4540]},{"teal":3995,"source":"contracts/TownHall.algo.ts:924","pc":[4541,4542]},{"teal":3996,"source":"contracts/TownHall.algo.ts:924","pc":[4543]},{"teal":3997,"source":"contracts/TownHall.algo.ts:924","pc":[4544]},{"teal":3998,"source":"contracts/TownHall.algo.ts:924","pc":[4545]},{"teal":3999,"source":"contracts/TownHall.algo.ts:924","pc":[4546,4547]},{"teal":4000,"source":"contracts/TownHall.algo.ts:924","pc":[4548]},{"teal":4001,"source":"contracts/TownHall.algo.ts:924","pc":[4549]},{"teal":4002,"source":"contracts/TownHall.algo.ts:924","pc":[4550]},{"teal":4003,"source":"contracts/TownHall.algo.ts:924","pc":[4551]},{"teal":4004,"source":"contracts/TownHall.algo.ts:924","pc":[4552]},{"teal":4005,"source":"contracts/TownHall.algo.ts:924","pc":[4553]},{"teal":4006,"source":"contracts/TownHall.algo.ts:924","pc":[4554]},{"teal":4007,"source":"contracts/TownHall.algo.ts:924","pc":[4555]},{"teal":4010,"source":"contracts/TownHall.algo.ts:924","errorMessage":"wideRatio failed","pc":[4556]},{"teal":4011,"source":"contracts/TownHall.algo.ts:924","pc":[4557,4558]},{"teal":4012,"source":"contracts/TownHall.algo.ts:924","pc":[4559]},{"teal":4013,"source":"contracts/TownHall.algo.ts:924","pc":[4560,4561]},{"teal":4017,"source":"contracts/TownHall.algo.ts:925","pc":[4562]},{"teal":4018,"source":"contracts/TownHall.algo.ts:925","pc":[4563,4564]},{"teal":4023,"source":"contracts/TownHall.algo.ts:925","pc":[4565,4566]},{"teal":4024,"source":"contracts/TownHall.algo.ts:925","pc":[4567,4568]},{"teal":4025,"source":"contracts/TownHall.algo.ts:925","pc":[4569]},{"teal":4026,"source":"contracts/TownHall.algo.ts:925","pc":[4570]},{"teal":4027,"source":"contracts/TownHall.algo.ts:925","pc":[4571]},{"teal":4028,"source":"contracts/TownHall.algo.ts:925","pc":[4572]},{"teal":4029,"source":"contracts/TownHall.algo.ts:925","pc":[4573,4574,4575]},{"teal":4034,"source":"contracts/TownHall.algo.ts:926","pc":[4576,4577]},{"teal":4035,"source":"contracts/TownHall.algo.ts:926","pc":[4578,4579,4580]},{"teal":4036,"source":"contracts/TownHall.algo.ts:926","pc":[4581]},{"teal":4037,"source":"contracts/TownHall.algo.ts:926","pc":[4582,4583,4584]},{"teal":4042,"source":"contracts/TownHall.algo.ts:927","pc":[4585]},{"teal":4043,"source":"contracts/TownHall.algo.ts:927","pc":[4586]},{"teal":4044,"source":"contracts/TownHall.algo.ts:927","pc":[4587,4588]},{"teal":4045,"source":"contracts/TownHall.algo.ts:927","pc":[4589]},{"teal":4046,"source":"contracts/TownHall.algo.ts:927","pc":[4590,4591]},{"teal":4047,"source":"contracts/TownHall.algo.ts:927","pc":[4592,4593]},{"teal":4048,"source":"contracts/TownHall.algo.ts:927","pc":[4594]},{"teal":4049,"source":"contracts/TownHall.algo.ts:927","pc":[4595,4596]},{"teal":4050,"source":"contracts/TownHall.algo.ts:927","pc":[4597,4598]},{"teal":4051,"source":"contracts/TownHall.algo.ts:927","pc":[4599,4600]},{"teal":4052,"source":"contracts/TownHall.algo.ts:927","pc":[4601,4602]},{"teal":4053,"source":"contracts/TownHall.algo.ts:927","pc":[4603]},{"teal":4062,"source":"contracts/TownHall.algo.ts:929","pc":[4604]},{"teal":4063,"source":"contracts/TownHall.algo.ts:929","pc":[4605]},{"teal":4064,"source":"contracts/TownHall.algo.ts:929","pc":[4606,4607]},{"teal":4068,"source":"contracts/TownHall.algo.ts:930","pc":[4608,4609]},{"teal":4069,"source":"contracts/TownHall.algo.ts:930","pc":[4610,4611]},{"teal":4073,"source":"contracts/TownHall.algo.ts:931","pc":[4612,4613]},{"teal":4074,"source":"contracts/TownHall.algo.ts:931","pc":[4614,4615]},{"teal":4075,"source":"contracts/TownHall.algo.ts:931","pc":[4616]},{"teal":4076,"source":"contracts/TownHall.algo.ts:931","pc":[4617,4618]},{"teal":4077,"source":"contracts/TownHall.algo.ts:931","pc":[4619]},{"teal":4078,"source":"contracts/TownHall.algo.ts:931","pc":[4620]},{"teal":4079,"source":"contracts/TownHall.algo.ts:931","pc":[4621]},{"teal":4080,"source":"contracts/TownHall.algo.ts:931","pc":[4622,4623]},{"teal":4081,"source":"contracts/TownHall.algo.ts:931","pc":[4624]},{"teal":4082,"source":"contracts/TownHall.algo.ts:931","pc":[4625]},{"teal":4083,"source":"contracts/TownHall.algo.ts:931","pc":[4626]},{"teal":4084,"source":"contracts/TownHall.algo.ts:931","pc":[4627,4628]},{"teal":4088,"source":"contracts/TownHall.algo.ts:932","pc":[4629,4630]},{"teal":4089,"source":"contracts/TownHall.algo.ts:932","pc":[4631,4632]},{"teal":4092,"source":"contracts/TownHall.algo.ts:929","pc":[4633]},{"teal":4097,"source":"contracts/TownHall.algo.ts:925","pc":[4634,4635]},{"teal":4098,"source":"contracts/TownHall.algo.ts:925","pc":[4636]},{"teal":4099,"source":"contracts/TownHall.algo.ts:925","pc":[4637]},{"teal":4100,"source":"contracts/TownHall.algo.ts:925","pc":[4638,4639]},{"teal":4101,"source":"contracts/TownHall.algo.ts:925","pc":[4640,4641,4642]},{"teal":4104,"source":"contracts/TownHall.algo.ts:915","pc":[4643]},{"teal":4109,"source":"contracts/TownHall.algo.ts:937","pc":[4644,4645,4646]},{"teal":4110,"source":"contracts/TownHall.algo.ts:937","pc":[4647]},{"teal":4111,"source":"contracts/TownHall.algo.ts:937","pc":[4648]},{"teal":4115,"source":"contracts/TownHall.algo.ts:937","pc":[4649,4650,4651]},{"teal":4119,"source":"contracts/TownHall.algo.ts:938","pc":[4652,4653]},{"teal":4120,"source":"contracts/TownHall.algo.ts:938","pc":[4654,4655]},{"teal":4121,"source":"contracts/TownHall.algo.ts:938","pc":[4656]},{"teal":4122,"source":"contracts/TownHall.algo.ts:938","pc":[4657,4658]},{"teal":4123,"source":"contracts/TownHall.algo.ts:938","pc":[4659]},{"teal":4124,"source":"contracts/TownHall.algo.ts:938","pc":[4660]},{"teal":4125,"source":"contracts/TownHall.algo.ts:938","pc":[4661]},{"teal":4130,"source":"contracts/TownHall.algo.ts:939","pc":[4662,4663,4664]},{"teal":4131,"source":"contracts/TownHall.algo.ts:939","pc":[4665]},{"teal":4132,"source":"contracts/TownHall.algo.ts:939","pc":[4666]},{"teal":4133,"source":"contracts/TownHall.algo.ts:939","pc":[4667]},{"teal":4134,"source":"contracts/TownHall.algo.ts:939","pc":[4668]},{"teal":4135,"source":"contracts/TownHall.algo.ts:939","pc":[4669]},{"teal":4136,"source":"contracts/TownHall.algo.ts:939","pc":[4670,4671,4672]},{"teal":4141,"source":"contracts/TownHall.algo.ts:939","pc":[4673]},{"teal":4142,"source":"contracts/Constants.ts:29","pc":[4674,4675]},{"teal":4143,"source":"contracts/TownHall.algo.ts:939","pc":[4676]},{"teal":4146,"source":"contracts/TownHall.algo.ts:937","pc":[4677]},{"teal":4150,"source":"contracts/TownHall.algo.ts:943","pc":[4678,4679,4680]},{"teal":4153,"source":"contracts/TownHall.algo.ts:943","pc":[4681]},{"teal":4157,"source":"contracts/TownHall.algo.ts:944","pc":[4682]},{"teal":4158,"source":"contracts/TownHall.algo.ts:944","pc":[4683,4684]},{"teal":4163,"source":"contracts/TownHall.algo.ts:946","pc":[4685,4686]},{"teal":4164,"source":"contracts/TownHall.algo.ts:946","pc":[4687]},{"teal":4165,"source":"contracts/TownHall.algo.ts:946","pc":[4688,4689]},{"teal":4166,"source":"contracts/TownHall.algo.ts:946","pc":[4690]},{"teal":4167,"source":"contracts/TownHall.algo.ts:946","pc":[4691,4692,4693]},{"teal":4172,"source":"contracts/TownHall.algo.ts:947","pc":[4694,4695]},{"teal":4173,"source":"contracts/TownHall.algo.ts:947","pc":[4696,4697]},{"teal":4174,"source":"contracts/TownHall.algo.ts:947","pc":[4698]},{"teal":4175,"source":"contracts/TownHall.algo.ts:947","pc":[4699]},{"teal":4176,"source":"contracts/TownHall.algo.ts:947","pc":[4700,4701]},{"teal":4180,"source":"contracts/TownHall.algo.ts:948","pc":[4702,4703]},{"teal":4181,"source":"contracts/TownHall.algo.ts:948","pc":[4704]},{"teal":4182,"source":"contracts/TownHall.algo.ts:948","pc":[4705]},{"teal":4183,"source":"contracts/TownHall.algo.ts:948","pc":[4706]},{"teal":4189,"source":"contracts/TownHall.algo.ts:950","pc":[4707,4708]},{"teal":4190,"source":"contracts/TownHall.algo.ts:950","pc":[4709]},{"teal":4191,"source":"contracts/TownHall.algo.ts:950","pc":[4710,4711]},{"teal":4192,"source":"contracts/TownHall.algo.ts:950","pc":[4712]},{"teal":4193,"source":"contracts/TownHall.algo.ts:950","pc":[4713,4714,4715]},{"teal":4198,"source":"contracts/TownHall.algo.ts:951","pc":[4716,4717]},{"teal":4199,"source":"contracts/TownHall.algo.ts:951","pc":[4718,4719]},{"teal":4200,"source":"contracts/TownHall.algo.ts:951","pc":[4720]},{"teal":4201,"source":"contracts/TownHall.algo.ts:951","pc":[4721]},{"teal":4202,"source":"contracts/TownHall.algo.ts:951","pc":[4722,4723]},{"teal":4206,"source":"contracts/TownHall.algo.ts:952","pc":[4724,4725]},{"teal":4207,"source":"contracts/TownHall.algo.ts:952","pc":[4726]},{"teal":4208,"source":"contracts/TownHall.algo.ts:952","pc":[4727]},{"teal":4209,"source":"contracts/TownHall.algo.ts:952","pc":[4728]},{"teal":4215,"source":"contracts/TownHall.algo.ts:954","pc":[4729,4730]},{"teal":4216,"source":"contracts/TownHall.algo.ts:954","pc":[4731]},{"teal":4217,"source":"contracts/TownHall.algo.ts:954","pc":[4732,4733]},{"teal":4218,"source":"contracts/TownHall.algo.ts:954","pc":[4734]},{"teal":4219,"source":"contracts/TownHall.algo.ts:954","pc":[4735,4736,4737]},{"teal":4224,"source":"contracts/TownHall.algo.ts:955","pc":[4738,4739]},{"teal":4225,"source":"contracts/TownHall.algo.ts:955","pc":[4740,4741]},{"teal":4226,"source":"contracts/TownHall.algo.ts:955","pc":[4742]},{"teal":4227,"source":"contracts/TownHall.algo.ts:955","pc":[4743]},{"teal":4228,"source":"contracts/TownHall.algo.ts:955","pc":[4744,4745]},{"teal":4232,"source":"contracts/TownHall.algo.ts:956","pc":[4746,4747]},{"teal":4233,"source":"contracts/TownHall.algo.ts:956","pc":[4748]},{"teal":4234,"source":"contracts/TownHall.algo.ts:956","pc":[4749]},{"teal":4235,"source":"contracts/TownHall.algo.ts:956","pc":[4750]},{"teal":4241,"source":"contracts/TownHall.algo.ts:958","pc":[4751,4752]},{"teal":4242,"source":"contracts/TownHall.algo.ts:958","pc":[4753]},{"teal":4243,"source":"contracts/TownHall.algo.ts:958","pc":[4754,4755]},{"teal":4244,"source":"contracts/TownHall.algo.ts:958","pc":[4756]},{"teal":4245,"source":"contracts/TownHall.algo.ts:958","pc":[4757,4758,4759]},{"teal":4250,"source":"contracts/TownHall.algo.ts:959","pc":[4760,4761]},{"teal":4251,"source":"contracts/TownHall.algo.ts:959","pc":[4762,4763]},{"teal":4252,"source":"contracts/TownHall.algo.ts:959","pc":[4764]},{"teal":4253,"source":"contracts/TownHall.algo.ts:959","pc":[4765]},{"teal":4254,"source":"contracts/TownHall.algo.ts:959","pc":[4766,4767]},{"teal":4258,"source":"contracts/TownHall.algo.ts:960","pc":[4768,4769]},{"teal":4259,"source":"contracts/TownHall.algo.ts:960","pc":[4770]},{"teal":4260,"source":"contracts/TownHall.algo.ts:960","pc":[4771]},{"teal":4261,"source":"contracts/TownHall.algo.ts:960","pc":[4772]},{"teal":4267,"source":"contracts/TownHall.algo.ts:962","pc":[4773,4774]},{"teal":4268,"source":"contracts/TownHall.algo.ts:962","pc":[4775]},{"teal":4269,"source":"contracts/TownHall.algo.ts:962","pc":[4776,4777]},{"teal":4270,"source":"contracts/TownHall.algo.ts:962","pc":[4778]},{"teal":4271,"source":"contracts/TownHall.algo.ts:962","pc":[4779,4780,4781]},{"teal":4276,"source":"contracts/TownHall.algo.ts:963","pc":[4782,4783]},{"teal":4277,"source":"contracts/TownHall.algo.ts:963","pc":[4784,4785]},{"teal":4278,"source":"contracts/TownHall.algo.ts:963","pc":[4786]},{"teal":4279,"source":"contracts/TownHall.algo.ts:963","pc":[4787]},{"teal":4280,"source":"contracts/TownHall.algo.ts:963","pc":[4788,4789]},{"teal":4284,"source":"contracts/TownHall.algo.ts:964","pc":[4790,4791]},{"teal":4285,"source":"contracts/TownHall.algo.ts:964","pc":[4792]},{"teal":4286,"source":"contracts/TownHall.algo.ts:964","pc":[4793]},{"teal":4287,"source":"contracts/TownHall.algo.ts:964","pc":[4794]},{"teal":4293,"source":"contracts/TownHall.algo.ts:966","pc":[4795,4796]},{"teal":4294,"source":"contracts/TownHall.algo.ts:966","pc":[4797]},{"teal":4295,"source":"contracts/TownHall.algo.ts:966","pc":[4798,4799]},{"teal":4296,"source":"contracts/TownHall.algo.ts:966","pc":[4800]},{"teal":4297,"source":"contracts/TownHall.algo.ts:966","pc":[4801,4802,4803]},{"teal":4302,"source":"contracts/TownHall.algo.ts:967","pc":[4804,4805]},{"teal":4303,"source":"contracts/TownHall.algo.ts:967","pc":[4806,4807]},{"teal":4304,"source":"contracts/TownHall.algo.ts:967","pc":[4808]},{"teal":4305,"source":"contracts/TownHall.algo.ts:967","pc":[4809]},{"teal":4306,"source":"contracts/TownHall.algo.ts:967","pc":[4810,4811]},{"teal":4310,"source":"contracts/TownHall.algo.ts:968","pc":[4812,4813]},{"teal":4311,"source":"contracts/TownHall.algo.ts:968","pc":[4814]},{"teal":4312,"source":"contracts/TownHall.algo.ts:968","pc":[4815]},{"teal":4313,"source":"contracts/TownHall.algo.ts:968","pc":[4816]},{"teal":4318,"source":"contracts/TownHall.algo.ts:970","pc":[4817,4818]},{"teal":4321,"source":"contracts/TownHall.algo.ts:943","pc":[4819,4820]},{"teal":4322,"source":"contracts/TownHall.algo.ts:943","pc":[4821]},{"teal":4326,"source":"contracts/TownHall.algo.ts:973","pc":[4822,4823,4824]},{"teal":4330,"source":"contracts/TownHall.algo.ts:974","pc":[4825,4826]},{"teal":4331,"source":"contracts/TownHall.algo.ts:974","pc":[4827]},{"teal":4335,"source":"contracts/TownHall.algo.ts:975","pc":[4828,4829]},{"teal":4336,"source":"contracts/TownHall.algo.ts:975","pc":[4830]},{"teal":4337,"source":"contracts/TownHall.algo.ts:975","pc":[4831]},{"teal":4338,"source":"contracts/TownHall.algo.ts:975","pc":[4832]},{"teal":4342,"source":"contracts/TownHall.algo.ts:976","pc":[4833,4834]},{"teal":4343,"source":"contracts/TownHall.algo.ts:976","pc":[4835]},{"teal":4344,"source":"contracts/TownHall.algo.ts:976","pc":[4836]},{"teal":4345,"source":"contracts/TownHall.algo.ts:976","pc":[4837]},{"teal":4349,"source":"contracts/TownHall.algo.ts:977","pc":[4838,4839]},{"teal":4350,"source":"contracts/TownHall.algo.ts:977","pc":[4840]},{"teal":4351,"source":"contracts/TownHall.algo.ts:977","pc":[4841]},{"teal":4352,"source":"contracts/TownHall.algo.ts:977","pc":[4842]},{"teal":4356,"source":"contracts/TownHall.algo.ts:978","pc":[4843,4844]},{"teal":4357,"source":"contracts/TownHall.algo.ts:978","pc":[4845]},{"teal":4358,"source":"contracts/TownHall.algo.ts:978","pc":[4846]},{"teal":4359,"source":"contracts/TownHall.algo.ts:978","pc":[4847]},{"teal":4363,"source":"contracts/TownHall.algo.ts:979","pc":[4848,4849]},{"teal":4364,"source":"contracts/TownHall.algo.ts:979","pc":[4850]},{"teal":4365,"source":"contracts/TownHall.algo.ts:979","pc":[4851]},{"teal":4366,"source":"contracts/TownHall.algo.ts:979","pc":[4852]},{"teal":4370,"source":"contracts/TownHall.algo.ts:980","pc":[4853,4854]},{"teal":4371,"source":"contracts/TownHall.algo.ts:980","pc":[4855]},{"teal":4372,"source":"contracts/TownHall.algo.ts:980","pc":[4856]},{"teal":4373,"source":"contracts/TownHall.algo.ts:980","pc":[4857]},{"teal":4374,"source":"contracts/TownHall.algo.ts:973","pc":[4858]},{"teal":4379,"source":"contracts/TownHall.algo.ts:983","pc":[4859,4860,4861]},{"teal":4380,"source":"contracts/TownHall.algo.ts:983","pc":[4862]},{"teal":4381,"source":"contracts/TownHall.algo.ts:983","pc":[4863]},{"teal":4385,"source":"contracts/TownHall.algo.ts:983","pc":[4864,4865,4866]},{"teal":4389,"source":"contracts/TownHall.algo.ts:984","pc":[4867]},{"teal":4390,"source":"contracts/TownHall.algo.ts:984","pc":[4868]},{"teal":4391,"source":"contracts/Constants.ts:28","pc":[4869,4870]},{"teal":4392,"source":"contracts/TownHall.algo.ts:984","pc":[4871]},{"teal":4395,"source":"contracts/TownHall.algo.ts:984","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4872]},{"teal":4399,"source":"contracts/TownHall.algo.ts:985","pc":[4873]},{"teal":4400,"source":"contracts/TownHall.algo.ts:985","pc":[4874]},{"teal":4401,"source":"contracts/TownHall.algo.ts:985","pc":[4875,4876]},{"teal":4405,"source":"contracts/TownHall.algo.ts:985","pc":[4877,4878]},{"teal":4406,"source":"contracts/TownHall.algo.ts:985","pc":[4879]},{"teal":4407,"source":"contracts/TownHall.algo.ts:985","pc":[4880,4881]},{"teal":4410,"source":"contracts/TownHall.algo.ts:985","pc":[4882]},{"teal":4411,"source":"contracts/TownHall.algo.ts:985","pc":[4883,4884]},{"teal":4414,"source":"contracts/TownHall.algo.ts:985","pc":[4885]},{"teal":4415,"source":"contracts/TownHall.algo.ts:983","pc":[4886]},{"teal":4418,"source":"contracts/TownHall.algo.ts:35","pc":[4887,4888,4889,4890,4891,4892]},{"teal":4419,"source":"contracts/TownHall.algo.ts:35","pc":[4893,4894,4895]},{"teal":4420,"source":"contracts/TownHall.algo.ts:35","pc":[4896,4897,4898,4899]},{"teal":4423,"source":"contracts/TownHall.algo.ts:35","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[4900]},{"teal":4426,"source":"contracts/TownHall.algo.ts:35","pc":[4901,4902,4903,4904,4905,4906]},{"teal":4427,"source":"contracts/TownHall.algo.ts:35","pc":[4907,4908,4909,4910,4911,4912]},{"teal":4428,"source":"contracts/TownHall.algo.ts:35","pc":[4913,4914,4915,4916,4917,4918]},{"teal":4429,"source":"contracts/TownHall.algo.ts:35","pc":[4919,4920,4921,4922,4923,4924]},{"teal":4430,"source":"contracts/TownHall.algo.ts:35","pc":[4925,4926,4927,4928,4929,4930]},{"teal":4431,"source":"contracts/TownHall.algo.ts:35","pc":[4931,4932,4933,4934,4935,4936]},{"teal":4432,"source":"contracts/TownHall.algo.ts:35","pc":[4937,4938,4939,4940,4941,4942]},{"teal":4433,"source":"contracts/TownHall.algo.ts:35","pc":[4943,4944,4945,4946,4947,4948]},{"teal":4434,"source":"contracts/TownHall.algo.ts:35","pc":[4949,4950,4951,4952,4953,4954]},{"teal":4435,"source":"contracts/TownHall.algo.ts:35","pc":[4955,4956,4957,4958,4959,4960]},{"teal":4436,"source":"contracts/TownHall.algo.ts:35","pc":[4961,4962,4963,4964,4965,4966]},{"teal":4437,"source":"contracts/TownHall.algo.ts:35","pc":[4967,4968,4969,4970,4971,4972]},{"teal":4438,"source":"contracts/TownHall.algo.ts:35","pc":[4973,4974,4975,4976,4977,4978]},{"teal":4439,"source":"contracts/TownHall.algo.ts:35","pc":[4979,4980,4981,4982,4983,4984]},{"teal":4440,"source":"contracts/TownHall.algo.ts:35","pc":[4985,4986,4987,4988,4989,4990]},{"teal":4441,"source":"contracts/TownHall.algo.ts:35","pc":[4991,4992,4993,4994,4995,4996]},{"teal":4442,"source":"contracts/TownHall.algo.ts:35","pc":[4997,4998,4999,5000,5001,5002]},{"teal":4443,"source":"contracts/TownHall.algo.ts:35","pc":[5003,5004,5005,5006,5007,5008]},{"teal":4444,"source":"contracts/TownHall.algo.ts:35","pc":[5009,5010,5011,5012,5013,5014]},{"teal":4445,"source":"contracts/TownHall.algo.ts:35","pc":[5015,5016,5017]},{"teal":4446,"source":"contracts/TownHall.algo.ts:35","pc":[5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,5040,5041,5042,5043,5044,5045,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,5056,5057]},{"teal":4449,"source":"contracts/TownHall.algo.ts:35","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[5058]},{"teal":4452,"source":"contracts/TownHall.algo.ts:35","pc":[5059,5060,5061,5062,5063,5064]},{"teal":4453,"source":"contracts/TownHall.algo.ts:35","pc":[5065,5066,5067]},{"teal":4454,"source":"contracts/TownHall.algo.ts:35","pc":[5068,5069,5070,5071]},{"teal":4457,"source":"contracts/TownHall.algo.ts:35","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[5072]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiASAQAgBgIDDAUEBwgKDWDwkwnAhD0JCyYwCWdhbWVTdGF0ZRRqdXN0RWxpbWluYXRlZFBsYXllcgAPcGxheWVyMUFsZ29BZGRyD3BsYXllcjJBbGdvQWRkcg9wbGF5ZXIzQWxnb0FkZHIPcGxheWVyNEFsZ29BZGRyD3BsYXllcjVBbGdvQWRkcg9wbGF5ZXI2QWxnb0FkZHILbWFmaWFWaWN0aW0RbGFzdENvbW1pdGVkUm91bmQIAAAAAAAAAAANZG9jdG9yUGF0aWVudAgAAAAAAAAAAQZkb2N0b3IFbWFmaWEMcGxheWVyc0FsaXZlFHBsYXllcjFSZWNlaXZlZFZvdGVzFHBsYXllcjJSZWNlaXZlZFZvdGVzFHBsYXllcjNSZWNlaXZlZFZvdGVzFHBsYXllcjRSZWNlaXZlZFZvdGVzFHBsYXllcjVSZWNlaXZlZFZvdGVzFHBsYXllcjZSZWNlaXZlZFZvdGVzEWxzaWdGdW5kZXJBZGRyZXNzDHBsYXllcnNWb3RlZA5kb2N0b3JLZXlJbWFnZQ1wbGF5ZXJzSm9pbmVkDW1hZmlhS2V5SW1hZ2UHYnV0Y2hlcgdpbm5rZWVwBmZhcm1lcgZncm9jZXIPcGxheWVyMUhhc1ZvdGVkD3BsYXllcjJIYXNWb3RlZA9wbGF5ZXIzSGFzVm90ZWQPcGxheWVyNEhhc1ZvdGVkD3BsYXllcjVIYXNWb3RlZA9wbGF5ZXI2SGFzVm90ZWQEFR98dQ9idXRjaGVyS2V5SW1hZ2UPaW5ua2VlcEtleUltYWdlDmNyZWF0b3JBZGRyZXNzDmZhcm1lcktleUltYWdlDmdyb2NlcktleUltYWdlYBfx06cxl9eUJpVjjE+prA/DaIxPl3S5BaFOOj8XG6xYbFXoP/l6Gu/7OvAK2yLGuwiz9IHjqqDxoJ4w7XQdiuT89eCV1dAK9gDbGMssBLPt0DzHRKKIiuQMqiMpRsXn4RBkb2N0b3JDb21taXRtZW50D21hZmlhQ29tbWl0bWVudAMKgQExGBQlCzEZCI0MD/IAAAAAAAAAABCQD+QAAAAAAAAAAAAAAIgAAiJDigAAJykxAGcnFzIDZysyAycLUGcnBDIDJwtQZycFMgMnC1BnJwYyAycLUGcnBzIDJwtQZycIMgMnC1BnJw8yA2cnDjIDZyceMgNnJxwyA2cnHTIDZycfMgNnJyAjZychI2cnIiNnJyMjZyckI2cnJSNnJxgjZycRI2cnEiNnJxMjZycUI2cnFSNnJxYjZycYI2cnGiNnJxAlZykyA2cnCTIDZycMMgNnKCNnJwojZ4knJjYaAReIAAUWULAiQ4oBAYv/iScmNhoEVwIANhoDVwIANhoCVwIANhoBVwIAiAALgAEAI08CVFCwIkOKBAEqSYv/i/6L/VBQAowAiwCAIHPtp1MpnX1IMznYCAmh2AVTvaQC//5b/v////8AAAABqowBi/2L/4v84QKL/osB4QLgAhKMAEYBiScmNhoBVwIAiAAMSRUWVwYCTFBQsCJDigEBKkcCi/8CjACLAIAwGgER6jl/5ppLG6e2Q0us12R3S4TzhRK/ZzDSoPaw9iQeq//+sVP//7n+/////6qrqowBiwHlAowCiwKMAEYCiScmiAAFFlCwIkOKAAEoZIk2GgFJFSQSRIgAAiJDigEAKGQjEkQxACcpZBJEJxdkMgMSRIv/MgMTRCcXi/9nKCJniTYaAVcCADEWIglJOBAiEkSIAAIiQ4oCACpHAyhkIhJEJxpkJQxEK2RXACAxABJJQAAKJwRkVwAgMQASEUlAAAonBWRXACAxABIRSUAACicGZFcAIDEAEhFJQAAKJwdkVwAgMQASEUlAAAonCGRXACAxABIRQQABAIv/OAiBsJhGD0SL/lcAYIwAi/5XYGCMAYv+V8BgjAKL/oGgAiRYjAOLA4sCiwGLAIj+YEQnC71MSBRBAAknCyENuUhCAAknC0m9RCENCNMnC71MSEQnCycaZCENC4sBuycaZCIIJxpMZycXZDIDE0QnCmQjEkSxIrIQIQ6yCCcXZLIHI7IBsytkVwAgMgMSQQAKK2QjMQBdK0xniScEZFcAIDIDEkEADCcEZCMxAF0nBExniScFZFcAIDIDEkEADCcFZCMxAF0nBUxniScGZFcAIDIDEkEADCcGZCMxAF0nBkxniScHZFcAIDIDEkEADCcHZCMxAF0nB0xniScIZFcAIDIDEkEAFScIZCMxAF0nCExnKCEEZycKMgZniQCJMRYiCUk4ECISRDEWIQQJSTgQIhJEMRYhBQlJOBAiEkQxFiEICUk4ECISRDEWIQcJSTgQIhJEMRYlCUk4ECISRDEWIQkJSTgQIhJENhoFVwIANhoEVwIANhoDVwIANhoCVwIANhoBVwIAiAACIkOKDAAoZCEEEkSL/QG9TEgURIv9ASO5SIv/MQAyClASRCcLI4HABLqL/hJEi/k4AIAgzLQouthhWagOHpykJOujZhL0kdCQoikHHANK1L/euscSRIv4OACAIOBuZLwA97plq1LmVK8cRAY71oDgVNyeeSDVG6IjO1RlEkSL9zgAgCBZB3O8N7+Jzczy0w1YoX/XMzqBdpw13zHgH7Ktz3YphBJEi/Y4AIAgXQny4z3gQoUwS6xmGNaez5qTnz0lbG6tyLrWdrug82sSRIv1OACAID/Pfy8Uhn6MhNsZRn4XPwK0qntj5nC2xqcd5848tKGuEkSL9DgAgCAB/BCozzr6UnvXE/wV1cJUwbgP+CpuApGw4B/tFFxFSxJEi/o4ACcXZBJEi/o4BzEAEkSL+jgIIQ4SRDIGJwpkIQQIDUEABSghDGeJJw9kMgMSQQAQJw8xAGcnG4v9ZycKMgZniScOZDIDEkEAECcOMQBnJxmL/WcnCjIGZ4knHmQyAxJBABAnHjEAZycqi/1nJwoyBmeJJxxkMgMSQQAQJxwxAGcnJ4v9ZycKMgZniScdZDIDEkEAECcdMQBnJyiL/WcnCjIGZ4knH2QyAxJBABQnHzEAZycri/1nKCEFZycKMgZniQCJNhoBF4gAAiJDigEAKGQhBRJEi/8jDUlBAAaL/yEJDBBEMQArZFcAIBJJQAAKMQAnBGRXACASEUlAAAoxACcFZFcAIBIRSUAACjEAJwZkVwAgEhFJQAAKMQAnB2RXACASEUlAAAoxACcIZFcAIBIRFEEAAQCL/yISSUEACStkVwAgMgMTEEEADCcRZCIIJxFMZ0IAqov/IQQSSUEACicEZFcAIDIDExBBAAwnEmQiCCcSTGdCAIiL/yEFEklBAAonBWRXACAyAxMQQQAMJxNkIggnE0xnQgBmi/8hCBJJQQAKJwZkVwAgMgMTEEEADCcUZCIIJxRMZ0IARIv/IQcSSUEACicHZFcAIDIDExBBAAwnFWQiCCcVTGdCACKL/yUSSUEACicIZFcAIDIDExBBAAwnFmQiCCcWTGdCAAEAMQArZFcAIBJJQQAGJyBkIxIQQQAHJyAiZ0IAkjEAJwRkVwAgEklBAAYnIWQjEhBBAAcnISJnQgB1MQAnBWRXACASSUEABiciZCMSEEEAByciImdCAFgxACcGZFcAIBJJQQAGJyNkIxIQQQAHJyMiZ0IAOzEAJwdkVwAgEklBAAYnJGQjEhBBAAcnJCJnQgAeMQAnCGRXACASSUEABiclZCMSEEEAByclImdCAAEAJxhkIggnGExnJxhkJxBkEkEAICghCGcnGCNnJyAjZychI2cnIiNnJyMjZyckI2cnJSNniYgAAiJDigAAKkkoZCEIEkQpMgNnI4wAMgYhBBgjEowBJxFkiwANSUAADicRZIsAEklBAAOLARARQQAMKStkVwAgZycRZIwAJxJkiwANSUAADicSZIsAEklBAAOLARARQQANKScEZFcAIGcnEmSMACcTZIsADUlAAA4nE2SLABJJQQADiwEQEUEADSknBWRXACBnJxNkjAAnFGSLAA1JQAAOJxRkiwASSUEAA4sBEBFBAA0pJwZkVwAgZycUZIwAJxVkiwANSUAADicVZIsAEklBAAOLARARQQANKScHZFcAIGcnFWSMACcWZIsADUlAAA4nFmSLABJJQQADiwEQEUEADSknCGRXACBnJxZkjAApZDIDE0SLACMTRClkK2RXACASQQAJK2QnDVwgK0xnKWQnBGRXACASQQALJwRkJw1cICcETGcpZCcFZFcAIBJBAAsnBWQnDVwgJwVMZylkJwZkVwAgEkEACycGZCcNXCAnBkxnKWQnB2RXACASQQALJwdkJw1cICcHTGcpZCcIZFcAIBJBAAsnCGQnDVwgJwhMZycQZCIJJxBMZycRI2cnEiNnJxMjZycUI2cnFSNnJxYjZyghB2eJNhoBVwIAiAACIkOKAQAqRwIoZCEHEkQpZDEAEkQnLIv/4QKMAIsAiPd4jAGLAYv/4QKMAosCJxtkEkEADycPMgNnKCEGZycKMgZniYsCJxlkEkEABScOMgNnKTIDZycQZCEEDkEACighBmcnCjIGZ4koJWcnCjIGZ4k2GgFXAgCIAAIiQ4oBAChkJRJEMQAnD2QSRCcui/9nJw5kMgMSQQAHKCEKZ0IABCghCWeJNhoBVwIAiAACIkOKAQAoZCEJEkQxACcOZBJEJw5kMgMTRCcti/9nKCEKZ4k2GgJJFSQSRDYaAUkVJBJEiAACIkOKAgAqKGQhChJEMQAnD2QSRIv/MgMTRIv/i/5QAYwAiwAnLmQSRIv/K2RXACASQQALJwkrZFcAIGdCAH2L/ycEZFcAIBJBAAwnCScEZFcAIGdCAGWL/ycFZFcAIBJBAAwnCScFZFcAIGdCAE2L/ycGZFcAIBJBAAwnCScGZFcAIGdCADWL/ycHZFcAIBJBAAwnCScHZFcAIGdCAB2L/ycIZFcAIBJBAAwnCScIZFcAIGdCAAUnCTIDZycOZDIDEkEAByghC2dCAAQoIRBniTYaAkkVJBJENhoBSRUkEkSIAAIiQ4oCACooZCEQEkQxACcOZBJEJwxkMgMSRIv/MgMTRIv/i/5QAYwAiwAnLWQSRIv/K2RXACASQQALJwwrZFcAIGdCAH2L/ycEZFcAIBJBAAwnDCcEZFcAIGdCAGWL/ycFZFcAIBJBAAwnDCcFZFcAIGdCAE2L/ycGZFcAIBJBAAwnDCcGZFcAIGdCADWL/ycHZFcAIBJBAAwnDCcHZFcAIGdCAB2L/ycIZFcAIBJBAAwnDCcIZFcAIGdCAAUnDDIDZyghC2eJiAACIkOKAAAoZCELEkQnCWQyAxJJQAAIJwlkJwxkEhFBAA8nCTIDZycMMgNnKCEFZ4knCWQrZFcAIBJBABMpK2RXACBnK2QnDVwgK0xnQgCwJwlkJwRkVwAgEkEAFiknBGRXACBnJwRkJw1cICcETGdCAI0nCWQnBWRXACASQQAWKScFZFcAIGcnBWQnDVwgJwVMZ0IAaicJZCcGZFcAIBJBABYpJwZkVwAgZycGZCcNXCAnBkxnQgBHJwlkJwdkVwAgEkEAFiknB2RXACBnJwdkJw1cICcHTGdCACQnCWQnCGRXACASQQAWKScIZFcAIGcnCGQnDVwgJwhMZ0IAAQAnEGQiCScQTGcnCTIDZycMMgNnJxBkIQQOQQAFKCEGZ4koIRFniTYaAVcCAIgAAiJDigEAKkcCKGQhERJEKWQxABJEJyyL/+ECjACLAIjzuowBiwGL/+ECjAKLAicbZBJBAA8oIQZnJw8yA2cnCjIGZ4mLAicZZBJBAAUnDjIDZykyA2coIQVnJwoyBmeJiAACIkOKAAAqKGQhBhJEiAG3IQ8yAAmMALEishCLALIIK2RXACCyBzIAsgGzsSKyEIsAsggnBGRXACCyBzIAsgGzsSKyEIsAsggnBWRXACCyBzIAsgGzsSKyEIsAsggnBmRXACCyBzIAsgGzsSKyEIsAsggnB2RXACCyBzIAsgGzsSKyEIsAsggnCGRXACCyBzIAsgGziYgAAiJDigAAKkcCKGQhDBJEiACOjAAnC7whDyUdI4sAFSQKH0hITBREMgAJjAEjjAKLAosAFSQKDEEAQzIMgZADDEEAE7ElshAjsgEnL0myHrIfIQeyGbOxIrIQiwGyCIsANf8jiwIkCwg0/0wkWLIHMgCyAbOLAiIIjAJC/7KJiAACIkOKAAAyBicKZCEECA1EiAANFSQKJQxBAAQoIQxniYoAASoqjAAnD2QyAxNBAA2LACcPZFCMACcbZAG8Jw5kMgMTQQANiwAnDmRQjAAnGWQBvCccZDIDE0EADYsAJxxkUIwAJydkAbwnHWQyAxNBAA2LACcdZFCMACcoZAG8Jx5kMgMTQQANiwAnHmRQjAAnKmQBvCcfZDIDE0EADYsAJx9kUIwAJytkAbyLAIwAiYoAACcLvCcbZAG8JxlkAbwnKmQBvCcnZAG8JyhkAbwnK2QBvImIAAIiQ4oAAChkIQYPRLEishAnKWSyCSOyAbOJgAS4RHs2NhoAjgHwEACABHDO6huABKAXvYyABNdyzbyABPVAuiyABP9jDv2ABFTZK+OABJsHv4+ABE+xIbuABMQjYWmABO6fNhqABAtedYWABMhkWHWABO3EhruABHc3YuWABDmV7WqABO9lppeABGrbRTiABKhoPp6ABFA2Ojg2GgCOE/An8DvwsPEW8SbxWPLv9T73Xvkl+Z/50/n/+uL7vPzj/Uv94v5iAIAEJIfDLDYaAI4B/ysA","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'setLSIGFunderAddress(address)void': {
      funderLSigAddress: string
    }
    'joinGameLobby(pay,byte[])void': {
      depositTxn: AppMethodCallTransactionArgument
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      funderLSigTxn: AppMethodCallTransactionArgument
      ringLSigTxn0: AppMethodCallTransactionArgument
      ringLSigTxn1: AppMethodCallTransactionArgument
      ringLSigTxn2: AppMethodCallTransactionArgument
      ringLSigTxn3: AppMethodCallTransactionArgument
      ringLSigTxn4: AppMethodCallTransactionArgument
      ringLSigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
    'handleAssignRolesTimeout()void': Record<string, never>
    'triggerTimeoutState()void': Record<string, never>
    'deleteApplication()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'setLSIGFunderAddress(address)void': [funderLSigAddress: string]
    'joinGameLobby(pay,byte[])void': [depositTxn: AppMethodCallTransactionArgument, nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, funderLSigTxn: AppMethodCallTransactionArgument, ringLSigTxn0: AppMethodCallTransactionArgument, ringLSigTxn1: AppMethodCallTransactionArgument, ringLSigTxn2: AppMethodCallTransactionArgument, ringLSigTxn3: AppMethodCallTransactionArgument, ringLSigTxn4: AppMethodCallTransactionArgument, ringLSigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
    'handleAssignRolesTimeout()void': []
    'triggerTimeoutState()void': []
    'deleteApplication()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'setLSIGFunderAddress(address)void': void
  'joinGameLobby(pay,byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
  'handleAssignRolesTimeout()void': void
  'triggerTimeoutState()void': void
  'deleteApplication()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'setLSIGFunderAddress(address)void' | 'setLSIGFunderAddress', {
      argsObj: TownHallArgs['obj']['setLSIGFunderAddress(address)void']
      argsTuple: TownHallArgs['tuple']['setLSIGFunderAddress(address)void']
      returns: TownHallReturns['setLSIGFunderAddress(address)void']
    }>
    & Record<'joinGameLobby(pay,byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(pay,byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']
      returns: TownHallReturns['joinGameLobby(pay,byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
    & Record<'handleAssignRolesTimeout()void' | 'handleAssignRolesTimeout', {
      argsObj: TownHallArgs['obj']['handleAssignRolesTimeout()void']
      argsTuple: TownHallArgs['tuple']['handleAssignRolesTimeout()void']
      returns: TownHallReturns['handleAssignRolesTimeout()void']
    }>
    & Record<'triggerTimeoutState()void' | 'triggerTimeoutState', {
      argsObj: TownHallArgs['obj']['triggerTimeoutState()void']
      argsTuple: TownHallArgs['tuple']['triggerTimeoutState()void']
      returns: TownHallReturns['triggerTimeoutState()void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: TownHallArgs['obj']['deleteApplication()void']
      argsTuple: TownHallArgs['tuple']['deleteApplication()void']
      returns: TownHallReturns['deleteApplication()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        creatorAddress: string
        player1AlgoAddr: [string, bigint]
        player2AlgoAddr: [string, bigint]
        player3AlgoAddr: [string, bigint]
        player4AlgoAddr: [string, bigint]
        player5AlgoAddr: [string, bigint]
        player6AlgoAddr: [string, bigint]
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        farmerKeyImage: BinaryState
        butcher: string
        butcherKeyImage: BinaryState
        innkeep: string
        innkeepKeyImage: BinaryState
        grocer: string
        grocerKeyImage: BinaryState
        lsigFunderAddress: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
        lastCommitedRound: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type TownHallDeleteCallParams =
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: TownHallDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends TownHallDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return TownHallParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the TownHall smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setLSIGFunderAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setLSIGFunderAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.funderLSigAddress],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(pay,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(pay,byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.depositTxn, params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.funderLSigTxn, params.args.ringLSigTxn0, params.args.ringLSigTxn1, params.args.ringLSigTxn2, params.args.ringLSigTxn3, params.args.ringLSigTxn4, params.args.ringLSigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the handleAssignRolesTimeout()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static handleAssignRolesTimeout(params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'handleAssignRolesTimeout()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the triggerTimeoutState()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static triggerTimeoutState(params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'triggerTimeoutState()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? TownHallParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (TownHallDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(TownHallParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    handleAssignRolesTimeout: (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    triggerTimeoutState: (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.triggerTimeoutState(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    handleAssignRolesTimeout: (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    triggerTimeoutState: (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.triggerTimeoutState(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(TownHallParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | TownHallReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setLsigFunderAddress: async (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.setLsigFunderAddress(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['setLSIGFunderAddress(address)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(pay,byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    handleAssignRolesTimeout: async (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['handleAssignRolesTimeout()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    triggerTimeoutState: async (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.triggerTimeoutState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['triggerTimeoutState()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          creatorAddress: result.creatorAddress,
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          farmerKeyImage: new BinaryStateValue(result.farmerKeyImage),
          butcher: result.butcher,
          butcherKeyImage: new BinaryStateValue(result.butcherKeyImage),
          innkeep: result.innkeep,
          innkeepKeyImage: new BinaryStateValue(result.innkeepKeyImage),
          grocer: result.grocer,
          grocerKeyImage: new BinaryStateValue(result.grocerKeyImage),
          lsigFunderAddress: result.lsigFunderAddress,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
          lastCommitedRound: result.lastCommitedRound,
        }
      },
      /**
       * Get the current value of the creatorAddress key in global state
       */
      creatorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("creatorAddress")) as string | undefined },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the farmerKeyImage key in global state
       */
      farmerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("farmerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the butcherKeyImage key in global state
       */
      butcherKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("butcherKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the innkeepKeyImage key in global state
       */
      innkeepKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("innkeepKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the grocerKeyImage key in global state
       */
      grocerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("grocerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the lsigFunderAddress key in global state
       */
      lsigFunderAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("lsigFunderAddress")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
      /**
       * Get the current value of the lastCommitedRound key in global state
       */
      lastCommitedRound: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastCommitedRound")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a setLSIGFunderAddress(address)void method call against the TownHall contract
       */
      setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setLsigFunderAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a joinGameLobby(pay,byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a handleAssignRolesTimeout()void method call against the TownHall contract
       */
      handleAssignRolesTimeout(params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.handleAssignRolesTimeout(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a triggerTimeoutState()void method call against the TownHall contract
       */
      triggerTimeoutState(params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.triggerTimeoutState(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the setLSIGFunderAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setLsigFunderAddress(params?: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']>): TownHallComposer<[...TReturns, TownHallReturns['setLSIGFunderAddress(address)void'] | undefined]>

  /**
   * Calls the joinGameLobby(pay,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(pay,byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Calls the handleAssignRolesTimeout()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  handleAssignRolesTimeout(params?: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']>): TownHallComposer<[...TReturns, TownHallReturns['handleAssignRolesTimeout()void'] | undefined]>

  /**
   * Calls the triggerTimeoutState()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  triggerTimeoutState(params?: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']>): TownHallComposer<[...TReturns, TownHallReturns['triggerTimeoutState()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): TownHallComposer<[...TReturns, TownHallReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

